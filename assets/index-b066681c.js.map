{"version":3,"file":"index-b066681c.js","sources":["../../src/utils/cn.ts","../../src/components/ui/avatar.tsx","../../src/components/ui/button.tsx","../../src/components/ui/input.tsx","../../src/contexts/AuthContext.tsx","../../src/layouts/MainLayout.tsx","../../src/components/ui/card.tsx","../../src/components/ui/use-toast.ts","../../src/pages/auth/Login.tsx","../../src/pages/dashboard/Dashboard.tsx","../../src/components/ui/dropdown-menu.tsx","../../src/components/ui/badge.tsx","../../src/components/ui/skeleton.tsx","../../src/pages/sops/SOPs.tsx","../../src/components/ui/breadcrumb.tsx","../../src/components/ui/alert-dialog.tsx","../../src/pages/sops/SOPDetail.tsx","../../src/components/ui/textarea.tsx","../../src/components/ui/label.tsx","../../src/components/ui/select.tsx","../../src/components/ui/tabs.tsx","../../src/pages/sops/SOPEdit.tsx","../../src/pages/scripts/Scripts.tsx","../../src/pages/scripts/ScriptDetail.tsx","../../src/pages/scripts/ScriptEdit.tsx","../../src/pages/forms/Forms.tsx","../../src/pages/forms/FormDetail.tsx","../../src/lib/utils.ts","../../src/components/ui/checkbox.tsx","../../src/pages/forms/FormEdit.tsx","../../src/pages/tools/Tools.tsx","../../src/pages/tools/MortgageCalculator.tsx","../../src/components/ui/table.tsx","../../src/pages/tools/RateComparisonTool.tsx","../../src/pages/tools/DocumentFinder.tsx","../../src/components/ui/slider.tsx","../../src/components/ui/switch.tsx","../../src/components/ui/accordion.tsx","../../src/pages/tools/ClosingCostEstimator.tsx","../../src/pages/tools/PropertyLookupTool.tsx","../../src/pages/tools/SchedulingAssistant.tsx","../../src/components/ui/radio-group.tsx","../../src/pages/tools/LoanProgramFinder.tsx","../../src/pages/tools/DataExportTool.tsx","../../src/pages/settings/Settings.tsx","../../src/components/RequireAuth.tsx","../../src/utils/contentProtection.ts","../../src/components/ui/toast.tsx","../../src/components/ui/toaster.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]): string {\n  return twMerge(clsx(inputs))\n}","import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }","import * as React from \"react\"\n\nimport { cn } from \"@/utils/cn\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }","import React, { createContext, useState, useContext, useEffect, ReactNode } from 'react';\n\n// Define user roles enum\nexport enum UserRole {\n  ADMIN = 'Admin',\n  LOAN_OFFICER = 'LO',\n  LOAN_OFFICER_ASSISTANT = 'LOA',\n}\n\n// Export USER_ROLES for compatibility with existing components\nexport const USER_ROLES = UserRole;\n\n// Define user interface\nexport interface User {\n  id: number;\n  email: string;\n  name: string;\n  role: UserRole;\n  avatar: string | null;\n}\n\n// Define mock user interface including password for authentication\ninterface MockUser extends User {\n  password: string;\n}\n\n// Define authentication context interface\ninterface AuthContextType {\n  currentUser: User | null;\n  login: (email: string, password: string) => boolean;\n  logout: () => void;\n  hasRole: (role: UserRole) => boolean;\n  isAdmin: () => boolean;\n  loading: boolean;\n}\n\n// Define props for the auth provider\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\n// Sample mock users for the MVP\nconst MOCK_USERS: MockUser[] = [\n  {\n    id: 1,\n    email: 'admin@mortgage.com',\n    password: 'admin123',\n    name: 'Admin User',\n    role: UserRole.ADMIN,\n    avatar: null,\n  },\n  {\n    id: 2,\n    email: 'lo@mortgage.com',\n    password: 'lo123',\n    name: 'Loan Officer',\n    role: UserRole.LOAN_OFFICER,\n    avatar: null,\n  },\n  {\n    id: 3,\n    email: 'loa@mortgage.com',\n    password: 'loa123',\n    name: 'Loan Officer Assistant',\n    role: UserRole.LOAN_OFFICER_ASSISTANT,\n    avatar: null,\n  },\n];\n\n// Create the AuthContext\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    // Check for saved user in local storage on initial load\n    const savedUser = localStorage.getItem('mortgagePortalUser');\n    if (savedUser) {\n      setCurrentUser(JSON.parse(savedUser));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = (email: string, password: string): boolean => {\n    // Find user with matching credentials\n    const user = MOCK_USERS.find(\n      (u) => u.email === email && u.password === password\n    );\n\n    if (user) {\n      // Create a safe user object (excluding password)\n      const safeUser: User = {\n        id: user.id,\n        email: user.email,\n        name: user.name,\n        role: user.role,\n        avatar: user.avatar,\n      };\n\n      // Save to state and local storage\n      setCurrentUser(safeUser);\n      localStorage.setItem('mortgagePortalUser', JSON.stringify(safeUser));\n      return true;\n    }\n    return false;\n  };\n\n  // Logout function\n  const logout = (): void => {\n    setCurrentUser(null);\n    localStorage.removeItem('mortgagePortalUser');\n  };\n\n  // Check if user has specific role\n  const hasRole = (role: UserRole): boolean => {\n    return currentUser?.role === role;\n  };\n\n  // Check if user has admin permissions\n  const isAdmin = (): boolean => {\n    return currentUser?.role === UserRole.ADMIN;\n  };\n\n  const value: AuthContextType = {\n    currentUser,\n    login,\n    logout,\n    hasRole,\n    isAdmin,\n    loading,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Custom hook to use the auth context\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};","import React, { useState, ReactNode } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport { \n  BookOpen, \n  FileText, \n  Home, \n  Menu, \n  PenTool, \n  Search, \n  Settings, \n  Calculator,\n  X, \n  LogOut,\n  ChevronDown\n} from 'lucide-react';\nimport { Avatar, AvatarFallback, AvatarImage } from '../components/ui/avatar';\nimport { Button } from '../components/ui/button';\nimport { Input } from '../components/ui/input';\nimport { useAuth } from '../contexts/AuthContext';\n\ninterface MainLayoutProps {\n  children: ReactNode;\n}\n\nconst MainLayout: React.FC<MainLayoutProps> = ({ children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const { currentUser, logout } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const handleLogout = () => {\n    logout();\n    navigate('/login');\n  };\n\n  const navigation = [\n    { name: 'Dashboard', href: '/dashboard', icon: Home },\n    { name: 'SOPs', href: '/sops', icon: BookOpen },\n    { name: 'Scripts', href: '/scripts', icon: FileText },\n    { name: 'Forms', href: '/forms', icon: PenTool },\n    { name: 'Tools', href: '/tools', icon: Calculator },\n    { name: 'Settings', href: '/settings', icon: Settings },\n  ];\n\n  const isActive = (path: string): boolean => {\n    return location.pathname === path;\n  };\n\n  return (\n    <div className=\"flex h-screen overflow-hidden bg-gray-100\">\n      {/* Sidebar for mobile */}\n      <div\n        className={`fixed inset-0 z-40 flex md:hidden ${\n          sidebarOpen ? 'block' : 'hidden'\n        }`}\n        role=\"dialog\"\n        aria-modal=\"true\"\n      >\n        <div\n          className=\"fixed inset-0 bg-gray-600 bg-opacity-75\"\n          aria-hidden=\"true\"\n          onClick={() => setSidebarOpen(false)}\n        ></div>\n\n        <div className=\"relative flex w-full max-w-xs flex-1 flex-col bg-white pb-4\">\n          <div className=\"absolute top-0 right-0 pt-2\">\n            <button\n              type=\"button\"\n              className=\"ml-1 flex h-10 w-10 items-center justify-center rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\n              onClick={() => setSidebarOpen(false)}\n            >\n              <span className=\"sr-only\">Close sidebar</span>\n              <X className=\"h-6 w-6\" aria-hidden=\"true\" />\n            </button>\n          </div>\n\n          <div className=\"flex flex-shrink-0 items-center px-4 py-5\">\n            <h1 className=\"text-xl font-bold\">Mortgage Team Portal</h1>\n          </div>\n\n          <div className=\"mt-5 h-0 flex-1 overflow-y-auto\">\n            <nav className=\"space-y-1 px-2\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`group flex items-center px-2 py-2 text-base font-medium rounded-md ${\n                    isActive(item.href)\n                      ? 'bg-primary text-white'\n                      : 'text-gray-600 hover:bg-gray-50'\n                  }`}\n                  onClick={() => setSidebarOpen(false)}\n                >\n                  <item.icon\n                    className={`mr-4 flex-shrink-0 h-6 w-6 ${\n                      isActive(item.href)\n                        ? 'text-white'\n                        : 'text-gray-400 group-hover:text-gray-500'\n                    }`}\n                    aria-hidden=\"true\"\n                  />\n                  {item.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      {/* Static sidebar for desktop */}\n      <div className=\"hidden md:flex md:w-64 md:flex-col md:fixed md:inset-y-0\">\n        <div className=\"flex flex-col flex-grow border-r border-gray-200 bg-white overflow-y-auto\">\n          <div className=\"flex items-center flex-shrink-0 px-4 py-5\">\n            <h1 className=\"text-lg font-bold\">Mortgage Team Portal</h1>\n          </div>\n          <div className=\"mt-5 flex-grow flex flex-col\">\n            <nav className=\"flex-1 px-2 pb-4 space-y-1\">\n              {navigation.map((item) => (\n                <Link\n                  key={item.name}\n                  to={item.href}\n                  className={`group flex items-center px-2 py-2 text-sm font-medium rounded-md ${\n                    isActive(item.href)\n                      ? 'bg-primary text-white'\n                      : 'text-gray-600 hover:bg-gray-50'\n                  }`}\n                >\n                  <item.icon\n                    className={`mr-3 flex-shrink-0 h-5 w-5 ${\n                      isActive(item.href)\n                        ? 'text-white'\n                        : 'text-gray-400 group-hover:text-gray-500'\n                    }`}\n                    aria-hidden=\"true\"\n                  />\n                  {item.name}\n                </Link>\n              ))}\n            </nav>\n          </div>\n        </div>\n      </div>\n\n      {/* Main content */}\n      <div className=\"flex flex-col flex-1 md:pl-64\">\n        <div className=\"sticky top-0 z-10 flex-shrink-0 flex h-16 bg-white shadow\">\n          <button\n            type=\"button\"\n            className=\"px-4 border-r border-gray-200 text-gray-500 md:hidden\"\n            onClick={() => setSidebarOpen(true)}\n          >\n            <span className=\"sr-only\">Open sidebar</span>\n            <Menu className=\"h-6 w-6\" aria-hidden=\"true\" />\n          </button>\n          \n          <div className=\"flex-1 px-4 flex justify-between\">\n            <div className=\"flex-1 flex\">\n              <div className=\"w-full flex md:ml-0 mt-2\">\n                <label htmlFor=\"search-field\" className=\"sr-only\">\n                  Search\n                </label>\n                <div className=\"relative w-full text-gray-400 focus-within:text-gray-600\">\n                  <div className=\"absolute inset-y-0 left-0 flex items-center pointer-events-none\">\n                    <Search className=\"h-5 w-5\" aria-hidden=\"true\" />\n                  </div>\n                  <Input\n                    id=\"search-field\"\n                    className=\"block w-full h-full pl-8 pr-3 py-2 border-transparent text-gray-900 placeholder-gray-500 focus:outline-none focus:placeholder-gray-400 focus:ring-0 focus:border-transparent sm:text-sm\"\n                    placeholder=\"Search resources\"\n                    type=\"search\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"ml-4 flex items-center md:ml-6\">\n              {/* Profile dropdown */}\n              <div className=\"ml-3 relative flex items-center\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"flex flex-col items-end\">\n                    <span className=\"text-sm font-medium text-gray-700\">{currentUser?.name}</span>\n                    <span className=\"text-xs text-gray-500\">{currentUser?.role}</span>\n                  </div>\n                  <Avatar>\n                    <AvatarImage src={currentUser?.avatar || ''} alt={currentUser?.name} />\n                    <AvatarFallback>{currentUser?.name?.[0]}</AvatarFallback>\n                  </Avatar>\n                  <Button \n                    variant=\"ghost\" \n                    className=\"p-1\"\n                    onClick={handleLogout}\n                  >\n                    <LogOut className=\"h-5 w-5 text-gray-500\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <main className=\"flex-1 overflow-y-auto p-6 bg-gray-100\">\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;","import * as React from \"react\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-xl border bg-card text-card-foreground shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardContent, CardFooter, CardTitle, CardDescription }","// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 5\nconst TOAST_REMOVE_DELAY = 5000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_VALUE\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Card, CardHeader, CardTitle, CardDescription, CardContent, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { AlertCircle } from 'lucide-react';\nimport { useToast } from '@/components/ui/use-toast';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { login } = useAuth();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n    setIsLoading(true);\n\n    try {\n      const success = login(email, password);\n      \n      if (success) {\n        toast({\n          title: \"Login successful\",\n          description: \"Welcome to the Mortgage Team Portal\",\n        });\n        navigate('/dashboard');\n      } else {\n        setError('Invalid email or password');\n      }\n    } catch (err) {\n      setError('Failed to log in. Please try again.');\n      console.error(err);\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gray-50 px-4\">\n      <Card className=\"w-full max-w-md\">\n        <CardHeader className=\"space-y-1\">\n          <CardTitle className=\"text-2xl font-bold text-center\">\n            Mortgage Team Portal\n          </CardTitle>\n          <CardDescription className=\"text-center\">\n            Enter your credentials to access the portal\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            {error && (\n              <div className=\"flex items-center gap-2 p-3 text-sm bg-destructive/10 border border-destructive text-destructive rounded\">\n                <AlertCircle className=\"h-4 w-4\" />\n                <span>{error}</span>\n              </div>\n            )}\n            \n            <div className=\"space-y-2\">\n              <label htmlFor=\"email\" className=\"text-sm font-medium\">\n                Email\n              </label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                placeholder=\"name@mortgage.com\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </div>\n            \n            <div className=\"space-y-2\">\n              <div className=\"flex items-center justify-between\">\n                <label htmlFor=\"password\" className=\"text-sm font-medium\">\n                  Password\n                </label>\n              </div>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </div>\n\n            <Button type=\"submit\" className=\"w-full\" disabled={isLoading}>\n              {isLoading ? 'Signing in...' : 'Sign In'}\n            </Button>\n          </form>\n        </CardContent>\n        <CardFooter className=\"flex flex-col space-y-4\">\n          <div className=\"text-xs text-center text-gray-500\">\n            <p>For demo, use the following credentials:</p>\n            <div className=\"grid grid-cols-3 gap-2 mt-2 text-center text-xs font-mono bg-muted p-2 rounded\">\n              <div>\n                <strong className=\"block\">Admin</strong>\n                <span>admin@mortgage.com</span>\n                <span className=\"block\">admin123</span>\n              </div>\n              <div>\n                <strong className=\"block\">Loan Officer</strong>\n                <span>lo@mortgage.com</span>\n                <span className=\"block\">lo123</span>\n              </div>\n              <div>\n                <strong className=\"block\">Assistant</strong>\n                <span>loa@mortgage.com</span>\n                <span className=\"block\">loa123</span>\n              </div>\n            </div>\n          </div>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n};\n\nexport default Login;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { \n  BookOpen, \n  FileText, \n  PenTool, \n  // Tool, \n  User,\n  Bell\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface Metric {\n  id: number;\n  name: string;\n  value: string;\n}\n\ninterface Update {\n  id: number;\n  title: string;\n  date: string;\n  type: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const { currentUser } = useAuth();\n\n  // Dashboard metrics (mock data)\n  const metrics: Metric[] = [\n    { id: 1, name: 'SOPs Available', value: '45' },\n    { id: 2, name: 'Training Scripts', value: '28' },\n    { id: 3, name: 'Recent Updates', value: '12' },\n    { id: 4, name: 'Forms', value: '8' },\n  ];\n\n  // Recent updates (mock data)\n  const recentUpdates: Update[] = [\n    { id: 1, title: 'New Loan Process SOP Added', date: '2 days ago', type: 'SOPs' },\n    { id: 2, title: 'Credit Pull Form Updated', date: '3 days ago', type: 'Forms' },\n    { id: 3, title: 'Refinance Script Updated', date: '5 days ago', type: 'Scripts' },\n    { id: 4, title: 'Rate Lock Policy Updated', date: '1 week ago', type: 'SOPs' },\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-bold tracking-tight\">Dashboard</h1>\n        <div className=\"flex items-center space-x-2\">\n          <span className=\"text-sm text-gray-500\">{new Date().toLocaleDateString()}</span>\n        </div>\n      </div>\n\n      {/* Welcome card */}\n      <Card>\n        <CardHeader className=\"pb-2\">\n          <CardTitle>Welcome, {currentUser.name}</CardTitle>\n          <CardDescription>\n            Here's what's happening in your mortgage team portal\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n            {metrics.map((metric) => (\n              <div\n                key={metric.id}\n                className=\"bg-white p-4 rounded-lg shadow-sm border border-gray-200\"\n              >\n                <div className=\"text-2xl font-bold\">{metric.value}</div>\n                <div className=\"text-sm text-gray-500\">{metric.name}</div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Quick access cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card className=\"col-span-1\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-lg flex items-center\">\n              <BookOpen className=\"mr-2 h-5 w-5 text-primary\" />\n              SOPs\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-sm text-gray-500\">\n              Access standard operating procedures and documentation.\n            </p>\n          </CardContent>\n          <CardFooter>\n            <Button asChild>\n              <Link to=\"/sops\">View SOPs</Link>\n            </Button>\n          </CardFooter>\n        </Card>\n\n        <Card className=\"col-span-1\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-lg flex items-center\">\n              <FileText className=\"mr-2 h-5 w-5 text-primary\" />\n              Scripts\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-sm text-gray-500\">\n              Access call scripts and conversation guides.\n            </p>\n          </CardContent>\n          <CardFooter>\n            <Button asChild>\n              <Link to=\"/scripts\">View Scripts</Link>\n            </Button>\n          </CardFooter>\n        </Card>\n\n        <Card className=\"col-span-1\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-lg flex items-center\">\n              <PenTool className=\"mr-2 h-5 w-5 text-primary\" />\n              Forms\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-sm text-gray-500\">\n              Access lead intake, credit pull requests, and other forms.\n            </p>\n          </CardContent>\n          <CardFooter>\n            <Button asChild>\n              <Link to=\"/forms\">View Forms</Link>\n            </Button>\n          </CardFooter>\n        </Card>\n\n        <Card className=\"col-span-1\">\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-lg flex items-center\">\n              {/* <Tool className=\"mr-2 h-5 w-5 text-primary\" /> */}\n              Tools\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-sm text-gray-500\">\n              Access calculators and reference tools.\n            </p>\n          </CardContent>\n          <CardFooter>\n            <Button asChild>\n              <Link to=\"/tools\">View Tools</Link>\n            </Button>\n          </CardFooter>\n        </Card>\n      </div>\n\n      {/* Recent updates */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center\">\n            <Bell className=\"mr-2 h-5 w-5\" />\n            Recent Updates\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {recentUpdates.map((update) => (\n              <div\n                key={update.id}\n                className=\"border-b border-gray-200 pb-3 last:border-0 last:pb-0\"\n              >\n                <div className=\"flex justify-between items-start\">\n                  <div>\n                    <h3 className=\"font-medium\">{update.title}</h3>\n                    <p className=\"text-sm text-gray-500\">{update.date}</p>\n                  </div>\n                  <span className=\"inline-flex items-center rounded-md bg-blue-100 px-2.5 py-0.5 text-xs font-medium text-blue-800\">\n                    {update.type}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n        <CardFooter>\n          <Button variant=\"outline\" className=\"w-full\">View All Updates</Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n};\n\nexport default Dashboard;","import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}","import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n        success: \"border-transparent bg-emerald-500 text-white hover:bg-emerald-500/80\",\n        warning: \"border-transparent bg-amber-500 text-white hover:bg-amber-500/80\",\n        info: \"border-transparent bg-blue-500 text-white hover:bg-blue-500/80\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","import { cn } from \"@/utils/cn\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Search, Filter, Plus, Folder, ChevronRight, LayoutGrid, List, SlidersHorizontal } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useAuth, UserRole } from '@/contexts/AuthContext';\n\n// Define SOP interface\ninterface SOP {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  description: string;\n}\n\n// SOP categories for filtering\nconst SOP_CATEGORIES = [\n  'All Categories',\n  'Loan Processing',\n  'Credit Verification',\n  'Verification',\n  'Rate Management',\n  'Closing',\n  'Quality Control',\n];\n\n// Mock SOP data\nconst MOCK_SOPS: SOP[] = [\n  {\n    id: 1,\n    title: 'Loan Application Process',\n    category: 'Loan Processing',\n    lastUpdated: '2023-04-15',\n    description: 'Standard operating procedure for processing loan applications from start to finish.',\n  },\n  {\n    id: 2,\n    title: 'Credit Check Guidelines',\n    category: 'Credit Verification',\n    lastUpdated: '2023-05-22',\n    description: 'Guidelines for performing credit checks and analyzing credit reports.',\n  },\n  {\n    id: 3,\n    title: 'Document Verification',\n    category: 'Verification',\n    lastUpdated: '2023-06-10',\n    description: 'Procedure for verifying income, employment, and asset documentation.',\n  },\n  {\n    id: 4,\n    title: 'Rate Lock Procedures',\n    category: 'Rate Management',\n    lastUpdated: '2023-04-30',\n    description: 'Process for locking in interest rates and managing rate lock expirations.',\n  },\n  {\n    id: 5,\n    title: 'Closing Preparation',\n    category: 'Closing',\n    lastUpdated: '2023-07-05',\n    description: 'Steps to prepare for loan closing, including final document review.',\n  },\n  {\n    id: 6,\n    title: 'Post-Closing Quality Control',\n    category: 'Quality Control',\n    lastUpdated: '2023-06-28',\n    description: 'Quality control procedures after loan closing.',\n  },\n];\n\n// SOP card component\ninterface SOPCardProps {\n  sop: SOP;\n  viewMode: 'grid' | 'list';\n}\n\nconst SOPCard: React.FC<SOPCardProps> = ({ sop, viewMode }) => {\n  const { isAdmin } = useAuth();\n  \n  if (viewMode === 'list') {\n    return (\n      <div className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"rounded-md bg-primary/10 p-2 text-primary\">\n            <Folder className=\"h-5 w-5\" />\n          </div>\n          <div>\n            <h3 className=\"font-medium\">{sop.title}</h3>\n            <div className=\"flex items-center gap-2 mt-1\">\n              <Badge variant=\"outline\">{sop.category}</Badge>\n              <span className=\"text-xs text-muted-foreground\">\n                Updated: {sop.lastUpdated}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" size=\"sm\" asChild>\n            <Link to={`/sops/${sop.id}`}>\n              View\n            </Link>\n          </Button>\n          {isAdmin() && (\n            <Button variant=\"outline\" size=\"sm\" asChild>\n              <Link to={`/sops/edit/${sop.id}`}>\n                Edit\n              </Link>\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <Card className=\"h-full overflow-hidden transition-all hover:shadow-md\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex justify-between items-start\">\n          <div className=\"space-y-1\">\n            <CardTitle className=\"text-base\">{sop.title}</CardTitle>\n            <CardDescription className=\"text-xs\">{sop.category}</CardDescription>\n          </div>\n          <div className=\"rounded-md bg-primary/10 p-2 text-primary\">\n            <Folder className=\"h-5 w-5\" />\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"pb-2\">\n        <p className=\"text-sm text-gray-700 line-clamp-2 protected-content\">{sop.description}</p>\n      </CardContent>\n      <CardFooter className=\"flex justify-between pt-0\">\n        <span className=\"text-xs text-muted-foreground\">\n          Last updated: {sop.lastUpdated}\n        </span>\n        <Button variant=\"ghost\" size=\"sm\" asChild className=\"gap-1 text-primary\">\n          <Link to={`/sops/${sop.id}`}>\n            View <ChevronRight className=\"h-3 w-3\" />\n          </Link>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst SOPs: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('All Categories');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [showFilters, setShowFilters] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n  const { isAdmin } = useAuth();\n\n  // Filter SOPs based on search term and category\n  const filteredSOPs = MOCK_SOPS.filter((sop) => {\n    const matchesSearch =\n      sop.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      sop.description.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesCategory =\n      selectedCategory === 'All Categories' || sop.category === selectedCategory;\n    \n    return matchesSearch && matchesCategory;\n  });\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">Standard Operating Procedures</h1>\n          <p className=\"text-muted-foreground\">Access and search all SOPs for the mortgage team</p>\n        </div>\n        {isAdmin() && (\n          <Button asChild>\n            <Link to=\"/sops/edit/new\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add New SOP\n            </Link>\n          </Button>\n        )}\n      </div>\n\n      {/* Search and filters */}\n      <div className=\"flex flex-col lg:flex-row gap-4\">\n        <div className=\"relative flex-1\">\n          <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n          <Input\n            placeholder=\"Search SOPs...\"\n            className=\"pl-10\"\n            value={searchTerm}\n            onChange={handleSearch}\n          />\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"gap-1\">\n                <Filter className=\"h-4 w-4\" />\n                {selectedCategory !== 'All Categories' ? selectedCategory : 'Category'}\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-56\">\n              <DropdownMenuLabel>Filter by Category</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuGroup>\n                {SOP_CATEGORIES.map((category) => (\n                  <DropdownMenuItem \n                    key={category}\n                    onClick={() => setSelectedCategory(category)}\n                    className={selectedCategory === category ? \"bg-primary/10\" : \"\"}\n                  >\n                    {category}\n                  </DropdownMenuItem>\n                ))}\n              </DropdownMenuGroup>\n            </DropdownMenuContent>\n          </DropdownMenu>\n          \n          <div className=\"flex items-center border rounded-md overflow-hidden\">\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className={`rounded-none ${viewMode === 'grid' ? 'bg-muted' : ''}`}\n              onClick={() => setViewMode('grid')}\n            >\n              <LayoutGrid className=\"h-4 w-4\" />\n            </Button>\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className={`rounded-none ${viewMode === 'list' ? 'bg-muted' : ''}`}\n              onClick={() => setViewMode('list')}\n            >\n              <List className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* SOPs List */}\n      {loading ? (\n        <div className={`grid grid-cols-1 ${viewMode === 'grid' ? 'md:grid-cols-2 lg:grid-cols-3' : ''} gap-4`}>\n          {Array(6).fill(0).map((_, index) => (\n            <Card key={index}>\n              <CardHeader className=\"pb-2\">\n                <Skeleton className=\"h-6 w-2/3\" />\n                <Skeleton className=\"h-4 w-20 mt-1\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-12 w-full\" />\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Skeleton className=\"h-4 w-24\" />\n                <Skeleton className=\"h-8 w-16\" />\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <>\n          {viewMode === 'grid' ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {filteredSOPs.map((sop) => (\n                <SOPCard key={sop.id} sop={sop} viewMode={viewMode} />\n              ))}\n            </div>\n          ) : (\n            <div className=\"flex flex-col gap-2\">\n              {filteredSOPs.map((sop) => (\n                <SOPCard key={sop.id} sop={sop} viewMode={viewMode} />\n              ))}\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Empty state */}\n      {filteredSOPs.length === 0 && !loading && (\n        <div className=\"flex flex-col items-center justify-center py-16 space-y-4\">\n          <div className=\"rounded-full bg-gray-100 p-4 text-gray-500\">\n            <Folder className=\"h-8 w-8\" />\n          </div>\n          <h3 className=\"text-lg font-medium\">No SOPs Found</h3>\n          <p className=\"text-muted-foreground max-w-md text-center\">\n            We couldn't find any SOPs matching your search criteria. Try adjusting your filters or search terms.\n          </p>\n          {searchTerm || selectedCategory !== 'All Categories' ? (\n            <Button variant=\"outline\" onClick={() => {\n              setSearchTerm('');\n              setSelectedCategory('All Categories');\n            }}>\n              Clear Filters\n            </Button>\n          ) : null}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SOPs;","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight } from \"lucide-react\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.HTMLAttributes<HTMLElement>\n>(({ className, ...props }, ref) => (\n  <nav\n    ref={ref}\n    aria-label=\"breadcrumb\"\n    className={cn(\n      \"flex flex-wrap items-center text-sm text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.OlHTMLAttributes<HTMLOListElement>\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.LiHTMLAttributes<HTMLLIElement>\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.AnchorHTMLAttributes<HTMLAnchorElement> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\n        \"transition-colors hover:text-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.HTMLAttributes<HTMLSpanElement>\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children || <ChevronRight className=\"h-4 w-4\" />}\n  </span>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <span className=\"h-1 w-1 rounded-full bg-muted-foreground\" />\n    <span className=\"mx-[3px] h-1 w-1 rounded-full bg-muted-foreground\" />\n    <span className=\"h-1 w-1 rounded-full bg-muted-foreground\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}","import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/utils/cn\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { \n  ArrowLeft, \n  Calendar, \n  Printer, \n  Edit, \n  Trash2,\n  AlertTriangle,\n  Share2,\n  Eye,\n  Download,\n  Clock,\n  User\n} from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { \n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { useToast } from '@/components/ui/use-toast';\nimport { useAuth, UserRole } from '@/contexts/AuthContext';\n\n// Define SOP interface\ninterface SOP {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  author: string;\n  version: string;\n  content: string;\n}\n\n// Mock SOP content data\nconst MOCK_SOP_CONTENT: Record<string, SOP> = {\n  '1': {\n    id: 1,\n    title: 'Loan Application Process',\n    category: 'Loan Processing',\n    lastUpdated: '2023-04-15',\n    author: 'John Smith',\n    version: '2.3',\n    content: `\n      <h2>1. Introduction</h2>\n      <p>This Standard Operating Procedure (SOP) outlines the steps and requirements for processing loan applications within our mortgage team. Following these procedures ensures consistency, compliance, and efficiency in the loan application process.</p>\n      \n      <h2>2. Scope</h2>\n      <p>This procedure applies to all mortgage loan applications received through our various channels (online, in-person, broker referrals). It covers the initial application receipt through submission to underwriting.</p>\n      \n      <h2>3. Responsibilities</h2>\n      <ul>\n        <li><strong>Loan Officers:</strong> Initial client contact, application intake, and preliminary qualification</li>\n        <li><strong>Loan Officer Assistants:</strong> Documentation collection, verification, and organization</li>\n        <li><strong>Processors:</strong> Application completion, system entry, and submission preparation</li>\n      </ul>\n      \n      <h2>4. Procedure</h2>\n      <h3>4.1 Application Receipt</h3>\n      <ol>\n        <li>Verify applicant identity using government-issued ID</li>\n        <li>Collect signed borrower authorization forms</li>\n        <li>Enter initial application data in the loan origination system within 24 hours of receipt</li>\n        <li>Send welcome package and disclosures within 48 hours</li>\n      </ol>\n      \n      <h3>4.2 Document Collection</h3>\n      <ol>\n        <li>Create digital loan folder with standardized naming convention: [LastName]_[LoanNumber]_[Date]</li>\n        <li>Request and verify the following documents:\n          <ul>\n            <li>Income verification (last 2 years W-2s, 1099s, tax returns)</li>\n            <li>Employment verification (30 days of pay stubs)</li>\n            <li>Asset documentation (2 months of bank statements)</li>\n            <li>Identity documentation (government-issued photo ID)</li>\n          </ul>\n        </li>\n        <li>Track missing documents using the Documentation Checklist form</li>\n      </ol>\n      \n      <h3>4.3 Credit Review</h3>\n      <ol>\n        <li>Pull tri-merge credit report after receiving authorization</li>\n        <li>Review credit scores and determine loan program eligibility</li>\n        <li>Identify any credit issues requiring explanation or resolution</li>\n        <li>Document all credit findings in the loan file notes</li>\n      </ol>\n      \n      <h3>4.4 Application Submission</h3>\n      <ol>\n        <li>Complete application package with all required documentation</li>\n        <li>Conduct quality check using the Pre-Submission Checklist</li>\n        <li>Submit completed file to underwriting department</li>\n        <li>Update loan status in the system and notify borrower of submission</li>\n      </ol>\n      \n      <h2>5. Quality Control</h2>\n      <p>Prior to submission to underwriting, files must undergo the following quality control checks:</p>\n      <ul>\n        <li>Ensure all required documents are present and properly signed</li>\n        <li>Verify data consistency across all application documents</li>\n        <li>Confirm preliminary DTI calculations meet program guidelines</li>\n        <li>Validate property information against preliminary title report</li>\n      </ul>\n      \n      <h2>6. References</h2>\n      <ul>\n        <li>Fannie Mae Selling Guide</li>\n        <li>FHA Handbook 4000.1</li>\n        <li>VA Lenders Handbook</li>\n        <li>Internal Documentation Checklist</li>\n        <li>Pre-Submission Quality Control Form</li>\n      </ul>\n    `,\n  },\n  '2': {\n    id: 2,\n    title: 'Credit Check Guidelines',\n    category: 'Credit Verification',\n    lastUpdated: '2023-05-22',\n    author: 'Sarah Johnson',\n    version: '1.5',\n    content: `\n      <h2>1. Introduction</h2>\n      <p>This SOP establishes the guidelines for performing credit checks and analyzing credit reports as part of the mortgage approval process.</p>\n      \n      <h2>2. Purpose</h2>\n      <p>The purpose of these guidelines is to ensure consistent and thorough evaluation of borrower creditworthiness in compliance with applicable regulations and internal standards.</p>\n      \n      <h2>3. Credit Report Requirements</h2>\n      <h3>3.1 Report Types</h3>\n      <ul>\n        <li>Tri-merge credit report (all three credit bureaus) is required for all loan applications</li>\n        <li>Single-bureau reports may be used for preliminary screening only</li>\n        <li>Reports must be no older than 30 days at the time of loan submission</li>\n      </ul>\n      \n      <h3>3.2 Authorization Requirements</h3>\n      <ul>\n        <li>Written authorization must be obtained from all applicants before pulling credit</li>\n        <li>Authorization forms must be stored in the loan file</li>\n        <li>Verbal authorizations must be documented with date, time, and loan officer name</li>\n      </ul>\n      \n      <h2>4. Credit Analysis Procedure</h2>\n      <h3>4.1 Credit Score Evaluation</h3>\n      <ol>\n        <li>Record the middle score from the three bureaus (not the average)</li>\n        <li>For multiple applicants, use the lowest middle score for qualification</li>\n        <li>Document score differences greater than 20 points between bureaus</li>\n      </ol>\n      \n      <h3>4.2 Credit History Review</h3>\n      <ol>\n        <li>Analyze payment history for the past 24 months</li>\n        <li>Identify all late payments, collections, charge-offs, and public records</li>\n        <li>Review credit inquiries within the last 120 days</li>\n        <li>Calculate debt-to-income ratio including all tradelines</li>\n      </ol>\n      \n      <h3>4.3 Red Flag Identification</h3>\n      <p>Document and investigate the following red flags:</p>\n      <ul>\n        <li>Address discrepancies or frequent changes</li>\n        <li>Recent significant increases in revolving debt</li>\n        <li>Multiple recent credit inquiries</li>\n        <li>Disputed accounts or fraud alerts</li>\n        <li>Authorized user accounts comprising major portion of credit history</li>\n      </ul>\n      \n      <h2>5. Documentation Requirements</h2>\n      <ol>\n        <li>Complete the Credit Analysis Worksheet for each application</li>\n        <li>Obtain written explanations for all derogatory items within the last 24 months</li>\n        <li>Include supporting documentation for any disputed information</li>\n        <li>Document compensating factors for borderline credit profiles</li>\n      </ol>\n      \n      <h2>6. Regulatory Compliance</h2>\n      <p>Ensure compliance with:</p>\n      <ul>\n        <li>Fair Credit Reporting Act (FCRA)</li>\n        <li>Equal Credit Opportunity Act (ECOA)</li>\n        <li>Risk-based pricing notification requirements</li>\n        <li>Adverse action notice requirements when applicable</li>\n      </ul>\n    `,\n  },\n};\n\nconst SOPDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const { isAdmin } = useAuth();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [sop, setSop] = useState<SOP | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showDeleteAlert, setShowDeleteAlert] = useState<boolean>(false);\n\n  useEffect(() => {\n    // In a real app, this would be an API call\n    const fetchSOP = () => {\n      setLoading(true);\n      // Simulate API delay\n      setTimeout(() => {\n        if (id && MOCK_SOP_CONTENT[id]) {\n          setSop(MOCK_SOP_CONTENT[id]);\n        }\n        setLoading(false);\n      }, 500);\n    };\n\n    fetchSOP();\n  }, [id]);\n\n  // Handle print functionality\n  const handlePrint = () => {\n    window.print();\n  };\n\n  // Handle delete SOP\n  const handleDelete = () => {\n    // In a real app, this would be an API call\n    setTimeout(() => {\n      toast({\n        title: \"SOP deleted\",\n        description: \"The SOP was successfully deleted\",\n      });\n      navigate('/sops');\n    }, 500);\n  };\n\n  // Disable right-click for content protection\n  useEffect(() => {\n    const handleContextMenu = (e: MouseEvent) => {\n      // Only prevent context menu on protected elements\n      if ((e.target as HTMLElement).closest('.protected-content')) {\n        e.preventDefault();\n        return false;\n      }\n      return true;\n    };\n\n    document.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      document.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"ghost\" size=\"sm\" asChild>\n            <Link to=\"/sops\">\n              <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back\n            </Link>\n          </Button>\n        </div>\n        \n        <div className=\"space-y-3\">\n          <Skeleton className=\"h-8 w-2/3\" />\n          <div className=\"flex space-x-4\">\n            <Skeleton className=\"h-5 w-40\" />\n            <Skeleton className=\"h-5 w-32\" />\n          </div>\n        </div>\n        \n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"space-y-4\">\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-24 w-full\" />\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-32 w-full\" />\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-48 w-full\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (!sop) {\n    return (\n      <div className=\"flex flex-col items-center justify-center py-16 space-y-4\">\n        <div className=\"rounded-full bg-yellow-100 p-4 text-yellow-500\">\n          <AlertTriangle className=\"h-8 w-8\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-center\">SOP Not Found</h2>\n        <p className=\"text-gray-600 text-center max-w-md\">\n          The SOP you're looking for doesn't exist or you don't have access to view it.\n        </p>\n        <Button onClick={() => navigate('/sops')}>\n          Back to SOPs\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Breadcrumb */}\n      <Breadcrumb className=\"mb-6\">\n        <BreadcrumbList>\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/sops\">SOPs</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink>{sop.title}</BreadcrumbLink>\n          </BreadcrumbItem>\n        </BreadcrumbList>\n      </Breadcrumb>\n\n      {/* Header with actions */}\n      <div className=\"flex flex-col gap-4 md:flex-row md:items-center md:justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">{sop.title}</h1>\n          <div className=\"flex flex-wrap gap-2 mt-2 items-center text-sm text-muted-foreground\">\n            <div className=\"flex items-center\">\n              <Calendar className=\"h-4 w-4 mr-1\" />\n              <span>Last updated: {sop.lastUpdated}</span>\n            </div>\n            <span>•</span>\n            <div className=\"flex items-center\">\n              <User className=\"h-4 w-4 mr-1\" />\n              <span>Author: {sop.author}</span>\n            </div>\n            <span>•</span>\n            <div className=\"flex items-center\">\n              <Clock className=\"h-4 w-4 mr-1\" />\n              <span>Version: {sop.version}</span>\n            </div>\n            <Badge variant=\"outline\" className=\"ml-2\">{sop.category}</Badge>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={handlePrint}>\n            <Printer className=\"h-4 w-4 mr-1\" /> Print\n          </Button>\n          \n          {isAdmin() && (\n            <>\n              <Button variant=\"outline\" size=\"sm\" onClick={() => navigate(`/sops/edit/${sop.id}`)}>\n                <Edit className=\"h-4 w-4 mr-1\" /> Edit\n              </Button>\n              \n              <AlertDialog open={showDeleteAlert} onOpenChange={setShowDeleteAlert}>\n                <AlertDialogTrigger asChild>\n                  <Button variant=\"destructive\" size=\"sm\">\n                    <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                  </Button>\n                </AlertDialogTrigger>\n                <AlertDialogContent>\n                  <AlertDialogHeader>\n                    <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                    <AlertDialogDescription>\n                      This action cannot be undone. This will permanently delete the SOP\n                      \"{sop.title}\" and remove it from the system.\n                    </AlertDialogDescription>\n                  </AlertDialogHeader>\n                  <AlertDialogFooter>\n                    <AlertDialogCancel>Cancel</AlertDialogCancel>\n                    <AlertDialogAction onClick={handleDelete} className=\"bg-destructive text-destructive-foreground\">\n                      Delete\n                    </AlertDialogAction>\n                  </AlertDialogFooter>\n                </AlertDialogContent>\n              </AlertDialog>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* SOP Content */}\n      <Card className=\"overflow-hidden\">\n        <CardContent className=\"p-6\">\n          <div className=\"print:pt-8\">\n            {/* Notice about copy protection */}\n            <div className=\"bg-amber-50 border-l-4 border-amber-400 p-4 mb-6 print:hidden flex items-start space-x-3\">\n              <AlertTriangle className=\"h-5 w-5 text-amber-500 mt-0.5 flex-shrink-0\" />\n              <div>\n                <h3 className=\"text-sm font-medium text-amber-800\">Confidential Document</h3>\n                <p className=\"text-sm text-amber-700 mt-0.5\">\n                  This document is protected. Unauthorized copying or distribution is prohibited.\n                </p>\n              </div>\n            </div>\n\n            {/* The actual SOP content - protected from copying */}\n            <div \n              className=\"prose prose-slate max-w-none protected-content\" \n              dangerouslySetInnerHTML={{ __html: sop.content }}\n            ></div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default SOPDetail;","import * as React from \"react\"\n\nimport { cn } from \"@/utils/cn\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }","import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }","import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}","import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { \n  ArrowLeft, \n  Save, \n  Trash2, \n  AlertTriangle,\n  FileText\n} from 'lucide-react';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@/components/ui/select';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { \n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useToast } from '@/components/ui/use-toast';\nimport { useAuth } from '@/contexts/AuthContext';\n\n// Define SOP interface\ninterface SOP {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  author: string;\n  version: string;\n  content: string;\n  description?: string;\n}\n\n// Mock SOP categories\nconst SOP_CATEGORIES = [\n  'Loan Processing',\n  'Credit Verification',\n  'Verification',\n  'Rate Management',\n  'Closing',\n  'Quality Control',\n];\n\n// Mock SOP content data\nconst MOCK_SOP_CONTENT: Record<string, SOP> = {\n  '1': {\n    id: 1,\n    title: 'Loan Application Process',\n    category: 'Loan Processing',\n    lastUpdated: '2023-04-15',\n    author: 'John Smith',\n    version: '2.3',\n    description: 'Standard operating procedure for processing loan applications from start to finish.',\n    content: `\n      <h2>1. Introduction</h2>\n      <p>This Standard Operating Procedure (SOP) outlines the steps and requirements for processing loan applications within our mortgage team. Following these procedures ensures consistency, compliance, and efficiency in the loan application process.</p>\n      \n      <h2>2. Scope</h2>\n      <p>This procedure applies to all mortgage loan applications received through our various channels (online, in-person, broker referrals). It covers the initial application receipt through submission to underwriting.</p>\n      \n      <h2>3. Responsibilities</h2>\n      <ul>\n        <li><strong>Loan Officers:</strong> Initial client contact, application intake, and preliminary qualification</li>\n        <li><strong>Loan Officer Assistants:</strong> Documentation collection, verification, and organization</li>\n        <li><strong>Processors:</strong> Application completion, system entry, and submission preparation</li>\n      </ul>\n      \n      <h2>4. Procedure</h2>\n      <h3>4.1 Application Receipt</h3>\n      <ol>\n        <li>Verify applicant identity using government-issued ID</li>\n        <li>Collect signed borrower authorization forms</li>\n        <li>Enter initial application data in the loan origination system within 24 hours of receipt</li>\n        <li>Send welcome package and disclosures within 48 hours</li>\n      </ol>\n      \n      <h3>4.2 Document Collection</h3>\n      <ol>\n        <li>Create digital loan folder with standardized naming convention: [LastName]_[LoanNumber]_[Date]</li>\n        <li>Request and verify the following documents:\n          <ul>\n            <li>Income verification (last 2 years W-2s, 1099s, tax returns)</li>\n            <li>Employment verification (30 days of pay stubs)</li>\n            <li>Asset documentation (2 months of bank statements)</li>\n            <li>Identity documentation (government-issued photo ID)</li>\n          </ul>\n        </li>\n        <li>Track missing documents using the Documentation Checklist form</li>\n      </ol>\n      \n      <h3>4.3 Credit Review</h3>\n      <ol>\n        <li>Pull tri-merge credit report after receiving authorization</li>\n        <li>Review credit scores and determine loan program eligibility</li>\n        <li>Identify any credit issues requiring explanation or resolution</li>\n        <li>Document all credit findings in the loan file notes</li>\n      </ol>\n      \n      <h3>4.4 Application Submission</h3>\n      <ol>\n        <li>Complete application package with all required documentation</li>\n        <li>Conduct quality check using the Pre-Submission Checklist</li>\n        <li>Submit completed file to underwriting department</li>\n        <li>Update loan status in the system and notify borrower of submission</li>\n      </ol>\n      \n      <h2>5. Quality Control</h2>\n      <p>Prior to submission to underwriting, files must undergo the following quality control checks:</p>\n      <ul>\n        <li>Ensure all required documents are present and properly signed</li>\n        <li>Verify data consistency across all application documents</li>\n        <li>Confirm preliminary DTI calculations meet program guidelines</li>\n        <li>Validate property information against preliminary title report</li>\n      </ul>\n      \n      <h2>6. References</h2>\n      <ul>\n        <li>Fannie Mae Selling Guide</li>\n        <li>FHA Handbook 4000.1</li>\n        <li>VA Lenders Handbook</li>\n        <li>Internal Documentation Checklist</li>\n        <li>Pre-Submission Quality Control Form</li>\n      </ul>\n    `,\n  },\n};\n\n// Default new SOP template\nconst DEFAULT_NEW_SOP: Omit<SOP, 'id'> = {\n  title: '',\n  category: 'Loan Processing',\n  lastUpdated: new Date().toISOString().split('T')[0],\n  author: '',\n  version: '1.0',\n  description: '',\n  content: `\n    <h2>1. Introduction</h2>\n    <p>Enter the introduction to this SOP here.</p>\n    \n    <h2>2. Scope</h2>\n    <p>Define the scope of this procedure.</p>\n    \n    <h2>3. Responsibilities</h2>\n    <ul>\n      <li>Enter responsibilities here</li>\n    </ul>\n    \n    <h2>4. Procedure</h2>\n    <h3>4.1 [Step Title]</h3>\n    <ol>\n      <li>Enter procedure steps here</li>\n    </ol>\n    \n    <h2>5. References</h2>\n    <ul>\n      <li>Enter references here</li>\n    </ul>\n  `,\n};\n\nconst SOPEdit: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const isEditing = id !== 'new';\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const { currentUser } = useAuth();\n  \n  const [sop, setSop] = useState<SOP | (Omit<SOP, 'id'> & { id?: number })>(\n    isEditing ? { id: 0, title: '', category: '', lastUpdated: '', author: '', version: '', content: '' } : DEFAULT_NEW_SOP\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showDeleteAlert, setShowDeleteAlert] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"edit\");\n  const [saving, setSaving] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchSOP = () => {\n      setLoading(true);\n      // Simulate API delay\n      setTimeout(() => {\n        if (isEditing && id && MOCK_SOP_CONTENT[id]) {\n          setSop(MOCK_SOP_CONTENT[id]);\n        } else if (!isEditing) {\n          // Set default author to current user\n          setSop({\n            ...DEFAULT_NEW_SOP,\n            author: currentUser?.name || '',\n          });\n        }\n        setLoading(false);\n      }, 500);\n    };\n\n    fetchSOP();\n  }, [id, isEditing, currentUser]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setSop(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCategoryChange = (value: string) => {\n    setSop(prev => ({ ...prev, category: value }));\n  };\n\n  const handleSave = () => {\n    setSaving(true);\n    \n    // In a real app, this would be an API call\n    setTimeout(() => {\n      setSaving(false);\n      \n      toast({\n        title: isEditing ? \"SOP updated\" : \"SOP created\",\n        description: isEditing \n          ? `SOP \"${sop.title}\" has been updated successfully` \n          : `SOP \"${sop.title}\" has been created successfully`,\n      });\n      \n      navigate(isEditing ? `/sops/${id}` : '/sops');\n    }, 1000);\n  };\n\n  const handleDelete = () => {\n    // In a real app, this would be an API call\n    setTimeout(() => {\n      toast({\n        title: \"SOP deleted\",\n        description: \"The SOP was successfully deleted\",\n      });\n      navigate('/sops');\n    }, 500);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-4 mb-6\">\n          <Button variant=\"ghost\" size=\"sm\" asChild>\n            <Link to=\"/sops\">\n              <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back\n            </Link>\n          </Button>\n          <Skeleton className=\"h-4 w-40\" />\n        </div>\n        \n        <div className=\"space-y-3\">\n          <Skeleton className=\"h-8 w-2/3\" />\n        </div>\n        \n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-8 w-60\" />\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-60 w-full\" />\n          </CardContent>\n          <CardFooter>\n            <Skeleton className=\"h-10 w-24\" />\n          </CardFooter>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Breadcrumb */}\n      <Breadcrumb className=\"mb-6\">\n        <BreadcrumbList>\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/sops\">SOPs</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink>{isEditing ? `Edit: ${sop.title}` : \"Create New SOP\"}</BreadcrumbLink>\n          </BreadcrumbItem>\n        </BreadcrumbList>\n      </Breadcrumb>\n\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">\n            {isEditing ? `Edit SOP: ${sop.title}` : \"Create New SOP\"}\n          </h1>\n          <p className=\"text-muted-foreground\">\n            {isEditing ? \"Update the SOP details and content\" : \"Create a new standard operating procedure document\"}\n          </p>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          {isEditing && (\n            <AlertDialog open={showDeleteAlert} onOpenChange={setShowDeleteAlert}>\n              <AlertDialogTrigger asChild>\n                <Button variant=\"destructive\" size=\"sm\">\n                  <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                </Button>\n              </AlertDialogTrigger>\n              <AlertDialogContent>\n                <AlertDialogHeader>\n                  <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                  <AlertDialogDescription>\n                    This action cannot be undone. This will permanently delete the SOP\n                    \"{sop.title}\" and remove it from the system.\n                  </AlertDialogDescription>\n                </AlertDialogHeader>\n                <AlertDialogFooter>\n                  <AlertDialogCancel>Cancel</AlertDialogCancel>\n                  <AlertDialogAction onClick={handleDelete} className=\"bg-destructive text-destructive-foreground\">\n                    Delete\n                  </AlertDialogAction>\n                </AlertDialogFooter>\n              </AlertDialogContent>\n            </AlertDialog>\n          )}\n          \n          <Button onClick={handleSave} disabled={saving}>\n            <Save className=\"h-4 w-4 mr-1\" /> \n            {saving ? 'Saving...' : 'Save SOP'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Content Tabs */}\n      <Tabs defaultValue=\"edit\" value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"edit\">Edit Content</TabsTrigger>\n          <TabsTrigger value=\"preview\">Preview</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"edit\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                SOP Information\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"title\">Title</Label>\n                  <Input \n                    id=\"title\" \n                    name=\"title\" \n                    value={sop.title} \n                    onChange={handleChange} \n                    placeholder=\"Enter SOP title\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"category\">Category</Label>\n                  <Select \n                    value={sop.category} \n                    onValueChange={handleCategoryChange}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select category\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {SOP_CATEGORIES.map(category => (\n                        <SelectItem key={category} value={category}>\n                          {category}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"author\">Author</Label>\n                  <Input \n                    id=\"author\" \n                    name=\"author\" \n                    value={sop.author} \n                    onChange={handleChange} \n                    placeholder=\"Enter author name\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"version\">Version</Label>\n                  <Input \n                    id=\"version\" \n                    name=\"version\" \n                    value={sop.version} \n                    onChange={handleChange} \n                    placeholder=\"Enter version (e.g., 1.0)\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"description\">Description</Label>\n                <Textarea \n                  id=\"description\" \n                  name=\"description\" \n                  value={sop.description || ''}\n                  onChange={handleChange} \n                  placeholder=\"Enter a brief description of this SOP\"\n                  className=\"min-h-[80px]\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"content\">Content (HTML)</Label>\n                <div className=\"border rounded-md\">\n                  <Textarea \n                    id=\"content\" \n                    name=\"content\" \n                    value={sop.content} \n                    onChange={handleChange} \n                    placeholder=\"Enter the SOP content in HTML format\"\n                    className=\"min-h-[400px] font-mono text-sm border-0\"\n                  />\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  You can use HTML tags to format the content. Common tags: &lt;h2&gt;, &lt;h3&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;ol&gt;, &lt;li&gt;, &lt;strong&gt;.\n                </p>\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex justify-between\">\n              <Button variant=\"outline\" onClick={() => navigate('/sops')}>Cancel</Button>\n              <Button onClick={handleSave} disabled={saving}>\n                <Save className=\"h-4 w-4 mr-1\" /> \n                {saving ? 'Saving...' : 'Save SOP'}\n              </Button>\n            </CardFooter>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"preview\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{sop.title || 'Untitled SOP'}</CardTitle>\n              {sop.description && <p className=\"text-muted-foreground mt-1\">{sop.description}</p>}\n              \n              <div className=\"flex flex-wrap gap-2 mt-2 text-sm text-muted-foreground\">\n                <div>Category: {sop.category || 'Uncategorized'}</div>\n                <div className=\"mx-2\">•</div>\n                <div>Author: {sop.author || 'Unknown'}</div>\n                <div className=\"mx-2\">•</div>\n                <div>Version: {sop.version || '1.0'}</div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              {/* Notice about copy protection */}\n              <div className=\"bg-amber-50 border-l-4 border-amber-400 p-4 mb-6 flex items-start space-x-3\">\n                <AlertTriangle className=\"h-5 w-5 text-amber-500 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <h3 className=\"text-sm font-medium text-amber-800\">Content Preview</h3>\n                  <p className=\"text-sm text-amber-700 mt-0.5\">\n                    This is a preview of how the SOP will appear to users.\n                  </p>\n                </div>\n              </div>\n              \n              {/* SOP content preview */}\n              <div \n                className=\"prose prose-slate max-w-none\"\n                dangerouslySetInnerHTML={{ __html: sop.content }}\n              ></div>\n            </CardContent>\n            <CardFooter>\n              <Button variant=\"outline\" onClick={() => setActiveTab(\"edit\")}>\n                Back to Edit\n              </Button>\n            </CardFooter>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default SOPEdit;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Search, Filter, Plus, FileText, ChevronRight, LayoutGrid, List, SlidersHorizontal } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useAuth, UserRole } from '@/contexts/AuthContext';\n\n// Define Script interface\ninterface Script {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  description: string;\n}\n\n// Script categories\nconst SCRIPT_CATEGORIES = [\n  'All Categories',\n  'Sales',\n  'Customer Service',\n  'Processing',\n  'Closing',\n];\n\n// Mock scripts data\nconst MOCK_SCRIPTS: Script[] = [\n  {\n    id: 1,\n    title: 'First-Time Homebuyer Call Script',\n    category: 'Sales',\n    lastUpdated: '2023-05-18',\n    description: 'Guide for speaking with first-time homebuyers about the mortgage process.',\n  },\n  {\n    id: 2,\n    title: 'Refinance Opportunity Script',\n    category: 'Sales',\n    lastUpdated: '2023-06-01',\n    description: 'Script for discussing refinance options with existing homeowners.',\n  },\n  {\n    id: 3,\n    title: 'Rate Increase Notification',\n    category: 'Customer Service',\n    lastUpdated: '2023-04-22',\n    description: 'Script for notifying clients about a rate increase during the application process.',\n  },\n  {\n    id: 4,\n    title: 'Document Collection Call',\n    category: 'Processing',\n    lastUpdated: '2023-03-15',\n    description: 'Guide for requesting additional documentation from applicants.',\n  },\n  {\n    id: 5,\n    title: 'Pre-Approval Consultation',\n    category: 'Sales',\n    lastUpdated: '2023-06-10',\n    description: 'Script for pre-approval consultations with potential borrowers.',\n  },\n  {\n    id: 6,\n    title: 'Closing Process Explanation',\n    category: 'Closing',\n    lastUpdated: '2023-05-05',\n    description: 'Detailed explanation of the closing process for applicants.',\n  },\n];\n\n// Script card component\ninterface ScriptCardProps {\n  script: Script;\n  viewMode: 'grid' | 'list';\n}\n\nconst ScriptCard: React.FC<ScriptCardProps> = ({ script, viewMode }) => {\n  const { isAdmin } = useAuth();\n  \n  if (viewMode === 'list') {\n    return (\n      <div className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"rounded-md bg-primary/10 p-2 text-primary\">\n            <FileText className=\"h-5 w-5\" />\n          </div>\n          <div>\n            <h3 className=\"font-medium\">{script.title}</h3>\n            <div className=\"flex items-center gap-2 mt-1\">\n              <Badge variant=\"outline\">{script.category}</Badge>\n              <span className=\"text-xs text-muted-foreground\">\n                Updated: {script.lastUpdated}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" size=\"sm\" asChild>\n            <Link to={`/scripts/${script.id}`}>\n              View\n            </Link>\n          </Button>\n          {isAdmin() && (\n            <Button variant=\"outline\" size=\"sm\" asChild>\n              <Link to={`/scripts/edit/${script.id}`}>\n                Edit\n              </Link>\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <Card className=\"h-full overflow-hidden transition-all hover:shadow-md\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex justify-between items-start\">\n          <div className=\"space-y-1\">\n            <CardTitle className=\"text-base\">{script.title}</CardTitle>\n            <CardDescription className=\"text-xs\">{script.category}</CardDescription>\n          </div>\n          <div className=\"rounded-md bg-primary/10 p-2 text-primary\">\n            <FileText className=\"h-5 w-5\" />\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"pb-2\">\n        <p className=\"text-sm text-gray-700 line-clamp-2 protected-content\">{script.description}</p>\n      </CardContent>\n      <CardFooter className=\"flex justify-between pt-0\">\n        <span className=\"text-xs text-muted-foreground\">\n          Last updated: {script.lastUpdated}\n        </span>\n        <Button variant=\"ghost\" size=\"sm\" asChild className=\"gap-1 text-primary\">\n          <Link to={`/scripts/${script.id}`}>\n            View <ChevronRight className=\"h-3 w-3\" />\n          </Link>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst Scripts: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('All Categories');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [loading, setLoading] = useState<boolean>(false);\n  const { isAdmin } = useAuth();\n\n  // Filter scripts based on search term and category\n  const filteredScripts = MOCK_SCRIPTS.filter((script) => {\n    const matchesSearch =\n      script.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      script.description.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesCategory =\n      selectedCategory === 'All Categories' || script.category === selectedCategory;\n    \n    return matchesSearch && matchesCategory;\n  });\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">Call & Training Scripts</h1>\n          <p className=\"text-muted-foreground\">Access conversation guides and training scripts</p>\n        </div>\n        {isAdmin() && (\n          <Button asChild>\n            <Link to=\"/scripts/edit/new\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add New Script\n            </Link>\n          </Button>\n        )}\n      </div>\n\n      {/* Search and filters */}\n      <div className=\"flex flex-col lg:flex-row gap-4\">\n        <div className=\"relative flex-1\">\n          <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n          <Input\n            placeholder=\"Search scripts...\"\n            className=\"pl-10\"\n            value={searchTerm}\n            onChange={handleSearch}\n          />\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"gap-1\">\n                <Filter className=\"h-4 w-4\" />\n                {selectedCategory !== 'All Categories' ? selectedCategory : 'Category'}\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-56\">\n              <DropdownMenuLabel>Filter by Category</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuGroup>\n                {SCRIPT_CATEGORIES.map((category) => (\n                  <DropdownMenuItem \n                    key={category}\n                    onClick={() => setSelectedCategory(category)}\n                    className={selectedCategory === category ? \"bg-primary/10\" : \"\"}\n                  >\n                    {category}\n                  </DropdownMenuItem>\n                ))}\n              </DropdownMenuGroup>\n            </DropdownMenuContent>\n          </DropdownMenu>\n          \n          <div className=\"flex items-center border rounded-md overflow-hidden\">\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className={`rounded-none ${viewMode === 'grid' ? 'bg-muted' : ''}`}\n              onClick={() => setViewMode('grid')}\n            >\n              <LayoutGrid className=\"h-4 w-4\" />\n            </Button>\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className={`rounded-none ${viewMode === 'list' ? 'bg-muted' : ''}`}\n              onClick={() => setViewMode('list')}\n            >\n              <List className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Scripts List */}\n      {loading ? (\n        <div className={`grid grid-cols-1 ${viewMode === 'grid' ? 'md:grid-cols-2 lg:grid-cols-3' : ''} gap-4`}>\n          {Array(6).fill(0).map((_, index) => (\n            <Card key={index}>\n              <CardHeader className=\"pb-2\">\n                <Skeleton className=\"h-6 w-2/3\" />\n                <Skeleton className=\"h-4 w-20 mt-1\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-12 w-full\" />\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Skeleton className=\"h-4 w-24\" />\n                <Skeleton className=\"h-8 w-16\" />\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <>\n          {viewMode === 'grid' ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {filteredScripts.map((script) => (\n                <ScriptCard key={script.id} script={script} viewMode={viewMode} />\n              ))}\n            </div>\n          ) : (\n            <div className=\"flex flex-col gap-2\">\n              {filteredScripts.map((script) => (\n                <ScriptCard key={script.id} script={script} viewMode={viewMode} />\n              ))}\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Empty state */}\n      {filteredScripts.length === 0 && !loading && (\n        <div className=\"flex flex-col items-center justify-center py-16 space-y-4\">\n          <div className=\"rounded-full bg-gray-100 p-4 text-gray-500\">\n            <FileText className=\"h-8 w-8\" />\n          </div>\n          <h3 className=\"text-lg font-medium\">No Scripts Found</h3>\n          <p className=\"text-muted-foreground max-w-md text-center\">\n            We couldn't find any scripts matching your search criteria. Try adjusting your filters or search terms.\n          </p>\n          {searchTerm || selectedCategory !== 'All Categories' ? (\n            <Button variant=\"outline\" onClick={() => {\n              setSearchTerm('');\n              setSelectedCategory('All Categories');\n            }}>\n              Clear Filters\n            </Button>\n          ) : null}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Scripts;","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { \n  ArrowLeft, \n  Calendar, \n  Printer, \n  Edit, \n  Trash2,\n  AlertTriangle,\n  Share2,\n  Eye,\n  Download,\n  Clock,\n  User\n} from 'lucide-react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { \n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { useToast } from '@/components/ui/use-toast';\nimport { useAuth, UserRole } from '@/contexts/AuthContext';\n\n// Define Script interface\ninterface Script {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  author: string;\n  version: string;\n  content: string;\n}\n\n// Mock Script content data\nconst MOCK_SCRIPT_CONTENT: Record<string, Script> = {\n  '1': {\n    id: 1,\n    title: 'First-Time Homebuyer Call Script',\n    category: 'Sales',\n    lastUpdated: '2023-05-18',\n    author: 'Jane Smith',\n    version: '1.4',\n    content: `\n      <h2>First-Time Homebuyer Call Script</h2>\n      \n      <h3>Introduction</h3>\n      <p>\"Hello, this is [Your Name] from [Company Name]. I understand you're interested in exploring mortgage options for your first home purchase. Is now a good time to talk?\"</p>\n      \n      <h3>Build Rapport</h3>\n      <ul>\n        <li>\"What prompted you to start looking into homeownership at this time?\"</li>\n        <li>\"Have you started looking at properties yet, or are you just beginning the process?\"</li>\n        <li>\"What areas or neighborhoods are you considering?\"</li>\n      </ul>\n      \n      <h3>Gather Initial Information</h3>\n      <p>\"I'd like to understand your situation better so I can provide the most relevant information:\"</p>\n      <ul>\n        <li>\"What's your ideal timeframe for purchasing a home?\"</li>\n        <li>\"Have you been pre-approved for a mortgage before?\"</li>\n        <li>\"Do you have a budget in mind for your home purchase?\"</li>\n        <li>\"Are you currently renting or living with family?\"</li>\n        <li>\"Have you been saving for a down payment? If so, approximately how much do you have saved?\"</li>\n      </ul>\n      \n      <h3>Address Common Concerns</h3>\n      <p><strong>Concern: \"I don't know where to start.\"</strong></p>\n      <p>\"Many first-time buyers feel the same way. The process can seem overwhelming, but I'm here to guide you through each step. We typically start with a pre-approval to help you understand your budget, then we can discuss specific loan programs designed for first-time buyers, like FHA loans or programs with lower down payment requirements.\"</p>\n      \n      <p><strong>Concern: \"I don't think I have enough for a down payment.\"</strong></p>\n      <p>\"There are actually several loan programs designed specifically for first-time buyers that require as little as 3% down. Additionally, there may be down payment assistance programs in your area. I'd be happy to explore these options with you.\"</p>\n      \n      <p><strong>Concern: \"I'm worried about my credit score.\"</strong></p>\n      <p>\"While credit is important, there are loan programs available for a range of credit profiles. Let's discuss your specific situation and find the right fit. We might even identify some quick ways to improve your score before applying.\"</p>\n      \n      <h3>Explain the Pre-Approval Process</h3>\n      <p>\"The first concrete step I recommend is getting pre-approved. This will:\"</p>\n      <ul>\n        <li>\"Give you a clear understanding of your budget\"</li>\n        <li>\"Make your offers stronger in a competitive market\"</li>\n        <li>\"Identify any potential issues early in the process\"</li>\n        <li>\"Potentially save time once you find a home you want to purchase\"</li>\n      </ul>\n      <p>\"The pre-approval process involves reviewing your income, assets, and credit history. We'll need some documentation like pay stubs, tax returns, and bank statements. Would you like me to send you a checklist of the documents we'll need?\"</p>\n      \n      <h3>Discuss First-Time Homebuyer Programs</h3>\n      <p>\"Let me tell you about some programs specifically designed for first-time homebuyers:\"</p>\n      <ul>\n        <li>\"FHA loans: These require as little as 3.5% down and have more flexible credit requirements\"</li>\n        <li>\"Conventional 97 loans: These allow for just 3% down payment\"</li>\n        <li>\"VA loans: If you've served in the military, you might qualify for a zero-down loan\"</li>\n        <li>\"USDA loans: For properties in rural areas, offering zero-down financing\"</li>\n        <li>\"State and local assistance programs: Many states and cities offer special programs for first-time buyers\"</li>\n      </ul>\n      \n      <h3>Explain the Homebuying Timeline</h3>\n      <p>\"Let me give you a quick overview of the typical homebuying timeline:\"</p>\n      <ol>\n        <li>\"Pre-approval: 1-3 days\"</li>\n        <li>\"Home shopping with a realtor: Varies, typically 1-3 months\"</li>\n        <li>\"Making an offer and negotiation: 1-7 days\"</li>\n        <li>\"Under contract to closing: Typically 30-45 days\"</li>\n      </ol>\n      <p>\"The entire process usually takes about 2-4 months from pre-approval to closing, but can vary based on your specific situation and the local market conditions.\"</p>\n      \n      <h3>Address Questions</h3>\n      <p>\"What questions do you have about the mortgage process or any of the programs I've mentioned?\"</p>\n      \n      <h3>Set Clear Next Steps</h3>\n      <p>\"Based on our conversation, I'd recommend the following next steps:\"</p>\n      <ol>\n        <li>\"Complete a pre-approval application (I can send you a link)\"</li>\n        <li>\"Gather the necessary documentation (I'll send a checklist)\"</li>\n        <li>\"Schedule a follow-up call to review your pre-approval results (how does [specific date/time] work for you?)\"</li>\n      </ol>\n      \n      <h3>Closing</h3>\n      <p>\"Thank you for your time today. I'm excited to help you navigate this journey to homeownership. Please don't hesitate to call or email me with any questions that come up, even outside of business hours. My goal is to make this process as smooth as possible for you.\"</p>\n    `,\n  },\n  '2': {\n    id: 2,\n    title: 'Refinance Opportunity Script',\n    category: 'Sales',\n    lastUpdated: '2023-06-01',\n    author: 'Mike Johnson',\n    version: '1.2',\n    content: `\n      <h2>Refinance Opportunity Script</h2>\n      \n      <h3>Introduction</h3>\n      <p>\"Hello, this is [Your Name] from [Company Name]. Am I speaking with [Client Name]? I'm reaching out because I've identified a potential opportunity to improve your current mortgage through refinancing. Do you have a few minutes to discuss this?\"</p>\n      \n      <h3>Build Rapport & Confirm Current Situation</h3>\n      <p>\"Before I share some specific options, I'd like to confirm a few details about your current mortgage:\"</p>\n      <ul>\n        <li>\"You currently have a [type of loan] at approximately [interest rate]%, is that correct?\"</li>\n        <li>\"And you've had this mortgage since around [origination date], is that right?\"</li>\n        <li>\"Have you considered refinancing recently?\"</li>\n      </ul>\n      \n      <h3>Explain the Potential Benefit</h3>\n      <p>\"Based on current market conditions and your specific situation, I believe you might benefit from refinancing. Here's why:\"</p>\n      \n      <p><strong>For Rate Reduction:</strong> \"Currently, we're seeing rates that are lower than what you have on your existing mortgage. By refinancing, you could potentially save [estimated amount] per month, which adds up to [annual savings] per year.\"</p>\n      \n      <p><strong>For Cash-Out:</strong> \"Based on the appreciation in home values in your area and your current mortgage balance, you might have approximately [estimated equity] in home equity. A cash-out refinance could allow you to access some of this equity for home improvements, debt consolidation, or other financial goals.\"</p>\n      \n      <p><strong>For Term Adjustment:</strong> \"If you're interested in paying off your home sooner, we could look at refinancing to a shorter term, like a 15-year mortgage. While your monthly payment might increase slightly, you'd save substantially on interest over the life of the loan and build equity faster.\"</p>\n      \n      <h3>Address Common Concerns</h3>\n      <p><strong>Concern: \"I've heard refinancing is expensive.\"</strong></p>\n      <p>\"That's a valid concern. There are costs associated with refinancing, typically around 2-3% of the loan amount. However, in many cases, the long-term savings outweigh these costs. I can calculate your break-even point—the time it would take for the monthly savings to cover the refinancing costs. Additionally, we often have options to roll these costs into the loan, so you don't have to pay them out of pocket.\"</p>\n      \n      <p><strong>Concern: \"I don't want to restart my 30-year term.\"</strong></p>\n      <p>\"You don't have to restart with a full 30-year term. We can structure your refinance to match your remaining term, or even shorten it if paying off your home sooner is a priority.\"</p>\n      \n      <p><strong>Concern: \"I just refinanced recently.\"</strong></p>\n      <p>\"I understand. Even with a recent refinance, it's worth reviewing your options, as rates have continued to change. Let's look at your specific numbers to see if another refinance makes financial sense at this time.\"</p>\n      \n      <h3>Explain the Process</h3>\n      <p>\"If you're interested in exploring this opportunity, here's what the refinance process would look like:\"</p>\n      <ol>\n        <li>\"Application: We'll gather some basic information and documentation\"</li>\n        <li>\"Loan Estimate: You'll receive details about rates, terms, and costs\"</li>\n        <li>\"Underwriting: We'll verify your income, assets, and property value\"</li>\n        <li>\"Closing: Sign final documents and complete the refinance\"</li>\n      </ol>\n      <p>\"The entire process typically takes about 30-45 days, and we'll guide you through each step.\"</p>\n      \n      <h3>Discuss Specific Options</h3>\n      <p>\"Based on what you've shared, here are a few specific refinance options that might work well for you:\"</p>\n      <ul>\n        <li>\"Option 1: [Specific loan type] with [rate]% interest rate, which would lower your monthly payment by approximately [amount]\"</li>\n        <li>\"Option 2: [Alternate loan type] with [rate]% for a 15-year term, which would increase your payment by [amount] but save you [amount] in total interest\"</li>\n        <li>\"Option 3: Cash-out refinance that would provide you with [amount] in cash while keeping your payment similar to what you have now\"</li>\n      </ul>\n      \n      <h3>Address Questions</h3>\n      <p>\"What questions do you have about the refinance process or any of the options I've presented?\"</p>\n      \n      <h3>Set Clear Next Steps</h3>\n      <p>\"If you'd like to move forward, here are the next steps:\"</p>\n      <ol>\n        <li>\"Complete a refinance application (I can send you a link)\"</li>\n        <li>\"Gather some basic documentation (pay stubs, tax returns, etc.)\"</li>\n        <li>\"Schedule a follow-up call to review your loan options in detail\"</li>\n      </ol>\n      \n      <h3>Closing</h3>\n      <p>\"Thank you for your time today. Even if you're not ready to refinance right now, I'm happy to be a resource for any mortgage-related questions you might have. I'll send you an email summarizing what we discussed, and please feel free to reach out if you have any other questions or when you're ready to explore refinancing further.\"</p>\n    `,\n  },\n};\n\nconst ScriptDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const { isAdmin } = useAuth();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [script, setScript] = useState<Script | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showDeleteAlert, setShowDeleteAlert] = useState<boolean>(false);\n\n  useEffect(() => {\n    // In a real app, this would be an API call\n    const fetchScript = () => {\n      setLoading(true);\n      // Simulate API delay\n      setTimeout(() => {\n        if (id && MOCK_SCRIPT_CONTENT[id]) {\n          setScript(MOCK_SCRIPT_CONTENT[id]);\n        }\n        setLoading(false);\n      }, 500);\n    };\n\n    fetchScript();\n  }, [id]);\n\n  // Handle print functionality\n  const handlePrint = () => {\n    window.print();\n  };\n\n  // Handle delete script\n  const handleDelete = () => {\n    // In a real app, this would be an API call\n    setTimeout(() => {\n      toast({\n        title: \"Script deleted\",\n        description: \"The script was successfully deleted\",\n      });\n      navigate('/scripts');\n    }, 500);\n  };\n\n  // Disable right-click for content protection\n  useEffect(() => {\n    const handleContextMenu = (e: MouseEvent) => {\n      // Only prevent context menu on protected elements\n      if ((e.target as HTMLElement).closest('.protected-content')) {\n        e.preventDefault();\n        return false;\n      }\n      return true;\n    };\n\n    document.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      document.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"ghost\" size=\"sm\" asChild>\n            <Link to=\"/scripts\">\n              <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back\n            </Link>\n          </Button>\n        </div>\n        \n        <div className=\"space-y-3\">\n          <Skeleton className=\"h-8 w-2/3\" />\n          <div className=\"flex space-x-4\">\n            <Skeleton className=\"h-5 w-40\" />\n            <Skeleton className=\"h-5 w-32\" />\n          </div>\n        </div>\n        \n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"space-y-4\">\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-24 w-full\" />\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-32 w-full\" />\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-48 w-full\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (!script) {\n    return (\n      <div className=\"flex flex-col items-center justify-center py-16 space-y-4\">\n        <div className=\"rounded-full bg-yellow-100 p-4 text-yellow-500\">\n          <AlertTriangle className=\"h-8 w-8\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-center\">Script Not Found</h2>\n        <p className=\"text-gray-600 text-center max-w-md\">\n          The script you're looking for doesn't exist or you don't have access to view it.\n        </p>\n        <Button onClick={() => navigate('/scripts')}>\n          Back to Scripts\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Breadcrumb */}\n      <Breadcrumb className=\"mb-6\">\n        <BreadcrumbList>\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/scripts\">Scripts</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink>{script.title}</BreadcrumbLink>\n          </BreadcrumbItem>\n        </BreadcrumbList>\n      </Breadcrumb>\n\n      {/* Header with actions */}\n      <div className=\"flex flex-col gap-4 md:flex-row md:items-center md:justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">{script.title}</h1>\n          <div className=\"flex flex-wrap gap-2 mt-2 items-center text-sm text-muted-foreground\">\n            <div className=\"flex items-center\">\n              <Calendar className=\"h-4 w-4 mr-1\" />\n              <span>Last updated: {script.lastUpdated}</span>\n            </div>\n            <span>•</span>\n            <div className=\"flex items-center\">\n              <User className=\"h-4 w-4 mr-1\" />\n              <span>Author: {script.author}</span>\n            </div>\n            <span>•</span>\n            <div className=\"flex items-center\">\n              <Clock className=\"h-4 w-4 mr-1\" />\n              <span>Version: {script.version}</span>\n            </div>\n            <Badge variant=\"outline\" className=\"ml-2\">{script.category}</Badge>\n          </div>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={handlePrint}>\n            <Printer className=\"h-4 w-4 mr-1\" /> Print\n          </Button>\n          \n          {isAdmin() && (\n            <>\n              <Button variant=\"outline\" size=\"sm\" onClick={() => navigate(`/scripts/edit/${script.id}`)}>\n                <Edit className=\"h-4 w-4 mr-1\" /> Edit\n              </Button>\n              \n              <AlertDialog open={showDeleteAlert} onOpenChange={setShowDeleteAlert}>\n                <AlertDialogTrigger asChild>\n                  <Button variant=\"destructive\" size=\"sm\">\n                    <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                  </Button>\n                </AlertDialogTrigger>\n                <AlertDialogContent>\n                  <AlertDialogHeader>\n                    <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                    <AlertDialogDescription>\n                      This action cannot be undone. This will permanently delete the script\n                      \"{script.title}\" and remove it from the system.\n                    </AlertDialogDescription>\n                  </AlertDialogHeader>\n                  <AlertDialogFooter>\n                    <AlertDialogCancel>Cancel</AlertDialogCancel>\n                    <AlertDialogAction onClick={handleDelete} className=\"bg-destructive text-destructive-foreground\">\n                      Delete\n                    </AlertDialogAction>\n                  </AlertDialogFooter>\n                </AlertDialogContent>\n              </AlertDialog>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Script Content */}\n      <Card className=\"overflow-hidden\">\n        <CardContent className=\"p-6\">\n          <div className=\"print:pt-8\">\n            {/* Notice about copy protection */}\n            <div className=\"bg-amber-50 border-l-4 border-amber-400 p-4 mb-6 print:hidden flex items-start space-x-3\">\n              <AlertTriangle className=\"h-5 w-5 text-amber-500 mt-0.5 flex-shrink-0\" />\n              <div>\n                <h3 className=\"text-sm font-medium text-amber-800\">Confidential Script</h3>\n                <p className=\"text-sm text-amber-700 mt-0.5\">\n                  This script is protected. Unauthorized copying or distribution is prohibited.\n                </p>\n              </div>\n            </div>\n\n            {/* The actual Script content - protected from copying */}\n            <div \n              className=\"prose prose-slate max-w-none protected-content\" \n              dangerouslySetInnerHTML={{ __html: script.content }}\n            ></div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ScriptDetail;","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { \n  ArrowLeft, \n  Save, \n  Trash2, \n  AlertTriangle,\n  FileText\n} from 'lucide-react';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@/components/ui/select';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { \n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useToast } from '@/components/ui/use-toast';\nimport { useAuth } from '@/contexts/AuthContext';\n\n// Define Script interface\ninterface Script {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  author: string;\n  version: string;\n  content: string;\n  description?: string;\n}\n\n// Mock Script categories\nconst SCRIPT_CATEGORIES = [\n  'Sales',\n  'Customer Service',\n  'Processing',\n  'Closing',\n];\n\n// Mock Script content data\nconst MOCK_SCRIPT_CONTENT: Record<string, Script> = {\n  '1': {\n    id: 1,\n    title: 'First-Time Homebuyer Call Script',\n    category: 'Sales',\n    lastUpdated: '2023-05-18',\n    author: 'Jane Smith',\n    version: '1.4',\n    description: 'Guide for speaking with first-time homebuyers about the mortgage process.',\n    content: `\n      <h2>First-Time Homebuyer Call Script</h2>\n      \n      <h3>Introduction</h3>\n      <p>\"Hello, this is [Your Name] from [Company Name]. I understand you're interested in exploring mortgage options for your first home purchase. Is now a good time to talk?\"</p>\n      \n      <h3>Build Rapport</h3>\n      <ul>\n        <li>\"What prompted you to start looking into homeownership at this time?\"</li>\n        <li>\"Have you started looking at properties yet, or are you just beginning the process?\"</li>\n        <li>\"What areas or neighborhoods are you considering?\"</li>\n      </ul>\n      \n      <h3>Gather Initial Information</h3>\n      <p>\"I'd like to understand your situation better so I can provide the most relevant information:\"</p>\n      <ul>\n        <li>\"What's your ideal timeframe for purchasing a home?\"</li>\n        <li>\"Have you been pre-approved for a mortgage before?\"</li>\n        <li>\"Do you have a budget in mind for your home purchase?\"</li>\n        <li>\"Are you currently renting or living with family?\"</li>\n        <li>\"Have you been saving for a down payment? If so, approximately how much do you have saved?\"</li>\n      </ul>\n      \n      <h3>Address Common Concerns</h3>\n      <p><strong>Concern: \"I don't know where to start.\"</strong></p>\n      <p>\"Many first-time buyers feel the same way. The process can seem overwhelming, but I'm here to guide you through each step. We typically start with a pre-approval to help you understand your budget, then we can discuss specific loan programs designed for first-time buyers, like FHA loans or programs with lower down payment requirements.\"</p>\n      \n      <p><strong>Concern: \"I don't think I have enough for a down payment.\"</strong></p>\n      <p>\"There are actually several loan programs designed specifically for first-time buyers that require as little as 3% down. Additionally, there may be down payment assistance programs in your area. I'd be happy to explore these options with you.\"</p>\n      \n      <p><strong>Concern: \"I'm worried about my credit score.\"</strong></p>\n      <p>\"While credit is important, there are loan programs available for a range of credit profiles. Let's discuss your specific situation and find the right fit. We might even identify some quick ways to improve your score before applying.\"</p>\n      \n      <h3>Explain the Pre-Approval Process</h3>\n      <p>\"The first concrete step I recommend is getting pre-approved. This will:\"</p>\n      <ul>\n        <li>\"Give you a clear understanding of your budget\"</li>\n        <li>\"Make your offers stronger in a competitive market\"</li>\n        <li>\"Identify any potential issues early in the process\"</li>\n        <li>\"Potentially save time once you find a home you want to purchase\"</li>\n      </ul>\n      <p>\"The pre-approval process involves reviewing your income, assets, and credit history. We'll need some documentation like pay stubs, tax returns, and bank statements. Would you like me to send you a checklist of the documents we'll need?\"</p>\n      \n      <h3>Discuss First-Time Homebuyer Programs</h3>\n      <p>\"Let me tell you about some programs specifically designed for first-time homebuyers:\"</p>\n      <ul>\n        <li>\"FHA loans: These require as little as 3.5% down and have more flexible credit requirements\"</li>\n        <li>\"Conventional 97 loans: These allow for just 3% down payment\"</li>\n        <li>\"VA loans: If you've served in the military, you might qualify for a zero-down loan\"</li>\n        <li>\"USDA loans: For properties in rural areas, offering zero-down financing\"</li>\n        <li>\"State and local assistance programs: Many states and cities offer special programs for first-time buyers\"</li>\n      </ul>\n      \n      <h3>Explain the Homebuying Timeline</h3>\n      <p>\"Let me give you a quick overview of the typical homebuying timeline:\"</p>\n      <ol>\n        <li>\"Pre-approval: 1-3 days\"</li>\n        <li>\"Home shopping with a realtor: Varies, typically 1-3 months\"</li>\n        <li>\"Making an offer and negotiation: 1-7 days\"</li>\n        <li>\"Under contract to closing: Typically 30-45 days\"</li>\n      </ol>\n      <p>\"The entire process usually takes about 2-4 months from pre-approval to closing, but can vary based on your specific situation and the local market conditions.\"</p>\n      \n      <h3>Address Questions</h3>\n      <p>\"What questions do you have about the mortgage process or any of the programs I've mentioned?\"</p>\n      \n      <h3>Set Clear Next Steps</h3>\n      <p>\"Based on our conversation, I'd recommend the following next steps:\"</p>\n      <ol>\n        <li>\"Complete a pre-approval application (I can send you a link)\"</li>\n        <li>\"Gather the necessary documentation (I'll send a checklist)\"</li>\n        <li>\"Schedule a follow-up call to review your pre-approval results (how does [specific date/time] work for you?)\"</li>\n      </ol>\n      \n      <h3>Closing</h3>\n      <p>\"Thank you for your time today. I'm excited to help you navigate this journey to homeownership. Please don't hesitate to call or email me with any questions that come up, even outside of business hours. My goal is to make this process as smooth as possible for you.\"</p>\n    `,\n  },\n};\n\n// Default new Script template\nconst DEFAULT_NEW_SCRIPT: Omit<Script, 'id'> = {\n  title: '',\n  category: 'Sales',\n  lastUpdated: new Date().toISOString().split('T')[0],\n  author: '',\n  version: '1.0',\n  description: '',\n  content: `\n    <h2>Script Title</h2>\n    \n    <h3>Introduction</h3>\n    <p>Write your opening remarks here...</p>\n    \n    <h3>Key Talking Points</h3>\n    <ul>\n      <li>First key point</li>\n      <li>Second key point</li>\n      <li>Third key point</li>\n    </ul>\n    \n    <h3>Common Questions and Responses</h3>\n    <p><strong>Question: \"...\"</strong></p>\n    <p>Response: \"...\"</p>\n    \n    <p><strong>Question: \"...\"</strong></p>\n    <p>Response: \"...\"</p>\n    \n    <h3>Closing</h3>\n    <p>Write your closing remarks here...</p>\n  `,\n};\n\nconst ScriptEdit: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const isEditing = id !== 'new';\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const { currentUser } = useAuth();\n  \n  const [script, setScript] = useState<Script | (Omit<Script, 'id'> & { id?: number })>(\n    isEditing ? { id: 0, title: '', category: '', lastUpdated: '', author: '', version: '', content: '' } : DEFAULT_NEW_SCRIPT\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showDeleteAlert, setShowDeleteAlert] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"edit\");\n  const [saving, setSaving] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchScript = () => {\n      setLoading(true);\n      // Simulate API delay\n      setTimeout(() => {\n        if (isEditing && id && MOCK_SCRIPT_CONTENT[id]) {\n          setScript(MOCK_SCRIPT_CONTENT[id]);\n        } else if (!isEditing) {\n          // Set default author to current user\n          setScript({\n            ...DEFAULT_NEW_SCRIPT,\n            author: currentUser?.name || '',\n          });\n        }\n        setLoading(false);\n      }, 500);\n    };\n\n    fetchScript();\n  }, [id, isEditing, currentUser]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setScript(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCategoryChange = (value: string) => {\n    setScript(prev => ({ ...prev, category: value }));\n  };\n\n  const handleSave = () => {\n    setSaving(true);\n    \n    // In a real app, this would be an API call\n    setTimeout(() => {\n      setSaving(false);\n      \n      toast({\n        title: isEditing ? \"Script updated\" : \"Script created\",\n        description: isEditing \n          ? `Script \"${script.title}\" has been updated successfully` \n          : `Script \"${script.title}\" has been created successfully`,\n      });\n      \n      navigate(isEditing ? `/scripts/${id}` : '/scripts');\n    }, 1000);\n  };\n\n  const handleDelete = () => {\n    // In a real app, this would be an API call\n    setTimeout(() => {\n      toast({\n        title: \"Script deleted\",\n        description: \"The script was successfully deleted\",\n      });\n      navigate('/scripts');\n    }, 500);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-4 mb-6\">\n          <Button variant=\"ghost\" size=\"sm\" asChild>\n            <Link to=\"/scripts\">\n              <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back\n            </Link>\n          </Button>\n          <Skeleton className=\"h-4 w-40\" />\n        </div>\n        \n        <div className=\"space-y-3\">\n          <Skeleton className=\"h-8 w-2/3\" />\n        </div>\n        \n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-8 w-60\" />\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-60 w-full\" />\n          </CardContent>\n          <CardFooter>\n            <Skeleton className=\"h-10 w-24\" />\n          </CardFooter>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Breadcrumb */}\n      <Breadcrumb className=\"mb-6\">\n        <BreadcrumbList>\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/scripts\">Scripts</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink>{isEditing ? `Edit: ${script.title}` : \"Create New Script\"}</BreadcrumbLink>\n          </BreadcrumbItem>\n        </BreadcrumbList>\n      </Breadcrumb>\n\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">\n            {isEditing ? `Edit Script: ${script.title}` : \"Create New Script\"}\n          </h1>\n          <p className=\"text-muted-foreground\">\n            {isEditing ? \"Update the script details and content\" : \"Create a new call or training script\"}\n          </p>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          {isEditing && (\n            <AlertDialog open={showDeleteAlert} onOpenChange={setShowDeleteAlert}>\n              <AlertDialogTrigger asChild>\n                <Button variant=\"destructive\" size=\"sm\">\n                  <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                </Button>\n              </AlertDialogTrigger>\n              <AlertDialogContent>\n                <AlertDialogHeader>\n                  <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                  <AlertDialogDescription>\n                    This action cannot be undone. This will permanently delete the script\n                    \"{script.title}\" and remove it from the system.\n                  </AlertDialogDescription>\n                </AlertDialogHeader>\n                <AlertDialogFooter>\n                  <AlertDialogCancel>Cancel</AlertDialogCancel>\n                  <AlertDialogAction onClick={handleDelete} className=\"bg-destructive text-destructive-foreground\">\n                    Delete\n                  </AlertDialogAction>\n                </AlertDialogFooter>\n              </AlertDialogContent>\n            </AlertDialog>\n          )}\n          \n          <Button onClick={handleSave} disabled={saving}>\n            <Save className=\"h-4 w-4 mr-1\" /> \n            {saving ? 'Saving...' : 'Save Script'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Content Tabs */}\n      <Tabs defaultValue=\"edit\" value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2\">\n          <TabsTrigger value=\"edit\">Edit Content</TabsTrigger>\n          <TabsTrigger value=\"preview\">Preview</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"edit\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                Script Information\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"title\">Title</Label>\n                  <Input \n                    id=\"title\" \n                    name=\"title\" \n                    value={script.title} \n                    onChange={handleChange} \n                    placeholder=\"Enter script title\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"category\">Category</Label>\n                  <Select \n                    value={script.category} \n                    onValueChange={handleCategoryChange}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select category\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {SCRIPT_CATEGORIES.map(category => (\n                        <SelectItem key={category} value={category}>\n                          {category}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"author\">Author</Label>\n                  <Input \n                    id=\"author\" \n                    name=\"author\" \n                    value={script.author} \n                    onChange={handleChange} \n                    placeholder=\"Enter author name\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"version\">Version</Label>\n                  <Input \n                    id=\"version\" \n                    name=\"version\" \n                    value={script.version} \n                    onChange={handleChange} \n                    placeholder=\"Enter version (e.g., 1.0)\"\n                    required\n                  />\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"description\">Description</Label>\n                <Textarea \n                  id=\"description\" \n                  name=\"description\" \n                  value={script.description || ''}\n                  onChange={handleChange} \n                  placeholder=\"Enter a brief description of this script\"\n                  className=\"min-h-[80px]\"\n                />\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"content\">Content (HTML)</Label>\n                <div className=\"border rounded-md\">\n                  <Textarea \n                    id=\"content\" \n                    name=\"content\" \n                    value={script.content} \n                    onChange={handleChange} \n                    placeholder=\"Enter the script content in HTML format\"\n                    className=\"min-h-[400px] font-mono text-sm border-0\"\n                  />\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  You can use HTML tags to format the content. Common tags: &lt;h2&gt;, &lt;h3&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;ol&gt;, &lt;li&gt;, &lt;strong&gt;.\n                </p>\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex justify-between\">\n              <Button variant=\"outline\" onClick={() => navigate('/scripts')}>Cancel</Button>\n              <Button onClick={handleSave} disabled={saving}>\n                <Save className=\"h-4 w-4 mr-1\" /> \n                {saving ? 'Saving...' : 'Save Script'}\n              </Button>\n            </CardFooter>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"preview\">\n          <Card>\n            <CardHeader>\n              <CardTitle>{script.title || 'Untitled Script'}</CardTitle>\n              {script.description && <p className=\"text-muted-foreground mt-1\">{script.description}</p>}\n              \n              <div className=\"flex flex-wrap gap-2 mt-2 text-sm text-muted-foreground\">\n                <div>Category: {script.category || 'Uncategorized'}</div>\n                <div className=\"mx-2\">•</div>\n                <div>Author: {script.author || 'Unknown'}</div>\n                <div className=\"mx-2\">•</div>\n                <div>Version: {script.version || '1.0'}</div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              {/* Notice about copy protection */}\n              <div className=\"bg-amber-50 border-l-4 border-amber-400 p-4 mb-6 flex items-start space-x-3\">\n                <AlertTriangle className=\"h-5 w-5 text-amber-500 mt-0.5 flex-shrink-0\" />\n                <div>\n                  <h3 className=\"text-sm font-medium text-amber-800\">Content Preview</h3>\n                  <p className=\"text-sm text-amber-700 mt-0.5\">\n                    This is a preview of how the script will appear to users.\n                  </p>\n                </div>\n              </div>\n              \n              {/* Script content preview */}\n              <div \n                className=\"prose prose-slate max-w-none\"\n                dangerouslySetInnerHTML={{ __html: script.content }}\n              ></div>\n            </CardContent>\n            <CardFooter>\n              <Button variant=\"outline\" onClick={() => setActiveTab(\"edit\")}>\n                Back to Edit\n              </Button>\n            </CardFooter>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default ScriptEdit;","import React, { useState, ChangeEvent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { PenTool, Search, ChevronRight, File, Filter, Plus, LayoutGrid, List } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuGroup,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { useAuth } from '@/contexts/AuthContext';\n\ninterface FormData {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  description: string;\n}\n\n// Mock forms data\nconst MOCK_FORMS: FormData[] = [\n  {\n    id: 1,\n    title: 'Lead Intake Form',\n    category: 'Lead Management',\n    lastUpdated: '2023-06-05',\n    description: 'Form for collecting new lead information and initiating the follow-up process.',\n  },\n  {\n    id: 2,\n    title: 'Credit Pull Authorization',\n    category: 'Credit',\n    lastUpdated: '2023-05-22',\n    description: 'Authorization form for pulling credit reports during the application process.',\n  },\n  {\n    id: 3,\n    title: 'Income Verification Request',\n    category: 'Verification',\n    lastUpdated: '2023-04-18',\n    description: 'Form to request income verification from employers.',\n  },\n  {\n    id: 4,\n    title: 'Document Checklist',\n    category: 'Processing',\n    lastUpdated: '2023-06-12',\n    description: 'Checklist of required documents for loan application submission.',\n  },\n  {\n    id: 5,\n    title: 'Rate Lock Request',\n    category: 'Rate Management',\n    lastUpdated: '2023-05-30',\n    description: 'Form to request locking in an interest rate for a specific loan.',\n  },\n  {\n    id: 6,\n    title: 'Loan Application Update',\n    category: 'Processing',\n    lastUpdated: '2023-06-20',\n    description: 'Form to update information on an existing loan application.',\n  },\n];\n\n// Form categories\nconst FORM_CATEGORIES = [\n  'All Categories',\n  'Lead Management',\n  'Credit',\n  'Verification',\n  'Processing',\n  'Rate Management',\n];\n\n// Form card component\ninterface FormCardProps {\n  form: FormData;\n  viewMode: 'grid' | 'list';\n}\n\nconst FormCard: React.FC<FormCardProps> = ({ form, viewMode }) => {\n  const { isAdmin } = useAuth();\n  \n  if (viewMode === 'list') {\n    return (\n      <div className=\"flex items-center justify-between p-4 border rounded-lg hover:bg-gray-50 transition-colors\">\n        <div className=\"flex items-center gap-3\">\n          <div className=\"rounded-md bg-primary/10 p-2 text-primary\">\n            <File className=\"h-5 w-5\" />\n          </div>\n          <div>\n            <h3 className=\"font-medium\">{form.title}</h3>\n            <div className=\"flex items-center gap-2 mt-1\">\n              <Badge variant=\"outline\">{form.category}</Badge>\n              <span className=\"text-xs text-muted-foreground\">\n                Updated: {form.lastUpdated}\n              </span>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" size=\"sm\" asChild>\n            <Link to={`/forms/${form.id}`}>\n              View\n            </Link>\n          </Button>\n          {isAdmin() && (\n            <Button variant=\"outline\" size=\"sm\" asChild>\n              <Link to={`/forms/edit/${form.id}`}>\n                Edit\n              </Link>\n            </Button>\n          )}\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <Card className=\"h-full overflow-hidden transition-all hover:shadow-md\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex justify-between items-start\">\n          <div className=\"space-y-1\">\n            <CardTitle className=\"text-base\">{form.title}</CardTitle>\n            <CardDescription className=\"text-xs\">{form.category}</CardDescription>\n          </div>\n          <div className=\"rounded-md bg-primary/10 p-2 text-primary\">\n            <File className=\"h-5 w-5\" />\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent className=\"pb-2\">\n        <p className=\"text-sm text-gray-700 line-clamp-2 protected-content\">{form.description}</p>\n      </CardContent>\n      <CardFooter className=\"flex justify-between pt-0\">\n        <span className=\"text-xs text-muted-foreground\">\n          Last updated: {form.lastUpdated}\n        </span>\n        <Button variant=\"ghost\" size=\"sm\" asChild className=\"gap-1 text-primary\">\n          <Link to={`/forms/${form.id}`}>\n            View <ChevronRight className=\"h-3 w-3\" />\n          </Link>\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nconst Forms: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('All Categories');\n  const [viewMode, setViewMode] = useState<'grid' | 'list'>('grid');\n  const [loading, setLoading] = useState<boolean>(false);\n  const { isAdmin } = useAuth();\n\n  // Filter forms based on search term and category\n  const filteredForms = MOCK_FORMS.filter((form) => {\n    const matchesSearch =\n      form.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      form.description.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    const matchesCategory =\n      selectedCategory === 'All Categories' || form.category === selectedCategory;\n    \n    return matchesSearch && matchesCategory;\n  });\n\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">Forms</h1>\n          <p className=\"text-muted-foreground\">Access and submit internal forms for various processes</p>\n        </div>\n        {isAdmin() && (\n          <Button asChild>\n            <Link to=\"/forms/edit/new\">\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Add New Form\n            </Link>\n          </Button>\n        )}\n      </div>\n\n      {/* Search and filters */}\n      <div className=\"flex flex-col lg:flex-row gap-4\">\n        <div className=\"relative flex-1\">\n          <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n          <Input\n            placeholder=\"Search forms...\"\n            className=\"pl-10\"\n            value={searchTerm}\n            onChange={handleSearch}\n          />\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          <DropdownMenu>\n            <DropdownMenuTrigger asChild>\n              <Button variant=\"outline\" className=\"gap-1\">\n                <Filter className=\"h-4 w-4\" />\n                {selectedCategory !== 'All Categories' ? selectedCategory : 'Category'}\n              </Button>\n            </DropdownMenuTrigger>\n            <DropdownMenuContent className=\"w-56\">\n              <DropdownMenuLabel>Filter by Category</DropdownMenuLabel>\n              <DropdownMenuSeparator />\n              <DropdownMenuGroup>\n                {FORM_CATEGORIES.map((category) => (\n                  <DropdownMenuItem \n                    key={category}\n                    onClick={() => setSelectedCategory(category)}\n                    className={selectedCategory === category ? \"bg-primary/10\" : \"\"}\n                  >\n                    {category}\n                  </DropdownMenuItem>\n                ))}\n              </DropdownMenuGroup>\n            </DropdownMenuContent>\n          </DropdownMenu>\n          \n          <div className=\"flex items-center border rounded-md overflow-hidden\">\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className={`rounded-none ${viewMode === 'grid' ? 'bg-muted' : ''}`}\n              onClick={() => setViewMode('grid')}\n            >\n              <LayoutGrid className=\"h-4 w-4\" />\n            </Button>\n            <Button \n              variant=\"ghost\" \n              size=\"sm\" \n              className={`rounded-none ${viewMode === 'list' ? 'bg-muted' : ''}`}\n              onClick={() => setViewMode('list')}\n            >\n              <List className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Forms List */}\n      {loading ? (\n        <div className={`grid grid-cols-1 ${viewMode === 'grid' ? 'md:grid-cols-2 lg:grid-cols-3' : ''} gap-4`}>\n          {Array(6).fill(0).map((_, index) => (\n            <Card key={index}>\n              <CardHeader className=\"pb-2\">\n                <Skeleton className=\"h-6 w-2/3\" />\n                <Skeleton className=\"h-4 w-20 mt-1\" />\n              </CardHeader>\n              <CardContent>\n                <Skeleton className=\"h-12 w-full\" />\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Skeleton className=\"h-4 w-24\" />\n                <Skeleton className=\"h-8 w-16\" />\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <>\n          {viewMode === 'grid' ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {filteredForms.map((form) => (\n                <FormCard key={form.id} form={form} viewMode={viewMode} />\n              ))}\n            </div>\n          ) : (\n            <div className=\"flex flex-col gap-2\">\n              {filteredForms.map((form) => (\n                <FormCard key={form.id} form={form} viewMode={viewMode} />\n              ))}\n            </div>\n          )}\n        </>\n      )}\n\n      {/* Empty state */}\n      {filteredForms.length === 0 && !loading && (\n        <div className=\"flex flex-col items-center justify-center py-16 space-y-4\">\n          <div className=\"rounded-full bg-gray-100 p-4 text-gray-500\">\n            <File className=\"h-8 w-8\" />\n          </div>\n          <h3 className=\"text-lg font-medium\">No Forms Found</h3>\n          <p className=\"text-muted-foreground max-w-md text-center\">\n            We couldn't find any forms matching your search criteria. Try adjusting your filters or search terms.\n          </p>\n          {searchTerm || selectedCategory !== 'All Categories' ? (\n            <Button variant=\"outline\" onClick={() => {\n              setSearchTerm('');\n              setSelectedCategory('All Categories');\n            }}>\n              Clear Filters\n            </Button>\n          ) : null}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Forms;","import React, { useEffect, useState } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport { \n  ArrowLeft, \n  Calendar, \n  Printer, \n  Edit, \n  Trash2,\n  AlertTriangle,\n  Share2,\n  Download,\n  User,\n  File,\n  ClipboardCopy,\n  Check,\n  Copy\n} from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { \n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { useToast } from '@/components/ui/use-toast';\nimport { useAuth, UserRole } from '@/contexts/AuthContext';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\n// Define Form interface\ninterface Form {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  description: string;\n  formCode: string;\n  formFields: FormField[];\n  instructions: string;\n}\n\ninterface FormField {\n  id: string;\n  label: string;\n  type: string;\n  required: boolean;\n  options?: string[];\n}\n\n// Mock Form data\nconst MOCK_FORM_DATA: Record<string, Form> = {\n  '1': {\n    id: 1,\n    title: 'Lead Intake Form',\n    category: 'Lead Management',\n    lastUpdated: '2023-06-05',\n    description: 'Form for collecting new lead information and initiating the follow-up process.',\n    instructions: `\n      <h3>Form Usage Instructions</h3>\n      <p>This form should be completed for all new leads. The information collected will be used to initiate the follow-up process and qualify leads for appropriate mortgage products.</p>\n      \n      <h4>Key Points:</h4>\n      <ul>\n        <li>Complete all fields marked as required</li>\n        <li>For inquiries from websites, include the specific source URL</li>\n        <li>Rate leads based on initial conversation using our 1-5 qualification scale</li>\n        <li>Submit the form after completion for automatic assignment to the appropriate loan officer</li>\n      </ul>\n      \n      <h4>Data Protection:</h4>\n      <p>This form collects personal information covered under privacy regulations. Ensure you have verbal consent to collect and process this data. The submitted information should not be shared outside the company or used for purposes other than mortgage-related communications.</p>\n    `,\n    formCode: `\n      <form id=\"leadIntakeForm\" class=\"space-y-6\">\n        <!-- Personal Information -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Personal Information</h3>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"firstName\" class=\"block text-sm font-medium\">First Name *</label>\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" required class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"lastName\" class=\"block text-sm font-medium\">Last Name *</label>\n              <input type=\"text\" id=\"lastName\" name=\"lastName\" required class=\"w-full p-2 border rounded\" />\n            </div>\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"email\" class=\"block text-sm font-medium\">Email Address *</label>\n              <input type=\"email\" id=\"email\" name=\"email\" required class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"phone\" class=\"block text-sm font-medium\">Phone Number *</label>\n              <input type=\"tel\" id=\"phone\" name=\"phone\" required class=\"w-full p-2 border rounded\" />\n            </div>\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"address\" class=\"block text-sm font-medium\">Address</label>\n            <input type=\"text\" id=\"address\" name=\"address\" class=\"w-full p-2 border rounded\" />\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"city\" class=\"block text-sm font-medium\">City</label>\n              <input type=\"text\" id=\"city\" name=\"city\" class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"state\" class=\"block text-sm font-medium\">State</label>\n              <select id=\"state\" name=\"state\" class=\"w-full p-2 border rounded\">\n                <option value=\"\">Select State</option>\n                <option value=\"AL\">Alabama</option>\n                <option value=\"AK\">Alaska</option>\n                <!-- More states here -->\n                <option value=\"WY\">Wyoming</option>\n              </select>\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"zip\" class=\"block text-sm font-medium\">ZIP Code</label>\n              <input type=\"text\" id=\"zip\" name=\"zip\" class=\"w-full p-2 border rounded\" />\n            </div>\n          </div>\n        </div>\n        \n        <!-- Loan Information -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Loan Information</h3>\n          \n          <div class=\"space-y-1\">\n            <label for=\"loanType\" class=\"block text-sm font-medium\">Loan Type Requested *</label>\n            <select id=\"loanType\" name=\"loanType\" required class=\"w-full p-2 border rounded\">\n              <option value=\"\">Select Loan Type</option>\n              <option value=\"purchase\">Purchase</option>\n              <option value=\"refinance\">Refinance</option>\n              <option value=\"heloc\">HELOC</option>\n              <option value=\"reverse\">Reverse Mortgage</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"estimatedAmount\" class=\"block text-sm font-medium\">Estimated Loan Amount *</label>\n              <input type=\"number\" id=\"estimatedAmount\" name=\"estimatedAmount\" required class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"propertyType\" class=\"block text-sm font-medium\">Property Type *</label>\n              <select id=\"propertyType\" name=\"propertyType\" required class=\"w-full p-2 border rounded\">\n                <option value=\"\">Select Property Type</option>\n                <option value=\"singleFamily\">Single Family</option>\n                <option value=\"multiFamily\">Multi-Family</option>\n                <option value=\"condo\">Condominium</option>\n                <option value=\"townhouse\">Townhouse</option>\n                <option value=\"manufactured\">Manufactured Home</option>\n                <option value=\"other\">Other</option>\n              </select>\n            </div>\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"timeframe\" class=\"block text-sm font-medium\">Purchase/Refinance Timeframe *</label>\n            <select id=\"timeframe\" name=\"timeframe\" required class=\"w-full p-2 border rounded\">\n              <option value=\"\">Select Timeframe</option>\n              <option value=\"immediately\">Immediately (0-30 days)</option>\n              <option value=\"soon\">Soon (1-3 months)</option>\n              <option value=\"planning\">Planning (3-6 months)</option>\n              <option value=\"future\">Future (6+ months)</option>\n            </select>\n          </div>\n        </div>\n        \n        <!-- Lead Source Information -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Lead Source Information</h3>\n          \n          <div class=\"space-y-1\">\n            <label for=\"leadSource\" class=\"block text-sm font-medium\">Lead Source *</label>\n            <select id=\"leadSource\" name=\"leadSource\" required class=\"w-full p-2 border rounded\">\n              <option value=\"\">Select Lead Source</option>\n              <option value=\"website\">Company Website</option>\n              <option value=\"referral\">Referral</option>\n              <option value=\"realtor\">Realtor Partner</option>\n              <option value=\"returning\">Returning Customer</option>\n              <option value=\"social\">Social Media</option>\n              <option value=\"advertising\">Advertising</option>\n              <option value=\"other\">Other</option>\n            </select>\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"sourceDetails\" class=\"block text-sm font-medium\">Source Details</label>\n            <input type=\"text\" id=\"sourceDetails\" name=\"sourceDetails\" class=\"w-full p-2 border rounded\" placeholder=\"e.g., Referral name, Website URL, Ad campaign\" />\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"leadQuality\" class=\"block text-sm font-medium\">Lead Quality Rating (1-5) *</label>\n            <select id=\"leadQuality\" name=\"leadQuality\" required class=\"w-full p-2 border rounded\">\n              <option value=\"\">Select Rating</option>\n              <option value=\"5\">5 - Excellent (Ready to proceed)</option>\n              <option value=\"4\">4 - Good (Highly interested)</option>\n              <option value=\"3\">3 - Average (Interested but with questions)</option>\n              <option value=\"2\">2 - Fair (Just exploring options)</option>\n              <option value=\"1\">1 - Poor (Minimal interest)</option>\n            </select>\n          </div>\n        </div>\n        \n        <!-- Additional Notes -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Additional Notes</h3>\n          \n          <div class=\"space-y-1\">\n            <label for=\"notes\" class=\"block text-sm font-medium\">Notes</label>\n            <textarea id=\"notes\" name=\"notes\" rows=\"4\" class=\"w-full p-2 border rounded\" placeholder=\"Add any additional information about the lead...\"></textarea>\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"followUpDate\" class=\"block text-sm font-medium\">Recommended Follow-up Date *</label>\n            <input type=\"date\" id=\"followUpDate\" name=\"followUpDate\" required class=\"w-full p-2 border rounded\" />\n          </div>\n        </div>\n        \n        <!-- Form Submission -->\n        <div class=\"flex justify-end space-x-4\">\n          <button type=\"reset\" class=\"px-4 py-2 border rounded bg-gray-100\">Reset Form</button>\n          <button type=\"submit\" class=\"px-4 py-2 rounded bg-primary text-white\">Submit Lead</button>\n        </div>\n      </form>\n    `,\n    formFields: [\n      { id: 'firstName', label: 'First Name', type: 'text', required: true },\n      { id: 'lastName', label: 'Last Name', type: 'text', required: true },\n      { id: 'email', label: 'Email Address', type: 'email', required: true },\n      { id: 'phone', label: 'Phone Number', type: 'tel', required: true },\n      { id: 'address', label: 'Address', type: 'text', required: false },\n      { id: 'city', label: 'City', type: 'text', required: false },\n      { id: 'state', label: 'State', type: 'select', required: false },\n      { id: 'zip', label: 'ZIP Code', type: 'text', required: false },\n      { id: 'loanType', label: 'Loan Type Requested', type: 'select', required: true },\n      { id: 'estimatedAmount', label: 'Estimated Loan Amount', type: 'number', required: true },\n      { id: 'propertyType', label: 'Property Type', type: 'select', required: true },\n      { id: 'timeframe', label: 'Purchase/Refinance Timeframe', type: 'select', required: true },\n      { id: 'leadSource', label: 'Lead Source', type: 'select', required: true },\n      { id: 'sourceDetails', label: 'Source Details', type: 'text', required: false },\n      { id: 'leadQuality', label: 'Lead Quality Rating', type: 'select', required: true },\n      { id: 'notes', label: 'Notes', type: 'textarea', required: false },\n      { id: 'followUpDate', label: 'Recommended Follow-up Date', type: 'date', required: true },\n    ],\n  },\n  '2': {\n    id: 2,\n    title: 'Credit Pull Authorization',\n    category: 'Credit',\n    lastUpdated: '2023-05-22',\n    description: 'Authorization form for pulling credit reports during the application process.',\n    instructions: `\n      <h3>Form Usage Instructions</h3>\n      <p>This form must be completed and signed by each applicant before a credit report can be pulled. Both electronic and physical signatures are acceptable.</p>\n      \n      <h4>Key Points:</h4>\n      <ul>\n        <li>Verify the applicant's identity before proceeding with the credit pull</li>\n        <li>Ensure all fields are completed accurately, especially Social Security Numbers</li>\n        <li>The applicant must acknowledge all disclosures by checking the boxes</li>\n        <li>File the completed authorization in the client's folder for audit purposes</li>\n      </ul>\n      \n      <h4>Regulatory Compliance:</h4>\n      <p>This form complies with FCRA requirements for credit authorization. The form should be retained for at least 2 years after the credit report is pulled.</p>\n    `,\n    formCode: `\n      <form id=\"creditPullAuth\" class=\"space-y-6\">\n        <!-- Header Section -->\n        <div class=\"text-center py-4\">\n          <h2 class=\"text-xl font-bold\">Credit Report Authorization Form</h2>\n          <p class=\"text-sm text-gray-600\">Authorization to Release Information to [Company Name]</p>\n        </div>\n        \n        <!-- Applicant Information -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Applicant Information</h3>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"firstName\" class=\"block text-sm font-medium\">First Name *</label>\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" required class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"lastName\" class=\"block text-sm font-medium\">Last Name *</label>\n              <input type=\"text\" id=\"lastName\" name=\"lastName\" required class=\"w-full p-2 border rounded\" />\n            </div>\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"middleInitial\" class=\"block text-sm font-medium\">Middle Initial</label>\n              <input type=\"text\" id=\"middleInitial\" name=\"middleInitial\" maxlength=\"1\" class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"suffixName\" class=\"block text-sm font-medium\">Suffix</label>\n              <select id=\"suffixName\" name=\"suffixName\" class=\"w-full p-2 border rounded\">\n                <option value=\"\">None</option>\n                <option value=\"Jr\">Jr.</option>\n                <option value=\"Sr\">Sr.</option>\n                <option value=\"II\">II</option>\n                <option value=\"III\">III</option>\n                <option value=\"IV\">IV</option>\n              </select>\n            </div>\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"ssn\" class=\"block text-sm font-medium\">Social Security Number *</label>\n            <input type=\"text\" id=\"ssn\" name=\"ssn\" required pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{4}\" placeholder=\"XXX-XX-XXXX\" class=\"w-full p-2 border rounded\" />\n            <p class=\"text-xs text-gray-500\">Format: XXX-XX-XXXX</p>\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"dob\" class=\"block text-sm font-medium\">Date of Birth *</label>\n            <input type=\"date\" id=\"dob\" name=\"dob\" required class=\"w-full p-2 border rounded\" />\n          </div>\n        </div>\n        \n        <!-- Current Address -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Current Address</h3>\n          \n          <div class=\"space-y-1\">\n            <label for=\"currentAddress\" class=\"block text-sm font-medium\">Street Address *</label>\n            <input type=\"text\" id=\"currentAddress\" name=\"currentAddress\" required class=\"w-full p-2 border rounded\" />\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"currentCity\" class=\"block text-sm font-medium\">City *</label>\n              <input type=\"text\" id=\"currentCity\" name=\"currentCity\" required class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"currentState\" class=\"block text-sm font-medium\">State *</label>\n              <select id=\"currentState\" name=\"currentState\" required class=\"w-full p-2 border rounded\">\n                <option value=\"\">Select State</option>\n                <!-- State options would be listed here -->\n              </select>\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"currentZip\" class=\"block text-sm font-medium\">ZIP Code *</label>\n              <input type=\"text\" id=\"currentZip\" name=\"currentZip\" required pattern=\"[0-9]{5}(-[0-9]{4})?\" class=\"w-full p-2 border rounded\" />\n            </div>\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"timeAtAddress\" class=\"block text-sm font-medium\">Time at Current Address *</label>\n            <div class=\"grid grid-cols-2 gap-4\">\n              <div>\n                <input type=\"number\" id=\"yearsAtAddress\" name=\"yearsAtAddress\" required min=\"0\" placeholder=\"Years\" class=\"w-full p-2 border rounded\" />\n              </div>\n              <div>\n                <input type=\"number\" id=\"monthsAtAddress\" name=\"monthsAtAddress\" required min=\"0\" max=\"11\" placeholder=\"Months\" class=\"w-full p-2 border rounded\" />\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Authorization and Disclosures -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Authorizations and Disclosures</h3>\n          \n          <div class=\"space-y-2\">\n            <div class=\"flex items-start\">\n              <input type=\"checkbox\" id=\"authCreditPull\" name=\"authCreditPull\" required class=\"mt-1 mr-2\" />\n              <label for=\"authCreditPull\" class=\"text-sm\">\n                I hereby authorize [Company Name] to obtain my credit report including my credit score, credit history, and public record information. I understand that the information obtained will be used to determine my eligibility for a mortgage loan and for other permissible purposes.\n              </label>\n            </div>\n            \n            <div class=\"flex items-start\">\n              <input type=\"checkbox\" id=\"authFCRA\" name=\"authFCRA\" required class=\"mt-1 mr-2\" />\n              <label for=\"authFCRA\" class=\"text-sm\">\n                I acknowledge that I have received a copy of the \"Fair Credit Reporting Act Notice\" and understand my rights under the FCRA.\n              </label>\n            </div>\n            \n            <div class=\"flex items-start\">\n              <input type=\"checkbox\" id=\"authAccuracy\" name=\"authAccuracy\" required class=\"mt-1 mr-2\" />\n              <label for=\"authAccuracy\" class=\"text-sm\">\n                I certify that the information provided on this form is true and correct to the best of my knowledge.\n              </label>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Signature -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Signature</h3>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"signatureDate\" class=\"block text-sm font-medium\">Date *</label>\n              <input type=\"date\" id=\"signatureDate\" name=\"signatureDate\" required class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"signature\" class=\"block text-sm font-medium\">Applicant Signature *</label>\n              <div class=\"border rounded p-4 bg-gray-50 h-20 flex items-center justify-center\">\n                <p class=\"text-sm text-gray-500\">E-signature capability would be implemented here</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <!-- Form Submission -->\n        <div class=\"flex justify-end space-x-4\">\n          <button type=\"reset\" class=\"px-4 py-2 border rounded bg-gray-100\">Clear Form</button>\n          <button type=\"submit\" class=\"px-4 py-2 rounded bg-primary text-white\">Submit Authorization</button>\n        </div>\n      </form>\n    `,\n    formFields: [\n      { id: 'firstName', label: 'First Name', type: 'text', required: true },\n      { id: 'lastName', label: 'Last Name', type: 'text', required: true },\n      { id: 'middleInitial', label: 'Middle Initial', type: 'text', required: false },\n      { id: 'suffixName', label: 'Suffix', type: 'select', required: false },\n      { id: 'ssn', label: 'Social Security Number', type: 'text', required: true },\n      { id: 'dob', label: 'Date of Birth', type: 'date', required: true },\n      { id: 'currentAddress', label: 'Street Address', type: 'text', required: true },\n      { id: 'currentCity', label: 'City', type: 'text', required: true },\n      { id: 'currentState', label: 'State', type: 'select', required: true },\n      { id: 'currentZip', label: 'ZIP Code', type: 'text', required: true },\n      { id: 'yearsAtAddress', label: 'Years at Current Address', type: 'number', required: true },\n      { id: 'monthsAtAddress', label: 'Months at Current Address', type: 'number', required: true },\n      { id: 'authCreditPull', label: 'Credit Pull Authorization', type: 'checkbox', required: true },\n      { id: 'authFCRA', label: 'FCRA Acknowledgment', type: 'checkbox', required: true },\n      { id: 'authAccuracy', label: 'Information Accuracy', type: 'checkbox', required: true },\n      { id: 'signatureDate', label: 'Signature Date', type: 'date', required: true },\n      { id: 'signature', label: 'Applicant Signature', type: 'signature', required: true }\n    ]\n  }\n};\n\nconst FormDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const { isAdmin } = useAuth();\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  const [form, setForm] = useState<Form | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showDeleteAlert, setShowDeleteAlert] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"preview\");\n  const [copyButtonText, setCopyButtonText] = useState<string>(\"Copy Code\");\n\n  useEffect(() => {\n    // In a real app, this would be an API call\n    const fetchForm = () => {\n      setLoading(true);\n      // Simulate API delay\n      setTimeout(() => {\n        if (id && MOCK_FORM_DATA[id]) {\n          setForm(MOCK_FORM_DATA[id]);\n        }\n        setLoading(false);\n      }, 500);\n    };\n\n    fetchForm();\n  }, [id]);\n\n  // Handle print functionality\n  const handlePrint = () => {\n    window.print();\n  };\n\n  // Handle delete form\n  const handleDelete = () => {\n    // In a real app, this would be an API call\n    setTimeout(() => {\n      toast({\n        title: \"Form deleted\",\n        description: \"The form was successfully deleted\",\n      });\n      navigate('/forms');\n    }, 500);\n  };\n\n  // Handle code copy\n  const handleCopyCode = () => {\n    if (form) {\n      navigator.clipboard.writeText(form.formCode);\n      setCopyButtonText(\"Copied!\");\n      toast({\n        title: \"Code copied\",\n        description: \"Form code copied to clipboard\"\n      });\n      setTimeout(() => setCopyButtonText(\"Copy Code\"), 2000);\n    }\n  };\n\n  // Disable right-click for content protection\n  useEffect(() => {\n    const handleContextMenu = (e: MouseEvent) => {\n      // Only prevent context menu on protected elements\n      if ((e.target as HTMLElement).closest('.protected-content')) {\n        e.preventDefault();\n        return false;\n      }\n      return true;\n    };\n\n    document.addEventListener('contextmenu', handleContextMenu);\n    return () => {\n      document.removeEventListener('contextmenu', handleContextMenu);\n    };\n  }, []);\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-2\">\n          <Button variant=\"ghost\" size=\"sm\" asChild>\n            <Link to=\"/forms\">\n              <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back\n            </Link>\n          </Button>\n        </div>\n        \n        <div className=\"space-y-3\">\n          <Skeleton className=\"h-8 w-2/3\" />\n          <div className=\"flex space-x-4\">\n            <Skeleton className=\"h-5 w-40\" />\n            <Skeleton className=\"h-5 w-32\" />\n          </div>\n        </div>\n        \n        <Card>\n          <CardContent className=\"p-6\">\n            <div className=\"space-y-4\">\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-24 w-full\" />\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-32 w-full\" />\n              <Skeleton className=\"h-6 w-full\" />\n              <Skeleton className=\"h-48 w-full\" />\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    );\n  }\n\n  if (!form) {\n    return (\n      <div className=\"flex flex-col items-center justify-center py-16 space-y-4\">\n        <div className=\"rounded-full bg-yellow-100 p-4 text-yellow-500\">\n          <AlertTriangle className=\"h-8 w-8\" />\n        </div>\n        <h2 className=\"text-2xl font-bold text-center\">Form Not Found</h2>\n        <p className=\"text-gray-600 text-center max-w-md\">\n          The form you're looking for doesn't exist or you don't have access to view it.\n        </p>\n        <Button onClick={() => navigate('/forms')}>\n          Back to Forms\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Breadcrumb */}\n      <Breadcrumb className=\"mb-6\">\n        <BreadcrumbList>\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/forms\">Forms</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink>{form.title}</BreadcrumbLink>\n          </BreadcrumbItem>\n        </BreadcrumbList>\n      </Breadcrumb>\n\n      {/* Header with actions */}\n      <div className=\"flex flex-col gap-4 md:flex-row md:items-center md:justify-between\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">{form.title}</h1>\n          <div className=\"flex flex-wrap gap-2 mt-2 items-center text-sm text-muted-foreground\">\n            <div className=\"flex items-center\">\n              <Calendar className=\"h-4 w-4 mr-1\" />\n              <span>Last updated: {form.lastUpdated}</span>\n            </div>\n            <span>•</span>\n            <Badge variant=\"outline\" className=\"ml-2\">{form.category}</Badge>\n          </div>\n          <p className=\"mt-2 text-muted-foreground\">{form.description}</p>\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={handlePrint}>\n            <Printer className=\"h-4 w-4 mr-1\" /> Print\n          </Button>\n          \n          {isAdmin() && (\n            <>\n              <Button variant=\"outline\" size=\"sm\" onClick={() => navigate(`/forms/edit/${form.id}`)}>\n                <Edit className=\"h-4 w-4 mr-1\" /> Edit\n              </Button>\n              \n              <AlertDialog open={showDeleteAlert} onOpenChange={setShowDeleteAlert}>\n                <AlertDialogTrigger asChild>\n                  <Button variant=\"destructive\" size=\"sm\">\n                    <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                  </Button>\n                </AlertDialogTrigger>\n                <AlertDialogContent>\n                  <AlertDialogHeader>\n                    <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                    <AlertDialogDescription>\n                      This action cannot be undone. This will permanently delete the form\n                      \"{form.title}\" and remove it from the system.\n                    </AlertDialogDescription>\n                  </AlertDialogHeader>\n                  <AlertDialogFooter>\n                    <AlertDialogCancel>Cancel</AlertDialogCancel>\n                    <AlertDialogAction onClick={handleDelete} className=\"bg-destructive text-destructive-foreground\">\n                      Delete\n                    </AlertDialogAction>\n                  </AlertDialogFooter>\n                </AlertDialogContent>\n              </AlertDialog>\n            </>\n          )}\n        </div>\n      </div>\n\n      {/* Tabs for different views */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"preview\">Form Preview</TabsTrigger>\n          <TabsTrigger value=\"instructions\">Instructions</TabsTrigger>\n          <TabsTrigger value=\"code\">Form Code</TabsTrigger>\n        </TabsList>\n        \n        {/* Form Preview Tab */}\n        <TabsContent value=\"preview\">\n          <Card className=\"overflow-hidden\">\n            <CardContent className=\"p-6\">\n              <div className=\"print:pt-8\">\n                {/* Notice about form preview */}\n                <div className=\"bg-amber-50 border-l-4 border-amber-400 p-4 mb-6 print:hidden flex items-start space-x-3\">\n                  <AlertTriangle className=\"h-5 w-5 text-amber-500 mt-0.5 flex-shrink-0\" />\n                  <div>\n                    <h3 className=\"text-sm font-medium text-amber-800\">Form Preview</h3>\n                    <p className=\"text-sm text-amber-700 mt-0.5\">\n                      This is a preview of the form. For actual form submission, please use the embedded form on your application system.\n                    </p>\n                  </div>\n                </div>\n\n                {/* The actual Form preview */}\n                <div \n                  className=\"form-preview protected-content\" \n                  dangerouslySetInnerHTML={{ __html: form.formCode }}\n                ></div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Instructions Tab */}\n        <TabsContent value=\"instructions\">\n          <Card className=\"overflow-hidden\">\n            <CardContent className=\"p-6\">\n              <div \n                className=\"prose prose-slate max-w-none protected-content\" \n                dangerouslySetInnerHTML={{ __html: form.instructions }}\n              ></div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Form Code Tab */}\n        <TabsContent value=\"code\">\n          <Card className=\"overflow-hidden\">\n            <CardHeader>\n              <div className=\"flex justify-between items-center\">\n                <CardTitle>Form HTML Code</CardTitle>\n                <Button variant=\"outline\" size=\"sm\" onClick={handleCopyCode}>\n                  {copyButtonText === \"Copy Code\" ? (\n                    <Copy className=\"h-4 w-4 mr-1\" />\n                  ) : (\n                    <Check className=\"h-4 w-4 mr-1\" />\n                  )}\n                  {copyButtonText}\n                </Button>\n              </div>\n              <CardDescription>\n                This HTML code can be used to embed the form in your application or website.\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"relative\">\n                <pre className=\"p-4 bg-gray-50 rounded-md border overflow-x-auto text-sm font-mono h-[400px] overflow-y-auto\">\n                  {form.formCode}\n                </pre>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default FormDetail;","import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { \n  ArrowLeft, \n  Save, \n  Trash2, \n  AlertTriangle,\n  FileText,\n  Plus,\n  X\n} from 'lucide-react';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@/components/ui/select';\nimport {\n  AlertDialog,\n  AlertDialogAction,\n  AlertDialogCancel,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n  AlertDialogTrigger,\n} from '@/components/ui/alert-dialog';\nimport { \n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbList,\n  BreadcrumbSeparator,\n} from '@/components/ui/breadcrumb';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { useToast } from '@/components/ui/use-toast';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { Checkbox } from '@/components/ui/checkbox';\n\n// Define Form interface\ninterface Form {\n  id: number;\n  title: string;\n  category: string;\n  lastUpdated: string;\n  description: string;\n  formCode: string;\n  formFields: FormField[];\n  instructions: string;\n}\n\ninterface FormField {\n  id: string;\n  label: string;\n  type: string;\n  required: boolean;\n  options?: string[];\n}\n\n// Mock Form categories\nconst FORM_CATEGORIES = [\n  'Lead Management',\n  'Credit',\n  'Verification',\n  'Processing',\n  'Rate Management',\n];\n\n// Field types\nconst FIELD_TYPES = [\n  { value: 'text', label: 'Text Input' },\n  { value: 'email', label: 'Email Input' },\n  { value: 'tel', label: 'Phone Input' },\n  { value: 'number', label: 'Number Input' },\n  { value: 'date', label: 'Date Input' },\n  { value: 'select', label: 'Select Dropdown' },\n  { value: 'textarea', label: 'Text Area' },\n  { value: 'checkbox', label: 'Checkbox' },\n  { value: 'radio', label: 'Radio Buttons' },\n  { value: 'file', label: 'File Upload' },\n  { value: 'signature', label: 'Signature Field' },\n];\n\n// Mock Form data for editing\nconst MOCK_FORM_DATA: Record<string, Form> = {\n  '1': {\n    id: 1,\n    title: 'Lead Intake Form',\n    category: 'Lead Management',\n    lastUpdated: '2023-06-05',\n    description: 'Form for collecting new lead information and initiating the follow-up process.',\n    instructions: `\n      <h3>Form Usage Instructions</h3>\n      <p>This form should be completed for all new leads. The information collected will be used to initiate the follow-up process and qualify leads for appropriate mortgage products.</p>\n      \n      <h4>Key Points:</h4>\n      <ul>\n        <li>Complete all fields marked as required</li>\n        <li>For inquiries from websites, include the specific source URL</li>\n        <li>Rate leads based on initial conversation using our 1-5 qualification scale</li>\n        <li>Submit the form after completion for automatic assignment to the appropriate loan officer</li>\n      </ul>\n      \n      <h4>Data Protection:</h4>\n      <p>This form collects personal information covered under privacy regulations. Ensure you have verbal consent to collect and process this data. The submitted information should not be shared outside the company or used for purposes other than mortgage-related communications.</p>\n    `,\n    formCode: `\n      <form id=\"leadIntakeForm\" class=\"space-y-6\">\n        <!-- Personal Information -->\n        <div class=\"space-y-4\">\n          <h3 class=\"text-lg font-medium\">Personal Information</h3>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"firstName\" class=\"block text-sm font-medium\">First Name *</label>\n              <input type=\"text\" id=\"firstName\" name=\"firstName\" required class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"lastName\" class=\"block text-sm font-medium\">Last Name *</label>\n              <input type=\"text\" id=\"lastName\" name=\"lastName\" required class=\"w-full p-2 border rounded\" />\n            </div>\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"email\" class=\"block text-sm font-medium\">Email Address *</label>\n              <input type=\"email\" id=\"email\" name=\"email\" required class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"phone\" class=\"block text-sm font-medium\">Phone Number *</label>\n              <input type=\"tel\" id=\"phone\" name=\"phone\" required class=\"w-full p-2 border rounded\" />\n            </div>\n          </div>\n          \n          <div class=\"space-y-1\">\n            <label for=\"address\" class=\"block text-sm font-medium\">Address</label>\n            <input type=\"text\" id=\"address\" name=\"address\" class=\"w-full p-2 border rounded\" />\n          </div>\n          \n          <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div class=\"space-y-1\">\n              <label for=\"city\" class=\"block text-sm font-medium\">City</label>\n              <input type=\"text\" id=\"city\" name=\"city\" class=\"w-full p-2 border rounded\" />\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"state\" class=\"block text-sm font-medium\">State</label>\n              <select id=\"state\" name=\"state\" class=\"w-full p-2 border rounded\">\n                <option value=\"\">Select State</option>\n                <option value=\"AL\">Alabama</option>\n                <option value=\"AK\">Alaska</option>\n                <!-- More states here -->\n                <option value=\"WY\">Wyoming</option>\n              </select>\n            </div>\n            \n            <div class=\"space-y-1\">\n              <label for=\"zip\" class=\"block text-sm font-medium\">ZIP Code</label>\n              <input type=\"text\" id=\"zip\" name=\"zip\" class=\"w-full p-2 border rounded\" />\n            </div>\n          </div>\n        </div>\n        \n        <!-- Form Submission -->\n        <div class=\"flex justify-end space-x-4\">\n          <button type=\"reset\" class=\"px-4 py-2 border rounded bg-gray-100\">Reset Form</button>\n          <button type=\"submit\" class=\"px-4 py-2 rounded bg-primary text-white\">Submit Lead</button>\n        </div>\n      </form>\n    `,\n    formFields: [\n      { id: 'firstName', label: 'First Name', type: 'text', required: true },\n      { id: 'lastName', label: 'Last Name', type: 'text', required: true },\n      { id: 'email', label: 'Email Address', type: 'email', required: true },\n      { id: 'phone', label: 'Phone Number', type: 'tel', required: true },\n      { id: 'address', label: 'Address', type: 'text', required: false },\n      { id: 'city', label: 'City', type: 'text', required: false },\n      { id: 'state', label: 'State', type: 'select', required: false },\n      { id: 'zip', label: 'ZIP Code', type: 'text', required: false },\n    ],\n  }\n};\n\n// Default empty form\nconst DEFAULT_NEW_FORM: Omit<Form, 'id'> = {\n  title: '',\n  category: 'Lead Management',\n  lastUpdated: new Date().toISOString().split('T')[0],\n  description: '',\n  formCode: `\n    <form id=\"newForm\" class=\"space-y-6\">\n      <div class=\"space-y-4\">\n        <h3 class=\"text-lg font-medium\">Form Section</h3>\n        \n        <div class=\"space-y-1\">\n          <label for=\"field1\" class=\"block text-sm font-medium\">Field Label</label>\n          <input type=\"text\" id=\"field1\" name=\"field1\" class=\"w-full p-2 border rounded\" />\n        </div>\n      </div>\n      \n      <div class=\"flex justify-end space-x-4\">\n        <button type=\"reset\" class=\"px-4 py-2 border rounded bg-gray-100\">Reset</button>\n        <button type=\"submit\" class=\"px-4 py-2 rounded bg-primary text-white\">Submit</button>\n      </div>\n    </form>\n  `,\n  formFields: [\n    { id: 'field1', label: 'Field Label', type: 'text', required: false }\n  ],\n  instructions: `\n    <h3>Form Usage Instructions</h3>\n    <p>Instructions for using this form go here.</p>\n  `,\n};\n\nconst FormEdit: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const isEditing = id !== 'new';\n  const navigate = useNavigate();\n  const { toast } = useToast();\n  \n  const [form, setForm] = useState<Form | (Omit<Form, 'id'> & { id?: number })>(\n    isEditing ? { \n      id: 0, \n      title: '', \n      category: '', \n      lastUpdated: '', \n      description: '', \n      formCode: '', \n      formFields: [], \n      instructions: '' \n    } : DEFAULT_NEW_FORM\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [showDeleteAlert, setShowDeleteAlert] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>(\"basic\");\n  const [saving, setSaving] = useState<boolean>(false);\n\n  useEffect(() => {\n    const fetchForm = () => {\n      setLoading(true);\n      // Simulate API delay\n      setTimeout(() => {\n        if (isEditing && id && MOCK_FORM_DATA[id]) {\n          setForm(MOCK_FORM_DATA[id]);\n        }\n        setLoading(false);\n      }, 500);\n    };\n\n    fetchForm();\n  }, [id, isEditing]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setForm(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleCategoryChange = (value: string) => {\n    setForm(prev => ({ ...prev, category: value }));\n  };\n\n  const handleSave = () => {\n    setSaving(true);\n    \n    // Update last updated date\n    const updatedForm = {\n      ...form,\n      lastUpdated: new Date().toISOString().split('T')[0]\n    };\n    \n    // In a real app, this would be an API call\n    setTimeout(() => {\n      setSaving(false);\n      \n      toast({\n        title: isEditing ? \"Form updated\" : \"Form created\",\n        description: isEditing \n          ? `Form \"${form.title}\" has been updated successfully` \n          : `Form \"${form.title}\" has been created successfully`,\n      });\n      \n      navigate(isEditing ? `/forms/${id}` : '/forms');\n    }, 1000);\n  };\n\n  const handleDelete = () => {\n    // In a real app, this would be an API call\n    setTimeout(() => {\n      toast({\n        title: \"Form deleted\",\n        description: \"The form was successfully deleted\",\n      });\n      navigate('/forms');\n    }, 500);\n  };\n\n  // Handle form field operations\n  const handleAddField = () => {\n    const newField: FormField = {\n      id: `field_${Date.now()}`,\n      label: 'New Field',\n      type: 'text',\n      required: false\n    };\n    \n    setForm(prev => ({\n      ...prev,\n      formFields: [...prev.formFields, newField]\n    }));\n  };\n\n  const handleRemoveField = (fieldId: string) => {\n    setForm(prev => ({\n      ...prev,\n      formFields: prev.formFields.filter(field => field.id !== fieldId)\n    }));\n  };\n\n  const handleFieldChange = (fieldId: string, property: keyof FormField, value: any) => {\n    setForm(prev => ({\n      ...prev,\n      formFields: prev.formFields.map(field => \n        field.id === fieldId ? { ...field, [property]: value } : field\n      )\n    }));\n  };\n\n  if (loading) {\n    return (\n      <div className=\"space-y-6\">\n        <div className=\"flex items-center space-x-4 mb-6\">\n          <Button variant=\"ghost\" size=\"sm\" asChild>\n            <Link to=\"/forms\">\n              <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back\n            </Link>\n          </Button>\n          <Skeleton className=\"h-4 w-40\" />\n        </div>\n        \n        <div className=\"space-y-3\">\n          <Skeleton className=\"h-8 w-2/3\" />\n        </div>\n        \n        <Card>\n          <CardHeader>\n            <Skeleton className=\"h-8 w-60\" />\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-10 w-full\" />\n            <Skeleton className=\"h-60 w-full\" />\n          </CardContent>\n          <CardFooter>\n            <Skeleton className=\"h-10 w-24\" />\n          </CardFooter>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Breadcrumb */}\n      <Breadcrumb className=\"mb-6\">\n        <BreadcrumbList>\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/dashboard\">Dashboard</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink href=\"/forms\">Forms</BreadcrumbLink>\n          </BreadcrumbItem>\n          <BreadcrumbSeparator />\n          <BreadcrumbItem>\n            <BreadcrumbLink>{isEditing ? `Edit: ${form.title}` : \"Create New Form\"}</BreadcrumbLink>\n          </BreadcrumbItem>\n        </BreadcrumbList>\n      </Breadcrumb>\n\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">\n            {isEditing ? `Edit Form: ${form.title}` : \"Create New Form\"}\n          </h1>\n          <p className=\"text-muted-foreground\">\n            {isEditing ? \"Update the form details, fields, and code\" : \"Create a new internal form\"}\n          </p>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          {isEditing && (\n            <AlertDialog open={showDeleteAlert} onOpenChange={setShowDeleteAlert}>\n              <AlertDialogTrigger asChild>\n                <Button variant=\"destructive\" size=\"sm\">\n                  <Trash2 className=\"h-4 w-4 mr-1\" /> Delete\n                </Button>\n              </AlertDialogTrigger>\n              <AlertDialogContent>\n                <AlertDialogHeader>\n                  <AlertDialogTitle>Are you sure?</AlertDialogTitle>\n                  <AlertDialogDescription>\n                    This action cannot be undone. This will permanently delete the form\n                    \"{form.title}\" and remove it from the system.\n                  </AlertDialogDescription>\n                </AlertDialogHeader>\n                <AlertDialogFooter>\n                  <AlertDialogCancel>Cancel</AlertDialogCancel>\n                  <AlertDialogAction onClick={handleDelete} className=\"bg-destructive text-destructive-foreground\">\n                    Delete\n                  </AlertDialogAction>\n                </AlertDialogFooter>\n              </AlertDialogContent>\n            </AlertDialog>\n          )}\n          \n          <Button onClick={handleSave} disabled={saving}>\n            <Save className=\"h-4 w-4 mr-1\" /> \n            {saving ? 'Saving...' : 'Save Form'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Content Tabs */}\n      <Tabs defaultValue=\"basic\" value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"basic\">Basic Info</TabsTrigger>\n          <TabsTrigger value=\"fields\">Form Fields</TabsTrigger>\n          <TabsTrigger value=\"code\">HTML Code</TabsTrigger>\n          <TabsTrigger value=\"instructions\">Instructions</TabsTrigger>\n        </TabsList>\n        \n        {/* Basic Info Tab */}\n        <TabsContent value=\"basic\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                Form Information\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"title\">Form Title</Label>\n                  <Input \n                    id=\"title\" \n                    name=\"title\" \n                    value={form.title} \n                    onChange={handleChange} \n                    placeholder=\"Enter form title\"\n                    required\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"category\">Category</Label>\n                  <Select \n                    value={form.category} \n                    onValueChange={handleCategoryChange}\n                  >\n                    <SelectTrigger>\n                      <SelectValue placeholder=\"Select category\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      {FORM_CATEGORIES.map(category => (\n                        <SelectItem key={category} value={category}>\n                          {category}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"description\">Description</Label>\n                <Textarea \n                  id=\"description\" \n                  name=\"description\" \n                  value={form.description} \n                  onChange={handleChange} \n                  placeholder=\"Enter a brief description of this form\"\n                  className=\"min-h-[80px]\"\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Form Fields Tab */}\n        <TabsContent value=\"fields\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex justify-between items-center\">\n                <CardTitle className=\"flex items-center gap-2\">\n                  <FileText className=\"h-5 w-5\" />\n                  Form Fields\n                </CardTitle>\n                <Button size=\"sm\" onClick={handleAddField}>\n                  <Plus className=\"h-4 w-4 mr-1\" />\n                  Add Field\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {form.formFields.length === 0 ? (\n                <div className=\"text-center py-8 border rounded-md bg-gray-50\">\n                  <p className=\"text-muted-foreground\">No fields added yet. Click \"Add Field\" to get started.</p>\n                </div>\n              ) : (\n                form.formFields.map((field, index) => (\n                  <div key={field.id} className=\"p-4 border rounded-md relative\">\n                    <Button \n                      variant=\"ghost\" \n                      size=\"sm\" \n                      className=\"absolute right-2 top-2 h-8 w-8 p-0\" \n                      onClick={() => handleRemoveField(field.id)}\n                    >\n                      <X className=\"h-4 w-4\" />\n                    </Button>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <div className=\"space-y-2\">\n                        <Label htmlFor={`${field.id}-label`}>Field Label</Label>\n                        <Input \n                          id={`${field.id}-label`}\n                          value={field.label}\n                          onChange={(e) => handleFieldChange(field.id, 'label', e.target.value)}\n                        />\n                      </div>\n                      \n                      <div className=\"space-y-2\">\n                        <Label htmlFor={`${field.id}-type`}>Field Type</Label>\n                        <Select \n                          value={field.type}\n                          onValueChange={(value) => handleFieldChange(field.id, 'type', value)}\n                        >\n                          <SelectTrigger id={`${field.id}-type`}>\n                            <SelectValue placeholder=\"Select field type\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {FIELD_TYPES.map(type => (\n                              <SelectItem key={type.value} value={type.value}>\n                                {type.label}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </div>\n                    </div>\n                    \n                    <div className=\"mt-4\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Checkbox \n                          id={`${field.id}-required`}\n                          checked={field.required}\n                          onCheckedChange={(checked) => handleFieldChange(field.id, 'required', !!checked)}\n                        />\n                        <Label htmlFor={`${field.id}-required`}>Required Field</Label>\n                      </div>\n                    </div>\n                    \n                    {field.type === 'select' || field.type === 'radio' ? (\n                      <div className=\"mt-4 space-y-2\">\n                        <Label htmlFor={`${field.id}-options`}>Options (one per line)</Label>\n                        <Textarea \n                          id={`${field.id}-options`}\n                          value={field.options?.join('\\n') || ''}\n                          onChange={(e) => handleFieldChange(field.id, 'options', e.target.value.split('\\n'))}\n                          placeholder=\"Enter options, one per line\"\n                          className=\"min-h-[80px]\"\n                        />\n                      </div>\n                    ) : null}\n                  </div>\n                ))\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* HTML Code Tab */}\n        <TabsContent value=\"code\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                Form HTML Code\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"formCode\">HTML Code</Label>\n                <div className=\"border rounded-md\">\n                  <Textarea \n                    id=\"formCode\" \n                    name=\"formCode\" \n                    value={form.formCode} \n                    onChange={handleChange} \n                    placeholder=\"Enter the form HTML code\"\n                    className=\"min-h-[400px] font-mono text-sm border-0\"\n                  />\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  You can edit the HTML directly or use the Form Fields tab to generate the basic structure.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Instructions Tab */}\n        <TabsContent value=\"instructions\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <FileText className=\"h-5 w-5\" />\n                Form Instructions\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"instructions\">Instructions (HTML)</Label>\n                <div className=\"border rounded-md\">\n                  <Textarea \n                    id=\"instructions\" \n                    name=\"instructions\" \n                    value={form.instructions} \n                    onChange={handleChange} \n                    placeholder=\"Enter instructions for using this form (HTML format)\"\n                    className=\"min-h-[300px] font-mono text-sm border-0\"\n                  />\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-2\">\n                  You can use HTML tags to format the instructions. Common tags: &lt;h3&gt;, &lt;h4&gt;, &lt;p&gt;, &lt;ul&gt;, &lt;ol&gt;, &lt;li&gt;, &lt;strong&gt;.\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n      \n      {/* Footer Actions */}\n      <div className=\"flex justify-between\">\n        <Button variant=\"outline\" onClick={() => navigate('/forms')}>Cancel</Button>\n        <Button onClick={handleSave} disabled={saving}>\n          <Save className=\"h-4 w-4 mr-1\" /> \n          {saving ? 'Saving...' : 'Save Form'}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default FormEdit;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { \n  Calculator, \n  Calendar, \n  Database, \n  FileSearch, \n  DollarSign, \n  BarChart, \n  Map, \n  Search,\n  Settings,\n  LucideIcon\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { USER_ROLES, UserRole } from '../../contexts/AuthContext';\n\ninterface ToolCardProps {\n  icon: LucideIcon;\n  title: string;\n  description: string;\n  href: string;\n  color: string;\n}\n\ninterface Tool {\n  id: number;\n  title: string;\n  description: string;\n  icon: LucideIcon;\n  href: string;\n  color: string;\n  roles: UserRole[];\n}\n\nconst ToolCard: React.FC<ToolCardProps> = ({ icon: Icon, title, description, href, color }) => (\n  <Card className=\"transition-all hover:shadow-md cursor-pointer\">\n    <Link to={href}>\n      <CardHeader className=\"pb-2\">\n        <div className=\"flex justify-between items-center\">\n          <CardTitle className=\"text-lg\">{title}</CardTitle>\n          <div className={`p-2 rounded-full ${color}`}>\n            <Icon className=\"h-5 w-5 text-white\" />\n          </div>\n        </div>\n      </CardHeader>\n      <CardContent>\n        <CardDescription>{description}</CardDescription>\n      </CardContent>\n    </Link>\n  </Card>\n);\n\nconst Tools: React.FC = () => {\n  const { hasRole } = useAuth();\n  \n  // Mock tools data\n  const tools: Tool[] = [\n    {\n      id: 1,\n      title: 'Mortgage Calculator',\n      description: 'Calculate monthly payments, interest, and amortization schedules.',\n      icon: Calculator,\n      href: '/tools/calculator',\n      color: 'bg-blue-500',\n      roles: [USER_ROLES.ADMIN, USER_ROLES.LOAN_OFFICER, USER_ROLES.LOAN_OFFICER_ASSISTANT],\n    },\n    {\n      id: 2,\n      title: 'Rate Comparison Tool',\n      description: 'Compare current rates across different loan programs and terms.',\n      icon: BarChart,\n      href: '/tools/rates',\n      color: 'bg-green-500',\n      roles: [USER_ROLES.ADMIN, USER_ROLES.LOAN_OFFICER, USER_ROLES.LOAN_OFFICER_ASSISTANT],\n    },\n    {\n      id: 3,\n      title: 'Document Finder',\n      description: 'Search and locate required documents for various loan types.',\n      icon: FileSearch,\n      href: '/tools/docs',\n      color: 'bg-orange-500',\n      roles: [USER_ROLES.ADMIN, USER_ROLES.LOAN_OFFICER, USER_ROLES.LOAN_OFFICER_ASSISTANT],\n    },\n    {\n      id: 4,\n      title: 'Closing Cost Estimator',\n      description: 'Generate detailed closing cost estimates for clients.',\n      icon: DollarSign,\n      href: '/tools/closing-costs',\n      color: 'bg-purple-500',\n      roles: [USER_ROLES.ADMIN, USER_ROLES.LOAN_OFFICER],\n    },\n    {\n      id: 5,\n      title: 'Property Lookup',\n      description: 'Access property information, tax records, and comparables.',\n      icon: Map,\n      href: '/tools/property',\n      color: 'bg-red-500',\n      roles: [USER_ROLES.ADMIN, USER_ROLES.LOAN_OFFICER],\n    },\n    {\n      id: 6,\n      title: 'Scheduling Assistant',\n      description: 'Schedule client meetings and set follow-up reminders.',\n      icon: Calendar,\n      href: '/tools/schedule',\n      color: 'bg-teal-500',\n      roles: [USER_ROLES.ADMIN, USER_ROLES.LOAN_OFFICER, USER_ROLES.LOAN_OFFICER_ASSISTANT],\n    },\n    {\n      id: 7,\n      title: 'Loan Program Finder',\n      description: 'Find the right loan programs based on client criteria.',\n      icon: Search,\n      href: '/tools/programs',\n      color: 'bg-indigo-500',\n      roles: [USER_ROLES.ADMIN, USER_ROLES.LOAN_OFFICER],\n    },\n    {\n      id: 8,\n      title: 'Data Export Tool',\n      description: 'Export loan data and reports for analysis.',\n      icon: Database,\n      href: '/tools/export',\n      color: 'bg-pink-500',\n      roles: [USER_ROLES.ADMIN],\n    },\n  ];\n\n  // Filter tools based on user role\n  const availableTools = tools.filter(tool => {\n    return tool.roles.some(role => hasRole(role));\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center space-y-4 md:space-y-0\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">Tools & Calculators</h1>\n          <p className=\"text-gray-500\">Access productivity tools and calculators to simplify your workflow</p>\n        </div>\n        {hasRole(USER_ROLES.ADMIN) && (\n          <Button variant=\"outline\">\n            <Settings className=\"mr-2 h-4 w-4\" />\n            Manage Tools\n          </Button>\n        )}\n      </div>\n\n      {/* Tools Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n        {availableTools.map((tool) => (\n          <ToolCard\n            key={tool.id}\n            title={tool.title}\n            description={tool.description}\n            icon={tool.icon}\n            href={tool.href}\n            color={tool.color}\n          />\n        ))}\n      </div>\n\n      {/* Empty state (unlikely to be seen) */}\n      {availableTools.length === 0 && (\n        <Card className=\"p-8 text-center\">\n          <div className=\"mx-auto w-12 h-12 rounded-full bg-gray-100 flex items-center justify-center mb-4\">\n            <Calculator className=\"h-6 w-6 text-gray-400\" />\n          </div>\n          <h3 className=\"text-lg font-medium\">No Tools Available</h3>\n          <p className=\"text-gray-500 max-w-md mx-auto mt-2\">\n            There are currently no tools available for your role. Please contact your administrator for assistance.\n          </p>\n        </Card>\n      )}\n    </div>\n  );\n};\n\nexport default Tools;","import React, { useState, useEffect, ChangeEvent } from 'react';\nimport { ArrowLeft, Calculator, DollarSign, Percent, Calendar } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\n\ninterface AmortizationRow {\n  month: number;\n  payment: number;\n  principal: number;\n  interest: number;\n  balance: number;\n}\n\nconst MortgageCalculator: React.FC = () => {\n  const [loanAmount, setLoanAmount] = useState<number>(300000);\n  const [interestRate, setInterestRate] = useState<number>(4.5);\n  const [loanTerm, setLoanTerm] = useState<number>(30);\n  const [monthlyPayment, setMonthlyPayment] = useState<number>(0);\n  const [totalInterest, setTotalInterest] = useState<number>(0);\n  const [totalPayment, setTotalPayment] = useState<number>(0);\n  const [amortizationSchedule, setAmortizationSchedule] = useState<AmortizationRow[]>([]);\n\n  // Calculate mortgage when inputs change\n  useEffect(() => {\n    calculateMortgage();\n  }, [loanAmount, interestRate, loanTerm]);\n\n  const calculateMortgage = () => {\n    // Convert annual interest rate to monthly rate\n    const monthlyRate = interestRate / 100 / 12;\n    \n    // Convert years to months\n    const numberOfPayments = loanTerm * 12;\n    \n    // Calculate monthly payment using formula: P = L[r(1+r)^n]/[(1+r)^n-1]\n    const monthlyPayment = loanAmount * (monthlyRate * Math.pow(1 + monthlyRate, numberOfPayments)) / (Math.pow(1 + monthlyRate, numberOfPayments) - 1);\n    \n    // Calculate total payment and interest\n    const totalPayment = monthlyPayment * numberOfPayments;\n    const totalInterest = totalPayment - loanAmount;\n    \n    setMonthlyPayment(monthlyPayment);\n    setTotalInterest(totalInterest);\n    setTotalPayment(totalPayment);\n    \n    // Generate amortization schedule (first 12 months for preview)\n    let balance = loanAmount;\n    const schedule = [];\n    \n    for (let i = 1; i <= Math.min(12, numberOfPayments); i++) {\n      const interestPayment = balance * monthlyRate;\n      const principalPayment = monthlyPayment - interestPayment;\n      balance -= principalPayment;\n      \n      schedule.push({\n        month: i,\n        payment: monthlyPayment,\n        principal: principalPayment,\n        interest: interestPayment,\n        balance: balance\n      });\n    }\n    \n    setAmortizationSchedule(schedule);\n  };\n\n  // Format currency\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\" asChild>\n          <Link to=\"/tools\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back to Tools\n          </Link>\n        </Button>\n      </div>\n\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight\">Mortgage Calculator</h1>\n        <p className=\"text-gray-500\">Calculate monthly payments, total interest, and amortization</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Input fields */}\n        <Card className=\"lg:col-span-1\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center text-lg\">\n              <Calculator className=\"mr-2 h-5 w-5 text-primary\" />\n              Input Values\n            </CardTitle>\n            <CardDescription>\n              Enter loan details to calculate mortgage\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <label htmlFor=\"loan-amount\" className=\"text-sm font-medium flex items-center\">\n                <DollarSign className=\"h-4 w-4 mr-1 text-gray-500\" />\n                Loan Amount\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">$</span>\n                </div>\n                <Input\n                  id=\"loan-amount\"\n                  type=\"number\"\n                  min=\"1000\"\n                  step=\"1000\"\n                  className=\"pl-7\"\n                  value={loanAmount}\n                  onChange={(e) => setLoanAmount(Number(e.target.value))}\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <label htmlFor=\"interest-rate\" className=\"text-sm font-medium flex items-center\">\n                <Percent className=\"h-4 w-4 mr-1 text-gray-500\" />\n                Interest Rate (%)\n              </label>\n              <div className=\"relative\">\n                <Input\n                  id=\"interest-rate\"\n                  type=\"number\"\n                  min=\"0.1\"\n                  step=\"0.1\"\n                  max=\"20\"\n                  value={interestRate}\n                  onChange={(e) => setInterestRate(Number(e.target.value))}\n                />\n                <div className=\"absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">%</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <label htmlFor=\"loan-term\" className=\"text-sm font-medium flex items-center\">\n                <Calendar className=\"h-4 w-4 mr-1 text-gray-500\" />\n                Loan Term (years)\n              </label>\n              <select\n                id=\"loan-term\"\n                className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                value={loanTerm}\n                onChange={(e) => setLoanTerm(Number(e.target.value))}\n              >\n                <option value=\"30\">30 years</option>\n                <option value=\"20\">20 years</option>\n                <option value=\"15\">15 years</option>\n                <option value=\"10\">10 years</option>\n                <option value=\"5\">5 years</option>\n              </select>\n            </div>\n          </CardContent>\n          <CardFooter>\n            <Button className=\"w-full\" onClick={calculateMortgage}>\n              <Calculator className=\"mr-2 h-4 w-4\" />\n              Calculate\n            </Button>\n          </CardFooter>\n        </Card>\n\n        {/* Results summary */}\n        <Card className=\"lg:col-span-2\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Mortgage Summary</CardTitle>\n            <CardDescription>\n              Based on your inputs, here's your mortgage breakdown\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div className=\"bg-primary/10 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500 mb-1\">Monthly Payment</div>\n                <div className=\"text-2xl font-bold\">{formatCurrency(monthlyPayment)}</div>\n              </div>\n              <div className=\"bg-primary/10 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500 mb-1\">Total Interest</div>\n                <div className=\"text-2xl font-bold\">{formatCurrency(totalInterest)}</div>\n              </div>\n              <div className=\"bg-primary/10 p-4 rounded-lg\">\n                <div className=\"text-sm text-gray-500 mb-1\">Total Payment</div>\n                <div className=\"text-2xl font-bold\">{formatCurrency(totalPayment)}</div>\n              </div>\n            </div>\n\n            {/* Amortization preview */}\n            <div>\n              <h3 className=\"text-lg font-medium mb-3\">Amortization Schedule (First Year)</h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"min-w-full divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50\">\n                    <tr>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Month</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Payment</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Principal</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Interest</th>\n                      <th className=\"px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Remaining Balance</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y divide-gray-200\">\n                    {amortizationSchedule.map((row) => (\n                      <tr key={row.month}>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{row.month}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{formatCurrency(row.payment)}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{formatCurrency(row.principal)}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{formatCurrency(row.interest)}</td>\n                        <td className=\"px-4 py-2 whitespace-nowrap text-sm\">{formatCurrency(row.balance)}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </CardContent>\n          <CardFooter className=\"flex justify-between\">\n            <Button variant=\"outline\">\n              Print Results\n            </Button>\n            <Button variant=\"outline\">\n              Export Full Schedule\n            </Button>\n          </CardFooter>\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default MortgageCalculator;","import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n      className\n    )}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","import React, { useState, useEffect } from 'react';\nimport { ArrowLeft, BarChart, DollarSign, Percent, Calendar, RefreshCcw, Download } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@/components/ui/select';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\ninterface RateOption {\n  id: number;\n  loanType: string;\n  term: number;\n  rate: number;\n  apr: number;\n  points: number;\n  monthlyPayment: number;\n  totalInterest: number;\n  bestFor: string;\n}\n\nconst RateComparisonTool: React.FC = () => {\n  const [loanAmount, setLoanAmount] = useState<number>(300000);\n  const [loanType, setLoanType] = useState<string>('all');\n  const [loanTerm, setLoanTerm] = useState<string>('all');\n  const [lastUpdated, setLastUpdated] = useState<string>(new Date().toISOString().split('T')[0]);\n  const [rateOptions, setRateOptions] = useState<RateOption[]>([]);\n\n  // Mock rate options\n  const mockRateOptions: RateOption[] = [\n    {\n      id: 1,\n      loanType: 'Conventional',\n      term: 30,\n      rate: 4.25,\n      apr: 4.35,\n      points: 0,\n      monthlyPayment: 1475.82,\n      totalInterest: 231295.20,\n      bestFor: 'Low monthly payments'\n    },\n    {\n      id: 2,\n      loanType: 'Conventional',\n      term: 15,\n      rate: 3.75,\n      apr: 3.85,\n      points: 0.25,\n      monthlyPayment: 2181.73,\n      totalInterest: 92711.40,\n      bestFor: 'Faster equity building'\n    },\n    {\n      id: 3,\n      loanType: 'FHA',\n      term: 30,\n      rate: 4.00,\n      apr: 4.75,\n      points: 0,\n      monthlyPayment: 1432.25,\n      totalInterest: 215610.00,\n      bestFor: 'Lower credit scores'\n    },\n    {\n      id: 4,\n      loanType: 'VA',\n      term: 30,\n      rate: 3.75,\n      apr: 3.95,\n      points: 0.5,\n      monthlyPayment: 1389.35,\n      totalInterest: 200165.00,\n      bestFor: 'Military veterans'\n    },\n    {\n      id: 5,\n      loanType: 'Jumbo',\n      term: 30,\n      rate: 4.50,\n      apr: 4.65,\n      points: 0.75,\n      monthlyPayment: 1520.06,\n      totalInterest: 247221.60,\n      bestFor: 'High-value properties'\n    },\n    {\n      id: 6,\n      loanType: 'Conventional',\n      term: 20,\n      rate: 4.00,\n      apr: 4.15,\n      points: 0.25,\n      monthlyPayment: 1817.94,\n      totalInterest: 136305.60,\n      bestFor: 'Balance of term and interest'\n    },\n    {\n      id: 7,\n      loanType: 'USDA',\n      term: 30,\n      rate: 3.85,\n      apr: 4.35,\n      points: 0,\n      monthlyPayment: 1405.77,\n      totalInterest: 206077.20,\n      bestFor: 'Rural properties'\n    },\n  ];\n\n  // Filter options based on user selections\n  useEffect(() => {\n    let filteredOptions = mockRateOptions;\n    \n    if (loanType !== 'all') {\n      filteredOptions = filteredOptions.filter(option => option.loanType === loanType);\n    }\n    \n    if (loanTerm !== 'all') {\n      filteredOptions = filteredOptions.filter(option => option.term === parseInt(loanTerm));\n    }\n    \n    // Calculate monthly payment and total interest based on current loan amount\n    const recalculatedOptions = filteredOptions.map(option => {\n      const monthlyRate = option.rate / 100 / 12;\n      const numberOfPayments = option.term * 12;\n      const monthlyPayment = loanAmount * (monthlyRate * Math.pow(1 + monthlyRate, numberOfPayments)) / (Math.pow(1 + monthlyRate, numberOfPayments) - 1);\n      const totalInterest = (monthlyPayment * numberOfPayments) - loanAmount;\n      \n      return {\n        ...option,\n        monthlyPayment,\n        totalInterest\n      };\n    });\n    \n    setRateOptions(recalculatedOptions);\n  }, [loanAmount, loanType, loanTerm]);\n\n  // Format currency\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value);\n  };\n\n  // Format percent\n  const formatPercent = (value: number): string => {\n    return value.toFixed(3) + '%';\n  };\n\n  // Get loan type badge color\n  const getLoanTypeBadgeColor = (loanType: string): string => {\n    switch(loanType) {\n      case 'Conventional': return 'bg-blue-100 text-blue-800';\n      case 'FHA': return 'bg-green-100 text-green-800';\n      case 'VA': return 'bg-purple-100 text-purple-800';\n      case 'Jumbo': return 'bg-amber-100 text-amber-800';\n      case 'USDA': return 'bg-emerald-100 text-emerald-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  // Refresh rates\n  const refreshRates = () => {\n    // In a real app, this would fetch the latest rates from an API\n    setLastUpdated(new Date().toISOString().split('T')[0]);\n    // For this demo, we'll just randomize the rates slightly\n    const updatedOptions = mockRateOptions.map(option => {\n      const rateChange = (Math.random() - 0.5) * 0.2; // Random change between -0.1 and +0.1\n      return {\n        ...option,\n        rate: parseFloat((option.rate + rateChange).toFixed(3)),\n        apr: parseFloat((option.apr + rateChange).toFixed(3))\n      };\n    });\n    \n    setRateOptions(updatedOptions);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\" asChild>\n          <Link to=\"/tools\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back to Tools\n          </Link>\n        </Button>\n      </div>\n\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">Rate Comparison Tool</h1>\n          <p className=\"text-gray-500\">Compare current rates across different loan programs and terms</p>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <span className=\"text-sm text-gray-500\">Last updated: {lastUpdated}</span>\n          <Button variant=\"outline\" size=\"sm\" onClick={refreshRates}>\n            <RefreshCcw className=\"h-4 w-4 mr-1\" />\n            Refresh Rates\n          </Button>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Loan Details</CardTitle>\n          <CardDescription>\n            Enter your loan amount and preferences to compare rates\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <div className=\"space-y-2\">\n              <label htmlFor=\"loan-amount\" className=\"text-sm font-medium flex items-center\">\n                <DollarSign className=\"h-4 w-4 mr-1 text-gray-500\" />\n                Loan Amount\n              </label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">$</span>\n                </div>\n                <Input\n                  id=\"loan-amount\"\n                  type=\"number\"\n                  min=\"50000\"\n                  step=\"10000\"\n                  className=\"pl-7\"\n                  value={loanAmount}\n                  onChange={(e) => setLoanAmount(Number(e.target.value))}\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <label htmlFor=\"loan-type\" className=\"text-sm font-medium flex items-center\">\n                <BarChart className=\"h-4 w-4 mr-1 text-gray-500\" />\n                Loan Type\n              </label>\n              <Select value={loanType} onValueChange={setLoanType}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select loan type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Types</SelectItem>\n                  <SelectItem value=\"Conventional\">Conventional</SelectItem>\n                  <SelectItem value=\"FHA\">FHA</SelectItem>\n                  <SelectItem value=\"VA\">VA</SelectItem>\n                  <SelectItem value=\"Jumbo\">Jumbo</SelectItem>\n                  <SelectItem value=\"USDA\">USDA</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <label htmlFor=\"loan-term\" className=\"text-sm font-medium flex items-center\">\n                <Calendar className=\"h-4 w-4 mr-1 text-gray-500\" />\n                Loan Term\n              </label>\n              <Select value={loanTerm} onValueChange={setLoanTerm}>\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select loan term\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">All Terms</SelectItem>\n                  <SelectItem value=\"30\">30 Years</SelectItem>\n                  <SelectItem value=\"20\">20 Years</SelectItem>\n                  <SelectItem value=\"15\">15 Years</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Rate comparison table */}\n      <Tabs defaultValue=\"table\" className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-2 max-w-md mx-auto mb-4\">\n          <TabsTrigger value=\"table\">Table View</TabsTrigger>\n          <TabsTrigger value=\"cards\">Card View</TabsTrigger>\n        </TabsList>\n        \n        <TabsContent value=\"table\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Current Rate Options</CardTitle>\n              <CardDescription>\n                Based on a loan amount of {formatCurrency(loanAmount)}\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Loan Type</TableHead>\n                      <TableHead>Term</TableHead>\n                      <TableHead>Rate</TableHead>\n                      <TableHead>APR</TableHead>\n                      <TableHead>Points</TableHead>\n                      <TableHead>Monthly Payment</TableHead>\n                      <TableHead>Total Interest</TableHead>\n                      <TableHead>Best For</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {rateOptions.map((option) => (\n                      <TableRow key={option.id}>\n                        <TableCell>\n                          <span className={`inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ${getLoanTypeBadgeColor(option.loanType)}`}>\n                            {option.loanType}\n                          </span>\n                        </TableCell>\n                        <TableCell>{option.term} years</TableCell>\n                        <TableCell>{formatPercent(option.rate)}</TableCell>\n                        <TableCell>{formatPercent(option.apr)}</TableCell>\n                        <TableCell>{option.points.toFixed(2)}</TableCell>\n                        <TableCell className=\"font-medium\">{formatCurrency(option.monthlyPayment)}</TableCell>\n                        <TableCell>{formatCurrency(option.totalInterest)}</TableCell>\n                        <TableCell>{option.bestFor}</TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n            </CardContent>\n            <CardFooter className=\"flex justify-between\">\n              <Button variant=\"outline\" onClick={refreshRates}>\n                <RefreshCcw className=\"h-4 w-4 mr-1\" />\n                Refresh Rates\n              </Button>\n              <Button variant=\"outline\">\n                <Download className=\"h-4 w-4 mr-1\" />\n                Export Data\n              </Button>\n            </CardFooter>\n          </Card>\n        </TabsContent>\n        \n        <TabsContent value=\"cards\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {rateOptions.map((option) => (\n              <Card key={option.id} className=\"overflow-hidden\">\n                <CardHeader className=\"pb-2\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <CardTitle className=\"text-lg flex items-center\">\n                        <span className={`inline-flex items-center rounded-md px-2 py-1 text-xs font-medium mr-2 ${getLoanTypeBadgeColor(option.loanType)}`}>\n                          {option.loanType}\n                        </span>\n                        {option.term}-Year Fixed\n                      </CardTitle>\n                      <CardDescription>\n                        {option.bestFor}\n                      </CardDescription>\n                    </div>\n                    <Badge variant=\"outline\">{option.points} Points</Badge>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"bg-primary/10 p-3 rounded-lg\">\n                      <div className=\"text-xs text-gray-500\">Rate</div>\n                      <div className=\"text-xl font-bold\">{formatPercent(option.rate)}</div>\n                    </div>\n                    <div className=\"bg-primary/10 p-3 rounded-lg\">\n                      <div className=\"text-xs text-gray-500\">APR</div>\n                      <div className=\"text-xl font-bold\">{formatPercent(option.apr)}</div>\n                    </div>\n                    <div className=\"bg-primary/10 p-3 rounded-lg\">\n                      <div className=\"text-xs text-gray-500\">Monthly Payment</div>\n                      <div className=\"text-xl font-bold\">{formatCurrency(option.monthlyPayment)}</div>\n                    </div>\n                    <div className=\"bg-primary/10 p-3 rounded-lg\">\n                      <div className=\"text-xs text-gray-500\">Total Interest</div>\n                      <div className=\"text-xl font-bold\">{formatCurrency(option.totalInterest)}</div>\n                    </div>\n                  </div>\n                </CardContent>\n                <CardFooter>\n                  <Button className=\"w-full\">Apply With This Rate</Button>\n                </CardFooter>\n              </Card>\n            ))}\n          </div>\n        </TabsContent>\n      </Tabs>\n\n      {/* Data explanation */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Understanding Rate Options</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div>\n                <h3 className=\"text-base font-medium mb-2\">Rate vs. APR</h3>\n                <p className=\"text-sm text-gray-600\">\n                  The <strong>interest rate</strong> is the cost you pay to borrow money. The <strong>APR (Annual Percentage Rate)</strong> includes both the interest rate and other costs such as broker fees, discount points and some closing costs, expressed as a percentage.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"text-base font-medium mb-2\">Points</h3>\n                <p className=\"text-sm text-gray-600\">\n                  <strong>Discount points</strong> are fees paid directly to the lender at closing in exchange for a reduced interest rate. One point costs 1% of your mortgage amount (or $1,000 for every $100,000).\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"text-base font-medium mb-2\">Loan Types</h3>\n                <p className=\"text-sm text-gray-600\">\n                  <strong>Conventional loans</strong> are not guaranteed by the government. <strong>FHA loans</strong> are insured by the Federal Housing Administration. <strong>VA loans</strong> are guaranteed by the Department of Veterans Affairs. <strong>USDA loans</strong> are guaranteed by the U.S. Department of Agriculture for rural properties.\n                </p>\n              </div>\n              \n              <div>\n                <h3 className=\"text-base font-medium mb-2\">Rate Fluctuations</h3>\n                <p className=\"text-sm text-gray-600\">\n                  Mortgage rates change daily based on economic factors. The rates shown here are updated regularly but may not reflect real-time rates. Contact a loan officer for current rate quotes.\n                </p>\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default RateComparisonTool;","import React, { useState, useEffect } from 'react';\nimport { ArrowLeft, FileText, Search, Filter, Download, Tag, BookOpen, CheckCircle, XCircle } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@/components/ui/select';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\ninterface Document {\n  id: number;\n  name: string;\n  category: string;\n  loanTypes: string[];\n  description: string;\n  required: boolean;\n  availableFormats: string[];\n  lastUpdated: string;\n}\n\n// Document categories for filtering\nconst DOCUMENT_CATEGORIES = [\n  'All Categories',\n  'Income',\n  'Assets',\n  'Property',\n  'Identity',\n  'Credit',\n  'Disclosures',\n  'Compliance',\n];\n\n// Loan types for filtering\nconst LOAN_TYPES = [\n  'All Types',\n  'Conventional',\n  'FHA',\n  'VA',\n  'USDA',\n  'Jumbo',\n];\n\n// Mock documents data\nconst MOCK_DOCUMENTS: Document[] = [\n  {\n    id: 1,\n    name: 'Borrower Authorization Form',\n    category: 'Compliance',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'Authorization for the lender to verify information and pull credit reports.',\n    required: true,\n    availableFormats: ['PDF', 'DocuSign'],\n    lastUpdated: '2023-05-15',\n  },\n  {\n    id: 2,\n    name: 'Pay Stubs (30 days)',\n    category: 'Income',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'Most recent 30 days of pay stubs showing year-to-date earnings.',\n    required: true,\n    availableFormats: ['PDF', 'JPG', 'PNG'],\n    lastUpdated: '2023-06-10',\n  },\n  {\n    id: 3,\n    name: 'W-2 Statements (2 years)',\n    category: 'Income',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'W-2 forms for the past two years for all borrowers.',\n    required: true,\n    availableFormats: ['PDF', 'JPG', 'PNG'],\n    lastUpdated: '2023-04-22',\n  },\n  {\n    id: 4,\n    name: 'Bank Statements (2 months)',\n    category: 'Assets',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'Last two months of bank statements from all accounts showing sufficient funds for closing.',\n    required: true,\n    availableFormats: ['PDF', 'CSV'],\n    lastUpdated: '2023-07-01',\n  },\n  {\n    id: 5,\n    name: 'Government-Issued ID',\n    category: 'Identity',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: \"Valid driver's license, passport, or other government-issued photo ID.\",\n    required: true,\n    availableFormats: ['PDF', 'JPG', 'PNG'],\n    lastUpdated: '2023-03-18',\n  },\n  {\n    id: 6,\n    name: 'Certificate of Eligibility',\n    category: 'Compliance',\n    loanTypes: ['VA'],\n    description: 'Certificate of Eligibility (COE) issued by the Department of Veterans Affairs.',\n    required: true,\n    availableFormats: ['PDF'],\n    lastUpdated: '2023-06-25',\n  },\n  {\n    id: 7,\n    name: 'Self-Employment Documentation',\n    category: 'Income',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'Business tax returns for past two years, profit and loss statements, and business bank statements.',\n    required: false,\n    availableFormats: ['PDF', 'XLS', 'CSV'],\n    lastUpdated: '2023-05-30',\n  },\n  {\n    id: 8,\n    name: 'Purchase Agreement',\n    category: 'Property',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'Signed purchase agreement/contract including all addendums and revisions.',\n    required: true,\n    availableFormats: ['PDF', 'DocuSign'],\n    lastUpdated: '2023-04-12',\n  },\n  {\n    id: 9,\n    name: 'Gift Letter',\n    category: 'Assets',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA'],\n    description: 'Letter from the donor stating the amount and that repayment is not expected.',\n    required: false,\n    availableFormats: ['PDF', 'DOC'],\n    lastUpdated: '2023-06-18',\n  },\n  {\n    id: 10,\n    name: 'Divorce Decree/Separation Agreement',\n    category: 'Income',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'Documentation for alimony or child support payments that affect income or liabilities.',\n    required: false,\n    availableFormats: ['PDF', 'JPG'],\n    lastUpdated: '2023-02-05',\n  },\n  {\n    id: 11,\n    name: 'Home Appraisal',\n    category: 'Property',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'Professional appraisal of the property value (ordered by the lender).',\n    required: true,\n    availableFormats: ['PDF'],\n    lastUpdated: '2023-03-28',\n  },\n  {\n    id: 12,\n    name: 'Loan Estimate',\n    category: 'Disclosures',\n    loanTypes: ['Conventional', 'FHA', 'VA', 'USDA', 'Jumbo'],\n    description: 'Disclosure provided by the lender within three business days of application.',\n    required: true,\n    availableFormats: ['PDF', 'DocuSign'],\n    lastUpdated: '2023-07-10',\n  },\n];\n\nconst DocumentFinder: React.FC = () => {\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const [selectedCategory, setSelectedCategory] = useState<string>('All Categories');\n  const [selectedLoanType, setSelectedLoanType] = useState<string>('All Types');\n  const [requiredOnly, setRequiredOnly] = useState<boolean>(false);\n  const [documents, setDocuments] = useState<Document[]>(MOCK_DOCUMENTS);\n  const [viewMode, setViewMode] = useState<string>('grid');\n\n  // Filter documents based on search, category, loan type, and required status\n  useEffect(() => {\n    let filteredDocuments = MOCK_DOCUMENTS;\n    \n    // Apply search filter\n    if (searchTerm) {\n      filteredDocuments = filteredDocuments.filter(\n        (doc) => \n          doc.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n          doc.description.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n    \n    // Apply category filter\n    if (selectedCategory !== 'All Categories') {\n      filteredDocuments = filteredDocuments.filter(\n        (doc) => doc.category === selectedCategory\n      );\n    }\n    \n    // Apply loan type filter\n    if (selectedLoanType !== 'All Types') {\n      filteredDocuments = filteredDocuments.filter(\n        (doc) => doc.loanTypes.includes(selectedLoanType)\n      );\n    }\n    \n    // Apply required only filter\n    if (requiredOnly) {\n      filteredDocuments = filteredDocuments.filter(\n        (doc) => doc.required\n      );\n    }\n    \n    setDocuments(filteredDocuments);\n  }, [searchTerm, selectedCategory, selectedLoanType, requiredOnly]);\n\n  // Handle search change\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(e.target.value);\n  };\n\n  // Reset all filters\n  const resetFilters = () => {\n    setSearchTerm('');\n    setSelectedCategory('All Categories');\n    setSelectedLoanType('All Types');\n    setRequiredOnly(false);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\" asChild>\n          <Link to=\"/tools\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back to Tools\n          </Link>\n        </Button>\n      </div>\n\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n        <div>\n          <h1 className=\"text-2xl font-bold tracking-tight\">Document Finder</h1>\n          <p className=\"text-gray-500\">Search and locate required documents for various loan types</p>\n        </div>\n        \n        <div className=\"flex items-center gap-2\">\n          <Button variant=\"outline\" size=\"sm\" onClick={() => setViewMode(viewMode === 'grid' ? 'table' : 'grid')}>\n            {viewMode === 'grid' ? 'Table View' : 'Grid View'}\n          </Button>\n        </div>\n      </div>\n\n      {/* Search and filters */}\n      <Card>\n        <CardContent className=\"pt-6\">\n          <div className=\"space-y-4\">\n            <div className=\"relative\">\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\" />\n              <Input\n                placeholder=\"Search documents by name or description...\"\n                className=\"pl-10\"\n                value={searchTerm}\n                onChange={handleSearchChange}\n              />\n            </div>\n            \n            <div className=\"flex flex-wrap gap-4\">\n              <div className=\"w-full md:w-auto flex-1 min-w-[200px]\">\n                <Select value={selectedCategory} onValueChange={setSelectedCategory}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select category\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {DOCUMENT_CATEGORIES.map((category) => (\n                      <SelectItem key={category} value={category}>\n                        {category}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              <div className=\"w-full md:w-auto flex-1 min-w-[200px]\">\n                <Select value={selectedLoanType} onValueChange={setSelectedLoanType}>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select loan type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {LOAN_TYPES.map((type) => (\n                      <SelectItem key={type} value={type}>\n                        {type}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              <div className=\"flex items-center\">\n                <label className=\"flex items-center space-x-2 cursor-pointer\">\n                  <input\n                    type=\"checkbox\"\n                    checked={requiredOnly}\n                    onChange={() => setRequiredOnly(!requiredOnly)}\n                    className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\n                  />\n                  <span className=\"text-sm\">Required documents only</span>\n                </label>\n              </div>\n            </div>\n            \n            {/* Active filters */}\n            {(searchTerm || selectedCategory !== 'All Categories' || selectedLoanType !== 'All Types' || requiredOnly) && (\n              <div className=\"flex flex-wrap items-center gap-2 pt-2\">\n                <span className=\"text-sm text-gray-500\">Active filters:</span>\n                \n                {selectedCategory !== 'All Categories' && (\n                  <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n                    <Tag className=\"h-3 w-3\" />\n                    {selectedCategory}\n                  </Badge>\n                )}\n                \n                {selectedLoanType !== 'All Types' && (\n                  <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n                    <BookOpen className=\"h-3 w-3\" />\n                    {selectedLoanType}\n                  </Badge>\n                )}\n                \n                {requiredOnly && (\n                  <Badge variant=\"secondary\" className=\"flex items-center gap-1\">\n                    <CheckCircle className=\"h-3 w-3\" />\n                    Required Only\n                  </Badge>\n                )}\n                \n                <Button variant=\"ghost\" size=\"sm\" onClick={resetFilters} className=\"h-7 px-2 text-xs\">\n                  Reset Filters\n                </Button>\n              </div>\n            )}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Document List - Grid View */}\n      {viewMode === 'grid' && (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {documents.map((doc) => (\n            <Card key={doc.id} className=\"overflow-hidden hover:shadow-md transition-shadow\">\n              <CardHeader className=\"pb-2\">\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"space-y-1\">\n                    <CardTitle className=\"text-base flex items-center gap-2\">\n                      {doc.name}\n                      {doc.required ? \n                        <Badge className=\"ml-1 bg-red-100 text-red-800 hover:bg-red-100\">Required</Badge> : \n                        <Badge variant=\"outline\" className=\"ml-1\">Optional</Badge>\n                      }\n                    </CardTitle>\n                    <CardDescription>{doc.category}</CardDescription>\n                  </div>\n                  <div className=\"rounded-md bg-primary/10 p-2 text-primary\">\n                    <FileText className=\"h-5 w-5\" />\n                  </div>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <p className=\"text-sm text-gray-700 mb-4\">{doc.description}</p>\n                \n                <div className=\"flex flex-wrap gap-1 mb-2\">\n                  {doc.loanTypes.map((type) => (\n                    <Badge key={type} variant=\"outline\" className=\"text-xs\">\n                      {type}\n                    </Badge>\n                  ))}\n                </div>\n                \n                <div className=\"flex items-center text-sm text-gray-500\">\n                  <span>Available formats:</span>\n                  <div className=\"flex ml-2 gap-1\">\n                    {doc.availableFormats.map((format) => (\n                      <Badge key={format} variant=\"secondary\" className=\"text-xs\">\n                        {format}\n                      </Badge>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex justify-between border-t pt-4\">\n                <span className=\"text-xs text-gray-500\">\n                  Updated: {doc.lastUpdated}\n                </span>\n                <Button variant=\"outline\" size=\"sm\">\n                  <Download className=\"h-4 w-4 mr-1\" /> Download Template\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </div>\n      )}\n\n      {/* Document List - Table View */}\n      {viewMode === 'table' && (\n        <Card>\n          <CardContent className=\"p-0\">\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead className=\"w-[250px]\">Document Name</TableHead>\n                    <TableHead>Category</TableHead>\n                    <TableHead>Loan Types</TableHead>\n                    <TableHead>Required</TableHead>\n                    <TableHead className=\"w-[120px]\">Formats</TableHead>\n                    <TableHead className=\"w-[100px]\">Updated</TableHead>\n                    <TableHead className=\"text-right\">Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {documents.map((doc) => (\n                    <TableRow key={doc.id}>\n                      <TableCell className=\"font-medium\">\n                        {doc.name}\n                      </TableCell>\n                      <TableCell>{doc.category}</TableCell>\n                      <TableCell>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {doc.loanTypes.map((type) => (\n                            <Badge key={type} variant=\"outline\" className=\"text-xs\">\n                              {type}\n                            </Badge>\n                          ))}\n                        </div>\n                      </TableCell>\n                      <TableCell>\n                        {doc.required ? \n                          <span className=\"flex items-center text-green-600\">\n                            <CheckCircle className=\"h-4 w-4 mr-1\" /> Yes\n                          </span> : \n                          <span className=\"flex items-center text-gray-400\">\n                            <XCircle className=\"h-4 w-4 mr-1\" /> No\n                          </span>\n                        }\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex flex-wrap gap-1\">\n                          {doc.availableFormats.map((format) => (\n                            <Badge key={format} variant=\"secondary\" className=\"text-xs\">\n                              {format}\n                            </Badge>\n                          ))}\n                        </div>\n                      </TableCell>\n                      <TableCell>{doc.lastUpdated}</TableCell>\n                      <TableCell className=\"text-right\">\n                        <Button variant=\"outline\" size=\"sm\">\n                          <Download className=\"h-4 w-4 mr-1\" /> Download\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Empty state */}\n      {documents.length === 0 && (\n        <div className=\"flex flex-col items-center justify-center py-16 space-y-4\">\n          <div className=\"rounded-full bg-gray-100 p-4 text-gray-500\">\n            <FileText className=\"h-8 w-8\" />\n          </div>\n          <h3 className=\"text-lg font-medium\">No Documents Found</h3>\n          <p className=\"text-gray-500 max-w-md text-center\">\n            We couldn't find any documents matching your search criteria. Try adjusting your filters or search terms.\n          </p>\n          <Button onClick={resetFilters}>Reset All Filters</Button>\n        </div>\n      )}\n\n      {/* Document guides section */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg\">Understanding Required Documents</CardTitle>\n          <CardDescription>\n            Overview of common documents needed for mortgage applications\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            <Tabs defaultValue=\"general\">\n              <TabsList>\n                <TabsTrigger value=\"general\">General Documents</TabsTrigger>\n                <TabsTrigger value=\"income\">Income Verification</TabsTrigger>\n                <TabsTrigger value=\"assets\">Asset Documentation</TabsTrigger>\n                <TabsTrigger value=\"property\">Property Documents</TabsTrigger>\n              </TabsList>\n              \n              <TabsContent value=\"general\" className=\"pt-4 space-y-4\">\n                <p className=\"text-sm text-gray-700\">\n                  All mortgage applications require certain basic documentation regardless of loan type. These documents establish your identity and allow lenders to verify your information.\n                </p>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Government-Issued ID</h3>\n                    <p className=\"text-sm text-gray-600\">Used to verify your identity. Typically a driver's license, passport, or other government-issued photo ID.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Social Security Number</h3>\n                    <p className=\"text-sm text-gray-600\">Required for credit checks and tax verification. Provide your SSN card or other official documentation.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Borrower Authorization Form</h3>\n                    <p className=\"text-sm text-gray-600\">Gives the lender permission to verify your employment, income, assets, and pull your credit report.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Application Form</h3>\n                    <p className=\"text-sm text-gray-600\">The Uniform Residential Loan Application (Form 1003) with your personal and financial information.</p>\n                  </div>\n                </div>\n              </TabsContent>\n              \n              <TabsContent value=\"income\" className=\"pt-4 space-y-4\">\n                <p className=\"text-sm text-gray-700\">\n                  Income documentation proves your ability to repay the loan. Different employment types require different documentation.\n                </p>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">W-2 Forms</h3>\n                    <p className=\"text-sm text-gray-600\">Past two years of W-2 statements from all employers during that period.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Pay Stubs</h3>\n                    <p className=\"text-sm text-gray-600\">Most recent 30 days of pay stubs showing year-to-date earnings.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Tax Returns</h3>\n                    <p className=\"text-sm text-gray-600\">Past two years of federal tax returns, particularly important for self-employed borrowers.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Additional Income Documents</h3>\n                    <p className=\"text-sm text-gray-600\">Documentation for other income sources like alimony, child support, retirement, or rental income.</p>\n                  </div>\n                </div>\n              </TabsContent>\n              \n              <TabsContent value=\"assets\" className=\"pt-4 space-y-4\">\n                <p className=\"text-sm text-gray-700\">\n                  Asset documentation shows you have funds for the down payment, closing costs, and reserves.\n                </p>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Bank Statements</h3>\n                    <p className=\"text-sm text-gray-600\">Last two months of statements from all accounts (checking, savings, investments).</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Retirement Account Statements</h3>\n                    <p className=\"text-sm text-gray-600\">Recent statements from 401(k), IRA, or other retirement accounts if using for reserves.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Gift Letter</h3>\n                    <p className=\"text-sm text-gray-600\">If using gift funds for down payment, a letter from the donor stating the amount and that repayment is not expected.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Proof of Sale</h3>\n                    <p className=\"text-sm text-gray-600\">If using funds from selling another property, documentation showing the sale and proceeds.</p>\n                  </div>\n                </div>\n              </TabsContent>\n              \n              <TabsContent value=\"property\" className=\"pt-4 space-y-4\">\n                <p className=\"text-sm text-gray-700\">\n                  Property documents provide information about the home you're buying and the terms of the purchase.\n                </p>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Purchase Agreement</h3>\n                    <p className=\"text-sm text-gray-600\">Signed contract between you and the seller, including all addendums and counteroffers.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Property Tax Bills</h3>\n                    <p className=\"text-sm text-gray-600\">Recent property tax information to calculate escrow requirements.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Homeowners Insurance</h3>\n                    <p className=\"text-sm text-gray-600\">Proof of insurance policy for the property before closing.</p>\n                  </div>\n                  <div className=\"border rounded-md p-4\">\n                    <h3 className=\"font-medium mb-2\">Homeowners Association Documents</h3>\n                    <p className=\"text-sm text-gray-600\">HOA agreements, fees, and financial information if applicable.</p>\n                  </div>\n                </div>\n              </TabsContent>\n            </Tabs>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default DocumentFinder;","import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline text-left [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","import React, { useState, useEffect } from 'react';\nimport { ArrowLeft, DollarSign, Home, Calculator, Save, ChevronDown, ChevronUp, Printer, Download } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Slider } from '@/components/ui/slider';\nimport { Switch } from '@/components/ui/switch';\nimport { Label } from '@/components/ui/label';\nimport { \n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue\n} from '@/components/ui/select';\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport {\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n} from \"@/components/ui/tabs\";\n\n// Define interfaces for the form state and estimates\ninterface FormState {\n  loanAmount: number;\n  propertyValue: number;\n  downPayment: number;\n  downPaymentPercentage: number;\n  interestRate: number;\n  loanTerm: number;\n  creditScore: number;\n  propertyType: string;\n  propertyState: string;\n  firstTimeBuyer: boolean;\n  loanType: string;\n  propertyTaxRate: number;\n  homeownersInsurance: number;\n}\n\ninterface ClosingCosts {\n  loanCosts: {\n    originationFee: number;\n    applicationFee: number;\n    underwritingFee: number;\n    processingFee: number;\n    creditReportFee: number;\n    appraisalFee: number;\n    totalLoanCosts: number;\n  };\n  thirdPartyCosts: {\n    titleServices: number;\n    surveyFee: number;\n    homeInspection: number;\n    attorneyFee: number;\n    recordingFees: number;\n    transferTaxes: number;\n    prepaidInterest: number;\n    escrowDeposit: number;\n    totalThirdPartyCosts: number;\n  };\n  totalClosingCosts: number;\n  cashToClose: number;\n}\n\n// State options\nconst STATE_OPTIONS = [\n  { value: 'CA', label: 'California' },\n  { value: 'FL', label: 'Florida' },\n  { value: 'NY', label: 'New York' },\n  { value: 'TX', label: 'Texas' },\n  { value: 'IL', label: 'Illinois' },\n  { value: 'OH', label: 'Ohio' },\n  { value: 'PA', label: 'Pennsylvania' },\n  { value: 'GA', label: 'Georgia' },\n  { value: 'NC', label: 'North Carolina' },\n  { value: 'MI', label: 'Michigan' },\n  { value: 'NJ', label: 'New Jersey' },\n  { value: 'VA', label: 'Virginia' },\n  { value: 'WA', label: 'Washington' },\n  { value: 'AZ', label: 'Arizona' },\n  { value: 'CO', label: 'Colorado' },\n];\n\n// Property type options\nconst PROPERTY_TYPES = [\n  { value: 'single-family', label: 'Single-Family Home' },\n  { value: 'condo', label: 'Condominium' },\n  { value: 'townhouse', label: 'Townhouse' },\n  { value: 'multi-family', label: 'Multi-Family Home' },\n];\n\n// Loan type options\nconst LOAN_TYPES = [\n  { value: 'conventional', label: 'Conventional' },\n  { value: 'fha', label: 'FHA' },\n  { value: 'va', label: 'VA' },\n  { value: 'usda', label: 'USDA' },\n  { value: 'jumbo', label: 'Jumbo' },\n];\n\n// Credit score options\nconst CREDIT_SCORE_RANGES = [\n  { value: 800, label: '800+' },\n  { value: 750, label: '750-799' },\n  { value: 700, label: '700-749' },\n  { value: 650, label: '650-699' },\n  { value: 600, label: '600-649' },\n  { value: 550, label: '550-599' },\n];\n\nconst ClosingCostEstimator: React.FC = () => {\n  // Default form state\n  const defaultFormState: FormState = {\n    loanAmount: 300000,\n    propertyValue: 350000,\n    downPayment: 50000,\n    downPaymentPercentage: 14.29,\n    interestRate: 4.5,\n    loanTerm: 30,\n    creditScore: 750,\n    propertyType: 'single-family',\n    propertyState: 'CA',\n    firstTimeBuyer: false,\n    loanType: 'conventional',\n    propertyTaxRate: 1.2,\n    homeownersInsurance: 100,\n  };\n  \n  // State hooks\n  const [formState, setFormState] = useState<FormState>(defaultFormState);\n  const [closingCosts, setClosingCosts] = useState<ClosingCosts | null>(null);\n  const [isAdvancedMode, setIsAdvancedMode] = useState<boolean>(false);\n  const [isCalculating, setIsCalculating] = useState<boolean>(false);\n  \n  // Calculate down payment and loan amount when property value changes\n  useEffect(() => {\n    if (formState.propertyValue > 0) {\n      const downPaymentPercentage = (formState.downPayment / formState.propertyValue) * 100;\n      setFormState(prev => ({\n        ...prev,\n        downPaymentPercentage: parseFloat(downPaymentPercentage.toFixed(2)),\n        loanAmount: formState.propertyValue - formState.downPayment\n      }));\n    }\n  }, [formState.propertyValue, formState.downPayment]);\n  \n  // Handle property value input change\n  const handlePropertyValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseFloat(e.target.value) || 0;\n    setFormState(prev => ({\n      ...prev,\n      propertyValue: value,\n      downPayment: prev.downPaymentPercentage * value / 100,\n      loanAmount: value - (prev.downPaymentPercentage * value / 100)\n    }));\n  };\n  \n  // Handle down payment input change\n  const handleDownPaymentChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseFloat(e.target.value) || 0;\n    \n    // Ensure down payment doesn't exceed property value\n    const validDownPayment = Math.min(value, formState.propertyValue);\n    \n    setFormState(prev => ({\n      ...prev,\n      downPayment: validDownPayment,\n      downPaymentPercentage: (validDownPayment / prev.propertyValue) * 100,\n      loanAmount: prev.propertyValue - validDownPayment\n    }));\n  };\n  \n  // Handle down payment percentage slider change\n  const handleDownPaymentPercentageChange = (value: number[]) => {\n    const percentage = value[0];\n    const downPayment = (percentage / 100) * formState.propertyValue;\n    \n    setFormState(prev => ({\n      ...prev,\n      downPaymentPercentage: percentage,\n      downPayment: downPayment,\n      loanAmount: prev.propertyValue - downPayment\n    }));\n  };\n  \n  // Handle generic input change\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, type, checked } = e.target;\n    \n    setFormState(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : (type === 'number' ? parseFloat(value) || 0 : value)\n    }));\n  };\n  \n  // Handle select change\n  const handleSelectChange = (name: string, value: string) => {\n    setFormState(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  // Calculate closing costs\n  const calculateClosingCosts = () => {\n    setIsCalculating(true);\n    \n    // Simulate API call with setTimeout\n    setTimeout(() => {\n      // Basic loan cost calculations\n      let originationFee = formState.loanAmount * 0.01; // 1% of loan amount\n      let applicationFee = 500;\n      let underwritingFee = 750;\n      let processingFee = 450;\n      let creditReportFee = 25;\n      let appraisalFee = 500;\n      \n      // Third party costs vary by state, property type, and loan type\n      let titleServices = 1500;\n      let surveyFee = 400;\n      let attorneyFee = 800;\n      let recordingFees = 125;\n      let transferTaxes = formState.propertyValue * 0.001; // 0.1% by default\n      \n      // Adjust costs based on state\n      if (formState.propertyState === 'NY' || formState.propertyState === 'NJ') {\n        titleServices += 500;\n        attorneyFee += 700;\n        transferTaxes = formState.propertyValue * 0.004; // Higher transfer taxes in these states\n      } else if (formState.propertyState === 'CA') {\n        titleServices += 300;\n        transferTaxes = formState.propertyValue * 0.0011;\n      } else if (formState.propertyState === 'FL') {\n        titleServices += 100;\n        transferTaxes = formState.propertyValue * 0.007;\n      }\n      \n      // Adjust costs based on property type\n      if (formState.propertyType === 'condo') {\n        surveyFee = 0; // Condos typically don't need surveys\n      } else if (formState.propertyType === 'multi-family') {\n        appraisalFee += 300; // More expensive for multi-family\n        surveyFee += 200;\n      }\n      \n      // Adjust costs based on loan type\n      if (formState.loanType === 'fha') {\n        underwritingFee += 150; // Additional FHA underwriting requirements\n      } else if (formState.loanType === 'va') {\n        underwritingFee += 100; // Additional VA underwriting requirements\n        // VA funding fee would go here, but can vary significantly\n      } else if (formState.loanType === 'jumbo') {\n        appraisalFee += 250; // Jumbo loans often have more expensive appraisals\n        underwritingFee += 200; // More complex underwriting\n      }\n      \n      // Prepaids and escrow deposits\n      const prepaidInterest = (formState.loanAmount * (formState.interestRate / 100) / 365) * 30; // 30 days of interest\n      const homeInspection = 450;\n      const escrowDeposit = (\n        ((formState.propertyValue * (formState.propertyTaxRate / 100)) / 12) +\n        formState.homeownersInsurance\n      ) * 2; // 2 months of taxes and insurance\n      \n      // Calculate totals\n      const totalLoanCosts = originationFee + applicationFee + underwritingFee + processingFee + creditReportFee + appraisalFee;\n      const totalThirdPartyCosts = titleServices + surveyFee + homeInspection + attorneyFee + recordingFees + transferTaxes + prepaidInterest + escrowDeposit;\n      const totalClosingCosts = totalLoanCosts + totalThirdPartyCosts;\n      const cashToClose = totalClosingCosts + formState.downPayment;\n      \n      // Set the closing costs state\n      setClosingCosts({\n        loanCosts: {\n          originationFee,\n          applicationFee,\n          underwritingFee,\n          processingFee,\n          creditReportFee,\n          appraisalFee,\n          totalLoanCosts\n        },\n        thirdPartyCosts: {\n          titleServices,\n          surveyFee,\n          homeInspection,\n          attorneyFee,\n          recordingFees,\n          transferTaxes,\n          prepaidInterest,\n          escrowDeposit,\n          totalThirdPartyCosts\n        },\n        totalClosingCosts,\n        cashToClose\n      });\n      \n      setIsCalculating(false);\n    }, 1000); // Simulate delay\n  };\n  \n  // Format currency function\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value);\n  };\n  \n  // Reset form to defaults\n  const resetForm = () => {\n    setFormState(defaultFormState);\n    setClosingCosts(null);\n  };\n  \n  // Save or print estimate\n  const handleSaveEstimate = () => {\n    // In a real app, this would save the estimate to a database or generate a PDF\n    // For this demo, we'll just log to console\n    console.log('Saving estimate:', { formState, closingCosts });\n    alert('Estimate saved successfully!');\n  };\n  \n  const handlePrintEstimate = () => {\n    window.print();\n  };\n\n  return (\n    <div className=\"space-y-6 print:space-y-3\">\n      <div className=\"flex items-center space-x-2 print:hidden\">\n        <Button variant=\"ghost\" size=\"sm\" asChild>\n          <Link to=\"/tools\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back to Tools\n          </Link>\n        </Button>\n      </div>\n\n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 print:border-b print:pb-2\">\n        <div className=\"print:py-2\">\n          <h1 className=\"text-2xl font-bold tracking-tight print:text-xl\">Closing Cost Estimator</h1>\n          <p className=\"text-gray-500 print:text-sm\">Generate detailed closing cost estimates for clients</p>\n        </div>\n        \n        <div className=\"flex items-center gap-2 print:hidden\">\n          <div className=\"flex items-center space-x-2\">\n            <Switch\n              id=\"advanced-mode\"\n              checked={isAdvancedMode}\n              onCheckedChange={setIsAdvancedMode}\n            />\n            <Label htmlFor=\"advanced-mode\">Advanced Mode</Label>\n          </div>\n          <Button variant=\"outline\" size=\"sm\" onClick={resetForm}>\n            Reset\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6 print:grid-cols-1 print:gap-4\">\n        {/* Input form */}\n        <Card className=\"lg:col-span-1 print:block print:px-0 print:py-0 print:shadow-none print:border-0\">\n          <CardHeader className=\"print:pb-2 print:px-0\">\n            <CardTitle className=\"flex items-center text-lg print:text-base\">\n              <Home className=\"mr-2 h-5 w-5 text-primary print:h-4 print:w-4\" />\n              Loan Details\n            </CardTitle>\n            <CardDescription className=\"print:text-xs\">\n              Enter property and loan information\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"space-y-4 print:space-y-2 print:px-0\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"property-value\" className=\"flex items-center\">\n                <DollarSign className=\"h-4 w-4 mr-1 text-gray-500\" />\n                Property Value\n              </Label>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">$</span>\n                </div>\n                <Input\n                  id=\"property-value\"\n                  name=\"propertyValue\"\n                  type=\"number\"\n                  min=\"50000\"\n                  step=\"1000\"\n                  className=\"pl-7\"\n                  value={formState.propertyValue}\n                  onChange={handlePropertyValueChange}\n                />\n              </div>\n            </div>\n\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between items-center\">\n                <Label htmlFor=\"down-payment\" className=\"flex items-center\">\n                  <DollarSign className=\"h-4 w-4 mr-1 text-gray-500\" />\n                  Down Payment\n                </Label>\n                <span className=\"text-sm text-muted-foreground\">\n                  {formState.downPaymentPercentage.toFixed(1)}%\n                </span>\n              </div>\n              <div className=\"relative\">\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                  <span className=\"text-gray-500 sm:text-sm\">$</span>\n                </div>\n                <Input\n                  id=\"down-payment\"\n                  name=\"downPayment\"\n                  type=\"number\"\n                  min=\"0\"\n                  step=\"1000\"\n                  className=\"pl-7\"\n                  value={formState.downPayment}\n                  onChange={handleDownPaymentChange}\n                />\n              </div>\n              <Slider\n                defaultValue={[formState.downPaymentPercentage]}\n                max={50}\n                step={0.5}\n                className=\"py-2\"\n                value={[formState.downPaymentPercentage]}\n                onValueChange={handleDownPaymentPercentageChange}\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"loan-amount\" className=\"flex items-center\">\n                <DollarSign className=\"h-4 w-4 mr-1 text-gray-500\" />\n                Loan Amount\n              </Label>\n              <Input\n                id=\"loan-amount\"\n                name=\"loanAmount\"\n                type=\"number\"\n                value={formState.loanAmount}\n                disabled\n                className=\"bg-gray-50\"\n              />\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"interest-rate\" className=\"text-sm\">\n                  Interest Rate (%)\n                </Label>\n                <Input\n                  id=\"interest-rate\"\n                  name=\"interestRate\"\n                  type=\"number\"\n                  min=\"1\"\n                  max=\"15\"\n                  step=\"0.125\"\n                  value={formState.interestRate}\n                  onChange={handleInputChange}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"loan-term\" className=\"text-sm\">\n                  Loan Term (years)\n                </Label>\n                <Select\n                  value={formState.loanTerm.toString()}\n                  onValueChange={(value) => handleSelectChange('loanTerm', value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select term\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"30\">30 years</SelectItem>\n                    <SelectItem value=\"20\">20 years</SelectItem>\n                    <SelectItem value=\"15\">15 years</SelectItem>\n                    <SelectItem value=\"10\">10 years</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"property-type\" className=\"text-sm\">\n                  Property Type\n                </Label>\n                <Select\n                  value={formState.propertyType}\n                  onValueChange={(value) => handleSelectChange('propertyType', value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {PROPERTY_TYPES.map(type => (\n                      <SelectItem key={type.value} value={type.value}>\n                        {type.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"property-state\" className=\"text-sm\">\n                  Property State\n                </Label>\n                <Select\n                  value={formState.propertyState}\n                  onValueChange={(value) => handleSelectChange('propertyState', value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select state\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {STATE_OPTIONS.map(state => (\n                      <SelectItem key={state.value} value={state.value}>\n                        {state.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"loan-type\" className=\"text-sm\">\n                  Loan Type\n                </Label>\n                <Select\n                  value={formState.loanType}\n                  onValueChange={(value) => handleSelectChange('loanType', value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {LOAN_TYPES.map(type => (\n                      <SelectItem key={type.value} value={type.value}>\n                        {type.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"credit-score\" className=\"text-sm\">\n                  Credit Score\n                </Label>\n                <Select\n                  value={formState.creditScore.toString()}\n                  onValueChange={(value) => handleSelectChange('creditScore', value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select score\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {CREDIT_SCORE_RANGES.map(range => (\n                      <SelectItem key={range.value} value={range.value.toString()}>\n                        {range.label}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n\n            <div className=\"flex items-center space-x-2\">\n              <Switch\n                id=\"first-time-buyer\"\n                checked={formState.firstTimeBuyer}\n                onCheckedChange={(checked) => setFormState(prev => ({ ...prev, firstTimeBuyer: checked }))}\n              />\n              <Label htmlFor=\"first-time-buyer\">First-time homebuyer</Label>\n            </div>\n\n            {isAdvancedMode && (\n              <div className=\"pt-4 border-t space-y-4\">\n                <h3 className=\"text-sm font-medium\">Advanced Options</h3>\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"property-tax-rate\" className=\"text-sm\">\n                      Property Tax Rate (%)\n                    </Label>\n                    <Input\n                      id=\"property-tax-rate\"\n                      name=\"propertyTaxRate\"\n                      type=\"number\"\n                      min=\"0\"\n                      max=\"5\"\n                      step=\"0.01\"\n                      value={formState.propertyTaxRate}\n                      onChange={handleInputChange}\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"homeowners-insurance\" className=\"text-sm\">\n                      Monthly Insurance ($)\n                    </Label>\n                    <Input\n                      id=\"homeowners-insurance\"\n                      name=\"homeownersInsurance\"\n                      type=\"number\"\n                      min=\"0\"\n                      step=\"5\"\n                      value={formState.homeownersInsurance}\n                      onChange={handleInputChange}\n                    />\n                  </div>\n                </div>\n              </div>\n            )}\n          </CardContent>\n          <CardFooter className=\"print:hidden\">\n            <Button \n              className=\"w-full\" \n              onClick={calculateClosingCosts}\n              disabled={isCalculating}\n            >\n              <Calculator className=\"mr-2 h-4 w-4\" />\n              {isCalculating ? 'Calculating...' : 'Calculate Closing Costs'}\n            </Button>\n          </CardFooter>\n        </Card>\n\n        {/* Results and breakdown */}\n        <Card className=\"lg:col-span-2 print:block print:shadow-none print:border-0 print:px-0 print:py-0\">\n          <CardHeader className=\"print:px-0 print:pb-2\">\n            <CardTitle className=\"flex items-center text-lg print:text-base\">\n              <Calculator className=\"mr-2 h-5 w-5 text-primary print:h-4 print:w-4\" />\n              Closing Cost Estimate\n            </CardTitle>\n            <CardDescription className=\"print:text-xs\">\n              Based on a {formatCurrency(formState.loanAmount)} loan amount for a {PROPERTY_TYPES.find(type => type.value === formState.propertyType)?.label.toLowerCase()} in {STATE_OPTIONS.find(state => state.value === formState.propertyState)?.label}\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"print:px-0\">\n            {!closingCosts && !isCalculating && (\n              <div className=\"text-center py-12 space-y-4\">\n                <Calculator className=\"mx-auto h-12 w-12 text-gray-400\" />\n                <div>\n                  <h3 className=\"text-lg font-medium\">No Estimate Generated Yet</h3>\n                  <p className=\"text-gray-500 mt-1\">\n                    Enter your loan details and click \"Calculate Closing Costs\" to generate an estimate.\n                  </p>\n                </div>\n              </div>\n            )}\n\n            {isCalculating && (\n              <div className=\"text-center py-12\">\n                <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary mx-auto\"></div>\n                <p className=\"mt-4 text-gray-600\">Calculating your closing costs...</p>\n              </div>\n            )}\n\n            {closingCosts && !isCalculating && (\n              <div className=\"space-y-6 print:space-y-3\">\n                {/* Summary cards */}\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 print:grid-cols-3 print:gap-2\">\n                  <div className=\"bg-primary/10 p-4 rounded-lg space-y-1 print:p-2\">\n                    <div className=\"text-sm text-gray-500 print:text-xs\">Closing Costs</div>\n                    <div className=\"text-2xl font-bold print:text-lg\">{formatCurrency(closingCosts.totalClosingCosts)}</div>\n                    <div className=\"text-xs text-gray-500 print:text-[10px]\">\n                      {(closingCosts.totalClosingCosts / formState.loanAmount * 100).toFixed(2)}% of loan amount\n                    </div>\n                  </div>\n                  <div className=\"bg-primary/10 p-4 rounded-lg space-y-1 print:p-2\">\n                    <div className=\"text-sm text-gray-500 print:text-xs\">Down Payment</div>\n                    <div className=\"text-2xl font-bold print:text-lg\">{formatCurrency(formState.downPayment)}</div>\n                    <div className=\"text-xs text-gray-500 print:text-[10px]\">\n                      {formState.downPaymentPercentage.toFixed(2)}% of purchase price\n                    </div>\n                  </div>\n                  <div className=\"bg-primary/10 p-4 rounded-lg space-y-1 print:p-2\">\n                    <div className=\"text-sm text-gray-500 print:text-xs\">Cash to Close</div>\n                    <div className=\"text-2xl font-bold print:text-lg\">{formatCurrency(closingCosts.cashToClose)}</div>\n                    <div className=\"text-xs text-gray-500 print:text-[10px]\">\n                      Total funds needed at closing\n                    </div>\n                  </div>\n                </div>\n\n                {/* Detailed breakdown */}\n                <div className=\"pt-2 print:pt-1\">\n                  <Tabs defaultValue=\"breakdown\" className=\"w-full\">\n                    <TabsList className=\"grid w-full grid-cols-2 max-w-md print:hidden\">\n                      <TabsTrigger value=\"breakdown\">Cost Breakdown</TabsTrigger>\n                      <TabsTrigger value=\"summary\">Summary View</TabsTrigger>\n                    </TabsList>\n                    \n                    <TabsContent value=\"breakdown\" className=\"space-y-4 print:block print:space-y-2\">\n                      <Accordion type=\"single\" collapsible defaultValue=\"loan-costs\" className=\"print:block\">\n                        <AccordionItem value=\"loan-costs\" className=\"print:border-0\">\n                          <AccordionTrigger className=\"py-3 print:py-1 print:text-sm\">\n                            Loan Costs\n                            <span className=\"ml-auto font-semibold print:text-xs\">\n                              {formatCurrency(closingCosts.loanCosts.totalLoanCosts)}\n                            </span>\n                          </AccordionTrigger>\n                          <AccordionContent className=\"print:block\">\n                            <div className=\"space-y-2 pt-2 print:pt-0 print:space-y-1\">\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Origination Fee (1%)</span>\n                                <span>{formatCurrency(closingCosts.loanCosts.originationFee)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Application Fee</span>\n                                <span>{formatCurrency(closingCosts.loanCosts.applicationFee)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Underwriting Fee</span>\n                                <span>{formatCurrency(closingCosts.loanCosts.underwritingFee)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Processing Fee</span>\n                                <span>{formatCurrency(closingCosts.loanCosts.processingFee)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Credit Report Fee</span>\n                                <span>{formatCurrency(closingCosts.loanCosts.creditReportFee)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Appraisal Fee</span>\n                                <span>{formatCurrency(closingCosts.loanCosts.appraisalFee)}</span>\n                              </div>\n                            </div>\n                          </AccordionContent>\n                        </AccordionItem>\n                        \n                        <AccordionItem value=\"third-party-costs\" className=\"print:border-0\">\n                          <AccordionTrigger className=\"py-3 print:py-1 print:text-sm\">\n                            Third-Party Services\n                            <span className=\"ml-auto font-semibold print:text-xs\">\n                              {formatCurrency(closingCosts.thirdPartyCosts.totalThirdPartyCosts)}\n                            </span>\n                          </AccordionTrigger>\n                          <AccordionContent className=\"print:block\">\n                            <div className=\"space-y-2 pt-2 print:pt-0 print:space-y-1\">\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Title Services and Insurance</span>\n                                <span>{formatCurrency(closingCosts.thirdPartyCosts.titleServices)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Survey Fee</span>\n                                <span>{formatCurrency(closingCosts.thirdPartyCosts.surveyFee)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Home Inspection</span>\n                                <span>{formatCurrency(closingCosts.thirdPartyCosts.homeInspection)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Attorney Fee</span>\n                                <span>{formatCurrency(closingCosts.thirdPartyCosts.attorneyFee)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Recording Fees</span>\n                                <span>{formatCurrency(closingCosts.thirdPartyCosts.recordingFees)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Transfer Taxes</span>\n                                <span>{formatCurrency(closingCosts.thirdPartyCosts.transferTaxes)}</span>\n                              </div>\n                              <div className=\"border-t pt-2 print:pt-1 print:border-dotted\">\n                                <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                  <span>Prepaid Interest (30 days)</span>\n                                  <span>{formatCurrency(closingCosts.thirdPartyCosts.prepaidInterest)}</span>\n                                </div>\n                                <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                  <span>Escrow Deposit (2 months taxes/ins)</span>\n                                  <span>{formatCurrency(closingCosts.thirdPartyCosts.escrowDeposit)}</span>\n                                </div>\n                              </div>\n                            </div>\n                          </AccordionContent>\n                        </AccordionItem>\n                        \n                        <AccordionItem value=\"cash-to-close\" className=\"print:border-0\">\n                          <AccordionTrigger className=\"py-3 print:py-1 print:text-sm\">\n                            Cash to Close\n                            <span className=\"ml-auto font-semibold print:text-xs\">\n                              {formatCurrency(closingCosts.cashToClose)}\n                            </span>\n                          </AccordionTrigger>\n                          <AccordionContent className=\"print:block\">\n                            <div className=\"space-y-2 pt-2 print:pt-0 print:space-y-1\">\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Down Payment</span>\n                                <span>{formatCurrency(formState.downPayment)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm print:text-xs\">\n                                <span>Total Closing Costs</span>\n                                <span>{formatCurrency(closingCosts.totalClosingCosts)}</span>\n                              </div>\n                              <div className=\"flex justify-between items-center text-sm font-medium pt-2 border-t print:text-xs print:pt-1 print:border-dotted\">\n                                <span>Total Cash Needed</span>\n                                <span>{formatCurrency(closingCosts.cashToClose)}</span>\n                              </div>\n                            </div>\n                          </AccordionContent>\n                        </AccordionItem>\n                      </Accordion>\n                    </TabsContent>\n                    \n                    <TabsContent value=\"summary\" className=\"space-y-4\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                        <div className=\"space-y-4\">\n                          <h3 className=\"text-lg font-medium\">Loan Summary</h3>\n                          <div className=\"space-y-2\">\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Purchase Price</span>\n                              <span className=\"font-medium\">{formatCurrency(formState.propertyValue)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Down Payment</span>\n                              <span>{formatCurrency(formState.downPayment)} ({formState.downPaymentPercentage.toFixed(1)}%)</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Loan Amount</span>\n                              <span>{formatCurrency(formState.loanAmount)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Loan Type</span>\n                              <span>{LOAN_TYPES.find(type => type.value === formState.loanType)?.label}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Interest Rate</span>\n                              <span>{formState.interestRate}%</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Loan Term</span>\n                              <span>{formState.loanTerm} years</span>\n                            </div>\n                          </div>\n                        </div>\n                        \n                        <div className=\"space-y-4\">\n                          <h3 className=\"text-lg font-medium\">Closing Cost Summary</h3>\n                          <div className=\"space-y-2\">\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Loan Costs</span>\n                              <span className=\"font-medium\">{formatCurrency(closingCosts.loanCosts.totalLoanCosts)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Third-Party Services</span>\n                              <span>{formatCurrency(closingCosts.thirdPartyCosts.totalThirdPartyCosts)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm font-semibold border-t pt-2\">\n                              <span>Total Closing Costs</span>\n                              <span>{formatCurrency(closingCosts.totalClosingCosts)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm\">\n                              <span>Down Payment</span>\n                              <span>{formatCurrency(formState.downPayment)}</span>\n                            </div>\n                            <div className=\"flex justify-between items-center text-sm font-semibold border-t pt-2\">\n                              <span>Cash to Close</span>\n                              <span>{formatCurrency(closingCosts.cashToClose)}</span>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </TabsContent>\n                  </Tabs>\n                </div>\n\n                {/* Notes and disclaimers */}\n                <div className=\"text-xs text-gray-500 border-t pt-4 space-y-2 print:text-[10px] print:pt-1 print:space-y-1\">\n                  <p>\n                    <strong>Note:</strong> This is an estimate only and actual closing costs may vary. The estimate is based on the information provided and current market rates.\n                  </p>\n                  <p>\n                    <strong>Disclaimer:</strong> This tool provides a general estimate of closing costs and is for informational purposes only. Final costs will be determined by the lender, title company, and other third parties involved in the transaction.\n                  </p>\n                </div>\n              </div>\n            )}\n          </CardContent>\n          {closingCosts && !isCalculating && (\n            <CardFooter className=\"flex justify-between print:hidden\">\n              <Button variant=\"outline\" onClick={handlePrintEstimate}>\n                <Printer className=\"mr-2 h-4 w-4\" />\n                Print Estimate\n              </Button>\n              <Button variant=\"outline\" onClick={handleSaveEstimate}>\n                <Save className=\"mr-2 h-4 w-4\" />\n                Save Estimate\n              </Button>\n              <Button variant=\"outline\">\n                <Download className=\"mr-2 h-4 w-4\" />\n                Export as PDF\n              </Button>\n            </CardFooter>\n          )}\n        </Card>\n      </div>\n\n      {/* Print header - only visible when printing */}\n      <div className=\"hidden print:block print:mb-4\">\n        <div className=\"flex justify-between items-center border-b pb-2\">\n          <div>\n            <h2 className=\"text-sm font-bold\">Mortgage Team Portal</h2>\n            <p className=\"text-xs text-gray-500\">Closing Cost Estimate - Generated {new Date().toLocaleDateString()}</p>\n          </div>\n          <div className=\"text-right\">\n            <p className=\"text-xs\">\n              <strong>Property:</strong> {PROPERTY_TYPES.find(type => type.value === formState.propertyType)?.label}\n            </p>\n            <p className=\"text-xs\">\n              <strong>Location:</strong> {STATE_OPTIONS.find(state => state.value === formState.propertyState)?.label}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClosingCostEstimator;","import React, { useState } from 'react';\nimport { ArrowLeft, Map, Search, Building, Home, Landmark, Info, Files, Clock, X } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Badge } from '@/components/ui/badge';\n\ninterface PropertyDetails {\n  address: string;\n  city: string;\n  state: string;\n  zip: string;\n  propertyType: string;\n  bedrooms: number;\n  bathrooms: number;\n  sqFt: number;\n  yearBuilt: number;\n  lotSize: string;\n  lastSoldPrice: number;\n  lastSoldDate: string;\n  estimatedValue: number;\n  taxAssessment: number;\n  taxYear: number;\n  propertyTax: number;\n  parcelNumber: string;\n  zoning: string;\n}\n\ninterface Comparable {\n  id: number;\n  address: string;\n  distance: string;\n  salePrice: number;\n  saleDate: string;\n  bedrooms: number;\n  bathrooms: number;\n  sqFt: number;\n  yearBuilt: number;\n  pricePerSqFt: number;\n}\n\nconst PropertyLookupTool: React.FC = () => {\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSearching, setIsSearching] = useState<boolean>(false);\n  const [hasSearched, setHasSearched] = useState<boolean>(false);\n  const [activeTab, setActiveTab] = useState<string>('details');\n  const [propertyDetails, setPropertyDetails] = useState<PropertyDetails | null>(null);\n  const [comparables, setComparables] = useState<Comparable[]>([]);\n\n  // Format currency\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value);\n  };\n\n  // Format date\n  const formatDate = (dateString: string): string => {\n    const date = new Date(dateString);\n    return new Intl.DateTimeFormat('en-US', { month: 'short', day: 'numeric', year: 'numeric' }).format(date);\n  };\n\n  const handleSearch = () => {\n    if (!searchQuery.trim()) return;\n    \n    setIsSearching(true);\n    \n    // Simulate API call delay\n    setTimeout(() => {\n      // Mock property data\n      setPropertyDetails({\n        address: '123 Main Street',\n        city: 'Springfield',\n        state: 'IL',\n        zip: '62704',\n        propertyType: 'Single Family',\n        bedrooms: 4,\n        bathrooms: 2.5,\n        sqFt: 2450,\n        yearBuilt: 2005,\n        lotSize: '0.25 acres',\n        lastSoldPrice: 375000,\n        lastSoldDate: '2021-06-15',\n        estimatedValue: 425000,\n        taxAssessment: 350000,\n        taxYear: 2023,\n        propertyTax: 5250,\n        parcelNumber: '18-34-200-023',\n        zoning: 'R1 - Residential'\n      });\n      \n      // Mock comparable properties\n      setComparables([\n        {\n          id: 1,\n          address: '135 Main Street',\n          distance: '0.2 miles',\n          salePrice: 380000,\n          saleDate: '2023-02-10',\n          bedrooms: 4,\n          bathrooms: 2.5,\n          sqFt: 2300,\n          yearBuilt: 2007,\n          pricePerSqFt: 165.22\n        },\n        {\n          id: 2,\n          address: '245 Oak Avenue',\n          distance: '0.5 miles',\n          salePrice: 410000,\n          saleDate: '2023-01-05',\n          bedrooms: 4,\n          bathrooms: 3,\n          sqFt: 2600,\n          yearBuilt: 2010,\n          pricePerSqFt: 157.69\n        },\n        {\n          id: 3,\n          address: '78 Maple Drive',\n          distance: '0.3 miles',\n          salePrice: 365000,\n          saleDate: '2022-11-18',\n          bedrooms: 3,\n          bathrooms: 2.5,\n          sqFt: 2200,\n          yearBuilt: 2003,\n          pricePerSqFt: 165.91\n        }\n      ]);\n      \n      setIsSearching(false);\n      setHasSearched(true);\n    }, 1500);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\" asChild>\n          <Link to=\"/tools\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back to Tools\n          </Link>\n        </Button>\n      </div>\n\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight\">Property Lookup Tool</h1>\n        <p className=\"text-gray-500\">Search for property information, tax records, and comparable sales</p>\n      </div>\n\n      {/* Search form */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-lg flex items-center\">\n            <Search className=\"mr-2 h-5 w-5 text-primary\" />\n            Property Search\n          </CardTitle>\n          <CardDescription>\n            Enter an address, parcel number, or owner name to search properties\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex space-x-2\">\n            <div className=\"relative flex-1\">\n              <Input\n                placeholder=\"123 Main St, Springfield, IL 62704\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pr-10\"\n              />\n              {searchQuery && (\n                <button\n                  className=\"absolute inset-y-0 right-0 pr-3 flex items-center text-gray-400 hover:text-gray-500\"\n                  onClick={() => setSearchQuery('')}\n                >\n                  <span className=\"sr-only\">Clear search</span>\n                  <X className=\"h-4 w-4\" />\n                </button>\n              )}\n            </div>\n            <Button onClick={handleSearch} disabled={isSearching}>\n              {isSearching ? 'Searching...' : 'Search'}\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Property Results */}\n      {hasSearched && (\n        <div className=\"space-y-6\">\n          {propertyDetails ? (\n            <>\n              {/* Property Overview */}\n              <Card>\n                <CardHeader>\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <CardTitle>{propertyDetails.address}</CardTitle>\n                      <CardDescription>\n                        {propertyDetails.city}, {propertyDetails.state} {propertyDetails.zip}\n                      </CardDescription>\n                    </div>\n                    <Badge>{propertyDetails.propertyType}</Badge>\n                  </div>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                    <div className=\"bg-gray-100 rounded-lg p-4 flex flex-col items-center justify-center text-center\">\n                      <div className=\"text-xs text-gray-500 uppercase\">Est. Value</div>\n                      <div className=\"text-2xl font-bold mt-1\">{formatCurrency(propertyDetails.estimatedValue)}</div>\n                    </div>\n                    <div className=\"bg-gray-100 rounded-lg p-4 flex flex-col items-center justify-center text-center\">\n                      <div className=\"text-xs text-gray-500 uppercase\">Last Sold</div>\n                      <div className=\"text-2xl font-bold mt-1\">{formatCurrency(propertyDetails.lastSoldPrice)}</div>\n                      <div className=\"text-xs text-gray-500 mt-1\">{formatDate(propertyDetails.lastSoldDate)}</div>\n                    </div>\n                    <div className=\"bg-gray-100 rounded-lg p-4 flex flex-col items-center justify-center text-center\">\n                      <div className=\"text-xs text-gray-500 uppercase\">Property Tax</div>\n                      <div className=\"text-2xl font-bold mt-1\">{formatCurrency(propertyDetails.propertyTax)}</div>\n                      <div className=\"text-xs text-gray-500 mt-1\">{propertyDetails.taxYear}</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Tabs for different property data */}\n              <Tabs value={activeTab} onValueChange={setActiveTab}>\n                <TabsList className=\"grid grid-cols-3\">\n                  <TabsTrigger value=\"details\">Property Details</TabsTrigger>\n                  <TabsTrigger value=\"tax\">Tax Information</TabsTrigger>\n                  <TabsTrigger value=\"comparables\">Comparable Sales</TabsTrigger>\n                </TabsList>\n                \n                {/* Property Details Tab */}\n                <TabsContent value=\"details\" className=\"space-y-4\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"text-lg flex items-center\">\n                        <Building className=\"mr-2 h-5 w-5 text-primary\" />\n                        Building Information\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Bedrooms</div>\n                          <div className=\"font-medium\">{propertyDetails.bedrooms}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Bathrooms</div>\n                          <div className=\"font-medium\">{propertyDetails.bathrooms}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Square Feet</div>\n                          <div className=\"font-medium\">{propertyDetails.sqFt.toLocaleString()}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Year Built</div>\n                          <div className=\"font-medium\">{propertyDetails.yearBuilt}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Lot Size</div>\n                          <div className=\"font-medium\">{propertyDetails.lotSize}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Property Type</div>\n                          <div className=\"font-medium\">{propertyDetails.propertyType}</div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                  \n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"text-lg flex items-center\">\n                        <Clock className=\"mr-2 h-5 w-5 text-primary\" />\n                        Sales History\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"space-y-4\">\n                        <div className=\"flex justify-between items-center pb-2 border-b\">\n                          <div>\n                            <div className=\"font-medium\">{formatDate(propertyDetails.lastSoldDate)}</div>\n                            <div className=\"text-sm text-gray-500\">Sale</div>\n                          </div>\n                          <div className=\"text-lg font-bold\">{formatCurrency(propertyDetails.lastSoldPrice)}</div>\n                        </div>\n                        {/* Additional sales history would go here */}\n                      </div>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n                \n                {/* Tax Information Tab */}\n                <TabsContent value=\"tax\" className=\"space-y-4\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"text-lg flex items-center\">\n                        <Landmark className=\"mr-2 h-5 w-5 text-primary\" />\n                        Tax Assessment\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4\">\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Tax Year</div>\n                          <div className=\"font-medium\">{propertyDetails.taxYear}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Assessed Value</div>\n                          <div className=\"font-medium\">{formatCurrency(propertyDetails.taxAssessment)}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Annual Property Tax</div>\n                          <div className=\"font-medium\">{formatCurrency(propertyDetails.propertyTax)}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Monthly Tax Escrow</div>\n                          <div className=\"font-medium\">{formatCurrency(propertyDetails.propertyTax / 12)}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Parcel Number</div>\n                          <div className=\"font-medium\">{propertyDetails.parcelNumber}</div>\n                        </div>\n                        <div>\n                          <div className=\"text-sm text-gray-500\">Zoning</div>\n                          <div className=\"font-medium\">{propertyDetails.zoning}</div>\n                        </div>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n                \n                {/* Comparable Sales Tab */}\n                <TabsContent value=\"comparables\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"text-lg flex items-center\">\n                        <Home className=\"mr-2 h-5 w-5 text-primary\" />\n                        Comparable Properties\n                      </CardTitle>\n                      <CardDescription>\n                        Recently sold properties similar to this one\n                      </CardDescription>\n                    </CardHeader>\n                    <CardContent>\n                      <div className=\"overflow-x-auto\">\n                        <table className=\"w-full text-sm\">\n                          <thead>\n                            <tr className=\"border-b\">\n                              <th className=\"text-left py-3 px-4\">Address</th>\n                              <th className=\"text-left py-3 px-4\">Distance</th>\n                              <th className=\"text-left py-3 px-4\">Sale Date</th>\n                              <th className=\"text-left py-3 px-4\">Sale Price</th>\n                              <th className=\"text-left py-3 px-4\">Bed/Bath</th>\n                              <th className=\"text-left py-3 px-4\">Sq Ft</th>\n                              <th className=\"text-left py-3 px-4\">Price/Sq Ft</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {comparables.map((comp) => (\n                              <tr key={comp.id} className=\"border-b hover:bg-gray-50\">\n                                <td className=\"py-3 px-4\">{comp.address}</td>\n                                <td className=\"py-3 px-4\">{comp.distance}</td>\n                                <td className=\"py-3 px-4\">{formatDate(comp.saleDate)}</td>\n                                <td className=\"py-3 px-4\">{formatCurrency(comp.salePrice)}</td>\n                                <td className=\"py-3 px-4\">{comp.bedrooms}/{comp.bathrooms}</td>\n                                <td className=\"py-3 px-4\">{comp.sqFt.toLocaleString()}</td>\n                                <td className=\"py-3 px-4\">{formatCurrency(comp.pricePerSqFt)}</td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n              </Tabs>\n              \n              {/* Action Buttons */}\n              <div className=\"flex flex-wrap gap-2\">\n                <Button variant=\"outline\">\n                  <Files className=\"mr-2 h-4 w-4\" />\n                  Export Property Report\n                </Button>\n                <Button variant=\"outline\">\n                  <Map className=\"mr-2 h-4 w-4\" />\n                  View on Map\n                </Button>\n                <Button>\n                  <Info className=\"mr-2 h-4 w-4\" />\n                  Add to Loan File\n                </Button>\n              </div>\n            </>\n          ) : (\n            <Card className=\"p-8 text-center\">\n              <div className=\"mx-auto w-12 h-12 rounded-full bg-gray-100 flex items-center justify-center mb-4\">\n                <Info className=\"h-6 w-6 text-gray-400\" />\n              </div>\n              <h3 className=\"text-lg font-medium\">No Property Found</h3>\n              <p className=\"text-gray-500 max-w-md mx-auto mt-2\">\n                We couldn't find a property matching your search criteria. Try a different address, or check the formatting.\n              </p>\n            </Card>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default PropertyLookupTool;","import React, { useState } from 'react';\nimport { ArrowLeft, Calendar, Clock, UserPlus, X, CheckCircle, Filter, ChevronLeft, ChevronRight, Plus, AlertCircle, User, Phone, Mail, MessageCircle, Video, Bell } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Label } from '@/components/ui/label';\nimport { Badge } from '@/components/ui/badge';\nimport { Avatar, AvatarImage, AvatarFallback } from '@/components/ui/avatar';\nimport { Switch } from '@radix-ui/react-switch';\n\ntype MeetingType = 'phone' | 'video' | 'in-person' | 'other';\n\ninterface Appointment {\n  id: number;\n  title: string;\n  clientName: string;\n  clientEmail?: string;\n  clientPhone?: string;\n  date: string;\n  startTime: string;\n  endTime: string;\n  type: MeetingType;\n  status: 'scheduled' | 'completed' | 'cancelled';\n  notes?: string;\n}\n\ninterface TimeSlot {\n  id: number;\n  time: string;\n  available: boolean;\n}\n\nconst SchedulingAssistant: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<string>('calendar');\n  const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n  const [showAppointmentForm, setShowAppointmentForm] = useState<boolean>(false);\n  const [meetingType, setMeetingType] = useState<MeetingType>('phone');\n  const [selectedTimeSlot, setSelectedTimeSlot] = useState<string | null>(null);\n  \n  // Form fields\n  const [appointmentTitle, setAppointmentTitle] = useState<string>('');\n  const [clientName, setClientName] = useState<string>('');\n  const [clientEmail, setClientEmail] = useState<string>('');\n  const [clientPhone, setClientPhone] = useState<string>('');\n  const [appointmentNotes, setAppointmentNotes] = useState<string>('');\n  \n  // Mock data for appointments\n  const [appointments, setAppointments] = useState<Appointment[]>([\n    {\n      id: 1,\n      title: 'Initial Consultation',\n      clientName: 'John Smith',\n      clientEmail: 'john.smith@example.com',\n      clientPhone: '555-123-4567',\n      date: '2023-08-15',\n      startTime: '09:00',\n      endTime: '10:00',\n      type: 'phone',\n      status: 'scheduled'\n    },\n    {\n      id: 2,\n      title: 'Loan Application Review',\n      clientName: 'Sarah Johnson',\n      clientEmail: 'sarah.j@example.com',\n      clientPhone: '555-987-6543',\n      date: '2023-08-15',\n      startTime: '14:00',\n      endTime: '15:00',\n      type: 'video',\n      status: 'scheduled'\n    },\n    {\n      id: 3,\n      title: 'Document Collection Meeting',\n      clientName: 'Michael Brown',\n      clientEmail: 'mbrown@example.com',\n      clientPhone: '555-456-7890',\n      date: '2023-08-16',\n      startTime: '11:00',\n      endTime: '12:00',\n      type: 'in-person',\n      status: 'scheduled'\n    }\n  ]);\n  \n  // Generate time slots for the selected day\n  const timeSlots: TimeSlot[] = Array.from({ length: 17 }, (_, i) => {\n    const hour = 8 + Math.floor(i / 2);\n    const minute = i % 2 === 0 ? '00' : '30';\n    const time = `${hour.toString().padStart(2, '0')}:${minute}`;\n    \n    // Check if time slot is available (not booked already)\n    const isAvailable = !appointments.some(\n      app => app.date === formatDate(selectedDate) && \n             app.startTime <= time && \n             app.endTime > time &&\n             app.status !== 'cancelled'\n    );\n    \n    return {\n      id: i,\n      time,\n      available: isAvailable\n    };\n  });\n  \n  // Format date to yyyy-mm-dd\n  const formatDate = (date: Date): string => {\n    return date.toISOString().split('T')[0];\n  };\n  \n  // Format date for display\n  const formatDateDisplay = (date: Date): string => {\n    return date.toLocaleDateString('en-US', { \n      weekday: 'long',\n      month: 'long', \n      day: 'numeric',\n      year: 'numeric'\n    });\n  };\n  \n  // Handle date navigation\n  const nextDay = () => {\n    const next = new Date(selectedDate);\n    next.setDate(next.getDate() + 1);\n    setSelectedDate(next);\n  };\n  \n  const prevDay = () => {\n    const prev = new Date(selectedDate);\n    prev.setDate(prev.getDate() - 1);\n    setSelectedDate(prev);\n  };\n  \n  // Handle time slot selection\n  const handleTimeSlotSelect = (time: string) => {\n    setSelectedTimeSlot(time);\n    \n    // Calculate end time (1 hour later)\n    const [hour, minute] = time.split(':').map(Number);\n    const endHour = hour + 1;\n    const endTime = `${endHour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n    \n    // Set default appointment title based on time\n    setAppointmentTitle(`Meeting on ${formatDateDisplay(selectedDate)} at ${time}`);\n  };\n  \n  // Create new appointment\n  const handleCreateAppointment = () => {\n    if (!selectedTimeSlot) return;\n    \n    // Calculate end time (1 hour later)\n    const [hour, minute] = selectedTimeSlot.split(':').map(Number);\n    const endHour = hour + 1;\n    const endTime = `${endHour.toString().padStart(2, '0')}:${minute.toString().padStart(2, '0')}`;\n    \n    const newAppointment: Appointment = {\n      id: appointments.length + 1,\n      title: appointmentTitle,\n      clientName,\n      clientEmail,\n      clientPhone,\n      date: formatDate(selectedDate),\n      startTime: selectedTimeSlot,\n      endTime,\n      type: meetingType,\n      status: 'scheduled',\n      notes: appointmentNotes\n    };\n    \n    setAppointments([...appointments, newAppointment]);\n    \n    // Reset form\n    setAppointmentTitle('');\n    setClientName('');\n    setClientEmail('');\n    setClientPhone('');\n    setAppointmentNotes('');\n    setSelectedTimeSlot(null);\n    setShowAppointmentForm(false);\n  };\n  \n  // Cancel appointment\n  const handleCancelAppointment = (id: number) => {\n    setAppointments(appointments.map(app => \n      app.id === id ? { ...app, status: 'cancelled' } : app\n    ));\n  };\n  \n  // Get appointments for selected date\n  const appointmentsForSelectedDate = appointments.filter(\n    app => app.date === formatDate(selectedDate) && app.status !== 'cancelled'\n  ).sort((a, b) => a.startTime.localeCompare(b.startTime));\n  \n  // Get today's appointments\n  const todayAppointments = appointments.filter(\n    app => app.date === formatDate(new Date()) && app.status !== 'cancelled'\n  ).sort((a, b) => a.startTime.localeCompare(b.startTime));\n  \n  // Get upcoming appointments (not today, not cancelled)\n  const upcomingAppointments = appointments.filter(\n    app => app.date > formatDate(new Date()) && app.status !== 'cancelled'\n  ).sort((a, b) => a.date.localeCompare(b.date) || a.startTime.localeCompare(b.startTime));\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\" asChild>\n          <Link to=\"/tools\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back to Tools\n          </Link>\n        </Button>\n      </div>\n\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight\">Scheduling Assistant</h1>\n        <p className=\"text-gray-500\">Manage appointments, schedule meetings, and set reminders</p>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"calendar\">Calendar</TabsTrigger>\n          <TabsTrigger value=\"appointments\">My Appointments</TabsTrigger>\n          <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n        </TabsList>\n        \n        {/* Calendar Tab */}\n        <TabsContent value=\"calendar\" className=\"space-y-4\">\n          {/* Date Navigation */}\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <Button variant=\"outline\" size=\"sm\" onClick={prevDay}>\n                  <ChevronLeft className=\"h-4 w-4 mr-1\" /> Previous Day\n                </Button>\n                <h2 className=\"text-lg font-semibold\">{formatDateDisplay(selectedDate)}</h2>\n                <Button variant=\"outline\" size=\"sm\" onClick={nextDay}>\n                  Next Day <ChevronRight className=\"h-4 w-4 ml-1\" />\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n          \n          {/* Time Slot Selector */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Clock className=\"mr-2 h-5 w-5 text-primary\" />\n                Available Time Slots\n              </CardTitle>\n              <CardDescription>\n                Select a time slot to schedule a new appointment\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-2\">\n                {timeSlots.map((slot) => (\n                  <Button\n                    key={slot.id}\n                    variant={selectedTimeSlot === slot.time ? \"default\" : \"outline\"}\n                    disabled={!slot.available}\n                    onClick={() => {\n                      handleTimeSlotSelect(slot.time);\n                      setShowAppointmentForm(true);\n                    }}\n                    className=\"flex-1\"\n                  >\n                    {slot.time}\n                  </Button>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n          \n          {/* Appointments for selected day */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Calendar className=\"mr-2 h-5 w-5 text-primary\" />\n                Appointments for {selectedDate.toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {appointmentsForSelectedDate.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {appointmentsForSelectedDate.map((appointment) => (\n                    <div key={appointment.id} className=\"flex justify-between items-center p-4 border rounded-lg hover:bg-gray-50\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className={`p-2 rounded-full ${\n                          appointment.type === 'phone' ? 'bg-blue-100 text-blue-600' :\n                          appointment.type === 'video' ? 'bg-purple-100 text-purple-600' :\n                          appointment.type === 'in-person' ? 'bg-green-100 text-green-600' :\n                          'bg-gray-100 text-gray-600'\n                        }`}>\n                          {appointment.type === 'phone' && <Phone className=\"h-5 w-5\" />}\n                          {appointment.type === 'video' && <Video className=\"h-5 w-5\" />}\n                          {appointment.type === 'in-person' && <User className=\"h-5 w-5\" />}\n                          {appointment.type === 'other' && <Calendar className=\"h-5 w-5\" />}\n                        </div>\n                        <div>\n                          <div className=\"font-medium\">{appointment.title}</div>\n                          <div className=\"text-sm text-gray-500\">\n                            {appointment.startTime} - {appointment.endTime} • {appointment.clientName}\n                          </div>\n                        </div>\n                      </div>\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\"\n                        onClick={() => handleCancelAppointment(appointment.id)}\n                      >\n                        <X className=\"h-4 w-4 mr-1\" /> Cancel\n                      </Button>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <Calendar className=\"h-12 w-12 text-gray-300 mx-auto mb-2\" />\n                  <h3 className=\"text-lg font-medium\">No Appointments</h3>\n                  <p className=\"text-gray-500 mt-1\">\n                    You don't have any appointments scheduled for this day.\n                  </p>\n                  <Button className=\"mt-4\" onClick={() => setShowAppointmentForm(true)}>\n                    <Plus className=\"h-4 w-4 mr-1\" /> Schedule New Appointment\n                  </Button>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n          \n          {/* New Appointment Form */}\n          {showAppointmentForm && selectedTimeSlot && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg flex items-center\">\n                  <UserPlus className=\"mr-2 h-5 w-5 text-primary\" />\n                  Schedule New Appointment\n                </CardTitle>\n                <CardDescription>\n                  {formatDateDisplay(selectedDate)} at {selectedTimeSlot}\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"appointmentTitle\">Appointment Title</Label>\n                  <Input\n                    id=\"appointmentTitle\"\n                    value={appointmentTitle}\n                    onChange={(e) => setAppointmentTitle(e.target.value)}\n                    placeholder=\"E.g., Initial Consultation, Loan Application Review\"\n                  />\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"clientName\">Client Name</Label>\n                    <Input\n                      id=\"clientName\"\n                      value={clientName}\n                      onChange={(e) => setClientName(e.target.value)}\n                      placeholder=\"Enter client name\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"meetingType\">Meeting Type</Label>\n                    <select \n                      id=\"meetingType\"\n                      className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                      value={meetingType}\n                      onChange={(e) => setMeetingType(e.target.value as MeetingType)}\n                    >\n                      <option value=\"phone\">Phone Call</option>\n                      <option value=\"video\">Video Conference</option>\n                      <option value=\"in-person\">In-Person Meeting</option>\n                      <option value=\"other\">Other</option>\n                    </select>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"clientEmail\">Client Email</Label>\n                    <Input\n                      id=\"clientEmail\"\n                      type=\"email\"\n                      value={clientEmail}\n                      onChange={(e) => setClientEmail(e.target.value)}\n                      placeholder=\"Enter client email\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"clientPhone\">Client Phone</Label>\n                    <Input\n                      id=\"clientPhone\"\n                      value={clientPhone}\n                      onChange={(e) => setClientPhone(e.target.value)}\n                      placeholder=\"Enter client phone number\"\n                    />\n                  </div>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"appointmentNotes\">Notes</Label>\n                  <textarea\n                    id=\"appointmentNotes\"\n                    className=\"w-full min-h-[100px] p-3 border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                    value={appointmentNotes}\n                    onChange={(e) => setAppointmentNotes(e.target.value)}\n                    placeholder=\"Add any notes about this appointment\"\n                  ></textarea>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\" onClick={() => setShowAppointmentForm(false)}>\n                  Cancel\n                </Button>\n                <Button onClick={handleCreateAppointment}>\n                  <CheckCircle className=\"h-4 w-4 mr-1\" /> Schedule Appointment\n                </Button>\n              </CardFooter>\n            </Card>\n          )}\n        </TabsContent>\n        \n        {/* Appointments Tab */}\n        <TabsContent value=\"appointments\" className=\"space-y-4\">\n          {/* Today's Appointments */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Calendar className=\"mr-2 h-5 w-5 text-primary\" />\n                Today's Appointments\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {todayAppointments.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {todayAppointments.map((appointment) => (\n                    <div key={appointment.id} className=\"flex justify-between items-center p-4 border rounded-lg hover:bg-gray-50\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className={`p-2 rounded-full ${\n                          appointment.type === 'phone' ? 'bg-blue-100 text-blue-600' :\n                          appointment.type === 'video' ? 'bg-purple-100 text-purple-600' :\n                          appointment.type === 'in-person' ? 'bg-green-100 text-green-600' :\n                          'bg-gray-100 text-gray-600'\n                        }`}>\n                          {appointment.type === 'phone' && <Phone className=\"h-5 w-5\" />}\n                          {appointment.type === 'video' && <Video className=\"h-5 w-5\" />}\n                          {appointment.type === 'in-person' && <User className=\"h-5 w-5\" />}\n                          {appointment.type === 'other' && <Calendar className=\"h-5 w-5\" />}\n                        </div>\n                        <div>\n                          <div className=\"font-medium\">{appointment.title}</div>\n                          <div className=\"text-sm text-gray-500\">\n                            {appointment.startTime} - {appointment.endTime} • {appointment.clientName}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Button variant=\"outline\" size=\"sm\">\n                          <MessageCircle className=\"h-4 w-4 mr-1\" /> Notify\n                        </Button>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          onClick={() => handleCancelAppointment(appointment.id)}\n                        >\n                          <X className=\"h-4 w-4 mr-1\" /> Cancel\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <CheckCircle className=\"h-12 w-12 text-gray-300 mx-auto mb-2\" />\n                  <h3 className=\"text-lg font-medium\">No Appointments Today</h3>\n                  <p className=\"text-gray-500 mt-1\">\n                    You don't have any appointments scheduled for today.\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n          \n          {/* Upcoming Appointments */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Calendar className=\"mr-2 h-5 w-5 text-primary\" />\n                Upcoming Appointments\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {upcomingAppointments.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {upcomingAppointments.map((appointment) => (\n                    <div key={appointment.id} className=\"flex justify-between items-center p-4 border rounded-lg hover:bg-gray-50\">\n                      <div className=\"flex items-center space-x-4\">\n                        <div className={`p-2 rounded-full ${\n                          appointment.type === 'phone' ? 'bg-blue-100 text-blue-600' :\n                          appointment.type === 'video' ? 'bg-purple-100 text-purple-600' :\n                          appointment.type === 'in-person' ? 'bg-green-100 text-green-600' :\n                          'bg-gray-100 text-gray-600'\n                        }`}>\n                          {appointment.type === 'phone' && <Phone className=\"h-5 w-5\" />}\n                          {appointment.type === 'video' && <Video className=\"h-5 w-5\" />}\n                          {appointment.type === 'in-person' && <User className=\"h-5 w-5\" />}\n                          {appointment.type === 'other' && <Calendar className=\"h-5 w-5\" />}\n                        </div>\n                        <div>\n                          <div className=\"font-medium\">{appointment.title}</div>\n                          <div className=\"text-sm text-gray-500\">\n                            {new Date(appointment.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })} •\n                            {appointment.startTime} - {appointment.endTime} • {appointment.clientName}\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Button variant=\"outline\" size=\"sm\">\n                          <MessageCircle className=\"h-4 w-4 mr-1\" /> Notify\n                        </Button>\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          onClick={() => handleCancelAppointment(appointment.id)}\n                        >\n                          <X className=\"h-4 w-4 mr-1\" /> Cancel\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <Calendar className=\"h-12 w-12 text-gray-300 mx-auto mb-2\" />\n                  <h3 className=\"text-lg font-medium\">No Upcoming Appointments</h3>\n                  <p className=\"text-gray-500 mt-1\">\n                    You don't have any appointments scheduled in the future.\n                  </p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Settings Tab */}\n        <TabsContent value=\"settings\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Clock className=\"mr-2 h-5 w-5 text-primary\" />\n                Scheduling Preferences\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label className=\"text-base\">Working Hours</Label>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"startTime\">Start Time</Label>\n                    <select \n                      id=\"startTime\"\n                      className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                      defaultValue=\"08:00\"\n                    >\n                      <option value=\"07:00\">7:00 AM</option>\n                      <option value=\"08:00\">8:00 AM</option>\n                      <option value=\"09:00\">9:00 AM</option>\n                      <option value=\"10:00\">10:00 AM</option>\n                    </select>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"endTime\">End Time</Label>\n                    <select \n                      id=\"endTime\"\n                      className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                      defaultValue=\"17:00\"\n                    >\n                      <option value=\"16:00\">4:00 PM</option>\n                      <option value=\"17:00\">5:00 PM</option>\n                      <option value=\"18:00\">6:00 PM</option>\n                      <option value=\"19:00\">7:00 PM</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label className=\"text-base\">Working Days</Label>\n                <div className=\"grid grid-cols-2 sm:grid-cols-4 gap-2\">\n                  {['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'].map((day, index) => (\n                    <div key={day} className=\"flex items-center space-x-2\">\n                      <Checkbox id={`day-${index}`} defaultChecked={index < 5} />\n                      <Label htmlFor={`day-${index}`}>{day}</Label>\n                    </div>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label className=\"text-base\">Meeting Duration</Label>\n                <select \n                  className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                  defaultValue=\"60\"\n                >\n                  <option value=\"15\">15 minutes</option>\n                  <option value=\"30\">30 minutes</option>\n                  <option value=\"45\">45 minutes</option>\n                  <option value=\"60\">60 minutes</option>\n                  <option value=\"90\">90 minutes</option>\n                  <option value=\"120\">120 minutes</option>\n                </select>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label className=\"text-base\">Calendar Sync</Label>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center justify-between p-3 border rounded-md\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-blue-100 p-2 rounded-full\">\n                        <Calendar className=\"h-5 w-5 text-blue-600\" />\n                      </div>\n                      <div>\n                        <div className=\"font-medium\">Google Calendar</div>\n                        <div className=\"text-sm text-gray-500\">Sync your Google Calendar</div>\n                      </div>\n                    </div>\n                    <Button variant=\"outline\">Connect</Button>\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between p-3 border rounded-md\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"bg-blue-100 p-2 rounded-full\">\n                        <Calendar className=\"h-5 w-5 text-blue-600\" />\n                      </div>\n                      <div>\n                        <div className=\"font-medium\">Outlook Calendar</div>\n                        <div className=\"text-sm text-gray-500\">Sync your Outlook Calendar</div>\n                      </div>\n                    </div>\n                    <Button variant=\"outline\">Connect</Button>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n            <CardFooter>\n              <Button className=\"ml-auto\">Save Preferences</Button>\n            </CardFooter>\n          </Card>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Bell className=\"mr-2 h-5 w-5 text-primary\" />\n                Notification Settings\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>Email Notifications</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Receive email notifications for new and updated appointments\n                    </p>\n                  </div>\n                  <Switch defaultChecked />\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-0.5\">\n                    <Label>SMS Notifications</Label>\n                    <p className=\"text-sm text-muted-foreground\">\n                      Receive text message reminders for upcoming appointments\n                    </p>\n                  </div>\n                  <Switch defaultChecked />\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label>Reminder Time</Label>\n                <select \n                  className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                  defaultValue=\"60\"\n                >\n                  <option value=\"15\">15 minutes before</option>\n                  <option value=\"30\">30 minutes before</option>\n                  <option value=\"60\">1 hour before</option>\n                  <option value=\"120\">2 hours before</option>\n                  <option value=\"1440\">1 day before</option>\n                </select>\n              </div>\n            </CardContent>\n            <CardFooter>\n              <Button className=\"ml-auto\">Save Notification Settings</Button>\n            </CardFooter>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default SchedulingAssistant;","import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-3.5 w-3.5 fill-primary\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","import React, { useState } from 'react';\nimport { ArrowLeft, Search, Home, Filter, Check, DollarSign, Percent, Briefcase, Building, Wallet, AlertCircle, CheckCircle, HelpCircle, InfoIcon, X } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Slider } from '@/components/ui/slider';\nimport { Label } from '@/components/ui/label';\nimport { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\n\ninterface LoanProgram {\n  id: number;\n  name: string;\n  type: 'conventional' | 'fha' | 'va' | 'usda' | 'jumbo' | 'other';\n  description: string;\n  minDownPayment: number;\n  minCreditScore: number;\n  maxLoanAmount: number;\n  interestRateRange: {\n    min: number;\n    max: number;\n  };\n  termsAvailable: string[];\n  eligibilityRequirements: string[];\n  benefits: string[];\n  considerations: string[];\n  bestFor: string[];\n}\n\ninterface FormState {\n  propertyType: string;\n  propertyUse: string;\n  creditScore: number;\n  downPayment: number;\n  loanAmount: number;\n  isFirstTimeBuyer: boolean;\n  isVeteran: boolean;\n  isRural: boolean;\n}\n\nconst LoanProgramFinder: React.FC = () => {\n  const [formState, setFormState] = useState<FormState>({\n    propertyType: 'single-family',\n    propertyUse: 'primary',\n    creditScore: 700,\n    downPayment: 10,\n    loanAmount: 350000,\n    isFirstTimeBuyer: false,\n    isVeteran: false,\n    isRural: false\n  });\n  \n  const [isSearching, setIsSearching] = useState<boolean>(false);\n  const [hasSearched, setHasSearched] = useState<boolean>(false);\n  const [matchingPrograms, setMatchingPrograms] = useState<LoanProgram[]>([]);\n  const [savedPrograms, setSavedPrograms] = useState<LoanProgram[]>([]);\n  \n  // Handle form input changes\n  const handleInputChange = (field: keyof FormState, value: any) => {\n    setFormState(prev => ({ ...prev, [field]: value }));\n  };\n  \n  // Format currency\n  const formatCurrency = (value: number): string => {\n    return new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(value);\n  };\n  \n  // Mock loan programs\n  const loanPrograms: LoanProgram[] = [\n    {\n      id: 1,\n      name: 'Conventional 97',\n      type: 'conventional',\n      description: 'A conventional loan option with a low down payment requirement.',\n      minDownPayment: 3,\n      minCreditScore: 620,\n      maxLoanAmount: 726200,\n      interestRateRange: {\n        min: 6.5,\n        max: 7.25\n      },\n      termsAvailable: ['30-year fixed', '15-year fixed'],\n      eligibilityRequirements: [\n        'Credit score of 620 or higher',\n        'Debt-to-income ratio below 45%',\n        'Primary residence only',\n        'First-time homebuyers or repeat buyers'\n      ],\n      benefits: [\n        'Low down payment option (3%)',\n        'Private mortgage insurance (PMI) can be cancelled',\n        'Flexible property options'\n      ],\n      considerations: [\n        'PMI required until 20% equity is reached',\n        'Higher interest rates for lower credit scores',\n        'Higher monthly payments with low down payment'\n      ],\n      bestFor: [\n        'First-time homebuyers with good credit',\n        'Buyers with limited savings for down payment',\n        'Borrowers wanting to build equity quickly'\n      ]\n    },\n    {\n      id: 2,\n      name: 'FHA 203(b)',\n      type: 'fha',\n      description: 'Government-backed loan with flexible qualification requirements.',\n      minDownPayment: 3.5,\n      minCreditScore: 580,\n      maxLoanAmount: 472030,\n      interestRateRange: {\n        min: 6.25,\n        max: 7.0\n      },\n      termsAvailable: ['30-year fixed', '15-year fixed'],\n      eligibilityRequirements: [\n        'Credit score of 580+ for 3.5% down',\n        'Credit score of 500-579 for 10% down',\n        'Debt-to-income ratio below 50%',\n        'Primary residence only'\n      ],\n      benefits: [\n        'Lower credit score requirements',\n        'Competitive interest rates',\n        'Down payment can come from gifts'\n      ],\n      considerations: [\n        'Mortgage insurance premium (MIP) for the life of loan in most cases',\n        'Upfront MIP fee (1.75% of loan amount)',\n        'Property must meet minimum standards'\n      ],\n      bestFor: [\n        'First-time homebuyers with lower credit scores',\n        'Buyers with limited down payment funds',\n        'Borrowers recovering from credit challenges'\n      ]\n    },\n    {\n      id: 3,\n      name: 'VA Home Loan',\n      type: 'va',\n      description: 'Loans for veterans, active military, and eligible spouses with no down payment required.',\n      minDownPayment: 0,\n      minCreditScore: 620,\n      maxLoanAmount: 726200,\n      interestRateRange: {\n        min: 6.0,\n        max: 6.75\n      },\n      termsAvailable: ['30-year fixed', '15-year fixed'],\n      eligibilityRequirements: [\n        'VA eligibility based on service requirements',\n        'Certificate of Eligibility (COE) required',\n        'Credit score typically 620+ (lender specific)',\n        'Primary residence only'\n      ],\n      benefits: [\n        'No down payment required',\n        'No monthly mortgage insurance',\n        'Competitive interest rates',\n        'Limited closing costs'\n      ],\n      considerations: [\n        'VA funding fee required (unless exempt)',\n        'Property must meet VA appraisal standards',\n        'Some limitations on property types'\n      ],\n      bestFor: [\n        'Eligible veterans and service members',\n        'Military personnel with limited savings',\n        'VA-eligible borrowers wanting to maximize buying power'\n      ]\n    },\n    {\n      id: 4,\n      name: 'USDA Rural Development',\n      type: 'usda',\n      description: 'Zero down payment loans for moderate-income buyers in eligible rural areas.',\n      minDownPayment: 0,\n      minCreditScore: 640,\n      maxLoanAmount: 336500,\n      interestRateRange: {\n        min: 6.25,\n        max: 6.85\n      },\n      termsAvailable: ['30-year fixed'],\n      eligibilityRequirements: [\n        'Property must be in USDA-eligible rural area',\n        'Household income within 115% of area median income',\n        'Credit score typically 640+',\n        'Primary residence only'\n      ],\n      benefits: [\n        'No down payment required',\n        'Lower mortgage insurance costs than FHA',\n        'Competitive interest rates'\n      ],\n      considerations: [\n        'Upfront guarantee fee (1% of loan amount)',\n        'Annual fee (0.35% of outstanding balance)',\n        'Income limits apply',\n        'Geographic restrictions'\n      ],\n      bestFor: [\n        'Moderate-income buyers in rural areas',\n        'First-time homebuyers with limited savings',\n        'Buyers wanting to purchase in smaller communities'\n      ]\n    },\n    {\n      id: 5,\n      name: 'Jumbo Loan',\n      type: 'jumbo',\n      description: 'Loans that exceed the conforming loan limits for higher-priced properties.',\n      minDownPayment: 10,\n      minCreditScore: 700,\n      maxLoanAmount: 2000000,\n      interestRateRange: {\n        min: 6.75,\n        max: 7.5\n      },\n      termsAvailable: ['30-year fixed', '15-year fixed', '7/1 ARM', '10/1 ARM'],\n      eligibilityRequirements: [\n        'Credit score typically 700+',\n        'Debt-to-income ratio below 43%',\n        'Significant cash reserves (6-12 months)',\n        'Higher income requirements'\n      ],\n      benefits: [\n        'Finance high-value properties',\n        'Competitive rates for strong borrowers',\n        'Various loan terms available'\n      ],\n      considerations: [\n        'Higher down payment requirements',\n        'Stricter qualification standards',\n        'More documentation required',\n        'Higher closing costs'\n      ],\n      bestFor: [\n        'High-income buyers in expensive markets',\n        'Purchasers of luxury properties',\n        'Borrowers with strong financial profiles'\n      ]\n    }\n  ];\n  \n  // Find matching loan programs based on form inputs\n  const findMatchingPrograms = () => {\n    setIsSearching(true);\n    \n    // Simulate API delay\n    setTimeout(() => {\n      // Filter loan programs based on criteria\n      const matches = loanPrograms.filter(program => {\n        // Credit score check\n        if (formState.creditScore < program.minCreditScore) return false;\n        \n        // Down payment check (as percentage)\n        if (formState.downPayment < program.minDownPayment) return false;\n        \n        // Loan amount check\n        if (formState.loanAmount > program.maxLoanAmount) return false;\n        \n        // VA loan eligibility\n        if (program.type === 'va' && !formState.isVeteran) return false;\n        \n        // USDA eligibility\n        if (program.type === 'usda' && !formState.isRural) return false;\n        \n        return true;\n      });\n      \n      setMatchingPrograms(matches);\n      setIsSearching(false);\n      setHasSearched(true);\n    }, 1500);\n  };\n  \n  // Save/unsave a program\n  const toggleSaveProgram = (program: LoanProgram) => {\n    const isAlreadySaved = savedPrograms.some(p => p.id === program.id);\n    \n    if (isAlreadySaved) {\n      setSavedPrograms(savedPrograms.filter(p => p.id !== program.id));\n    } else {\n      setSavedPrograms([...savedPrograms, program]);\n    }\n  };\n  \n  // Check if a program is saved\n  const isProgramSaved = (programId: number): boolean => {\n    return savedPrograms.some(p => p.id === programId);\n  };\n  \n  // Render a program card\n  const renderProgramCard = (program: LoanProgram) => {\n    const isSaved = isProgramSaved(program.id);\n    \n    return (\n      <Card key={program.id} className=\"mb-4\">\n        <CardHeader>\n          <div className=\"flex justify-between items-start\">\n            <div>\n              <CardTitle className=\"flex items-center\">\n                {program.name}\n                <Badge className=\"ml-2\" variant={\n                  program.type === 'conventional' ? 'default' :\n                  program.type === 'fha' ? 'secondary' :\n                  program.type === 'va' ? 'destructive' :\n                  program.type === 'usda' ? 'outline' :\n                  'default'\n                }>\n                  {program.type.toUpperCase()}\n                </Badge>\n              </CardTitle>\n              <CardDescription className=\"mt-1\">{program.description}</CardDescription>\n            </div>\n            <Button \n              variant={isSaved ? \"default\" : \"outline\"} \n              size=\"sm\"\n              onClick={() => toggleSaveProgram(program)}\n            >\n              {isSaved ? <Check className=\"h-4 w-4 mr-1\" /> : null}\n              {isSaved ? 'Saved' : 'Save'}\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"mb-4 grid grid-cols-1 md:grid-cols-3 gap-4\">\n            <div className=\"flex items-center\">\n              <DollarSign className=\"h-5 w-5 text-primary mr-2\" />\n              <div>\n                <div className=\"text-sm text-gray-500\">Min. Down Payment</div>\n                <div className=\"font-medium\">{program.minDownPayment}%</div>\n              </div>\n            </div>\n            <div className=\"flex items-center\">\n              <Percent className=\"h-5 w-5 text-primary mr-2\" />\n              <div>\n                <div className=\"text-sm text-gray-500\">Interest Rate Range</div>\n                <div className=\"font-medium\">{program.interestRateRange.min}% - {program.interestRateRange.max}%</div>\n              </div>\n            </div>\n            <div className=\"flex items-center\">\n              <Wallet className=\"h-5 w-5 text-primary mr-2\" />\n              <div>\n                <div className=\"text-sm text-gray-500\">Max Loan Amount</div>\n                <div className=\"font-medium\">{formatCurrency(program.maxLoanAmount)}</div>\n              </div>\n            </div>\n          </div>\n          \n          <Tabs defaultValue=\"eligibility\">\n            <TabsList className=\"grid w-full grid-cols-3\">\n              <TabsTrigger value=\"eligibility\">Eligibility</TabsTrigger>\n              <TabsTrigger value=\"benefits\">Benefits</TabsTrigger>\n              <TabsTrigger value=\"considerations\">Considerations</TabsTrigger>\n            </TabsList>\n            <TabsContent value=\"eligibility\" className=\"space-y-2 mt-4\">\n              <h4 className=\"text-sm font-medium\">Eligibility Requirements</h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1\">\n                {program.eligibilityRequirements.map((req, index) => (\n                  <li key={index}>{req}</li>\n                ))}\n              </ul>\n              <div className=\"mt-2\">\n                <h4 className=\"text-sm font-medium\">Available Terms</h4>\n                <div className=\"flex flex-wrap gap-2 mt-1\">\n                  {program.termsAvailable.map((term, index) => (\n                    <Badge key={index} variant=\"outline\">{term}</Badge>\n                  ))}\n                </div>\n              </div>\n            </TabsContent>\n            <TabsContent value=\"benefits\" className=\"mt-4\">\n              <h4 className=\"text-sm font-medium\">Program Benefits</h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1 mt-2\">\n                {program.benefits.map((benefit, index) => (\n                  <li key={index}>{benefit}</li>\n                ))}\n              </ul>\n              <div className=\"mt-4\">\n                <h4 className=\"text-sm font-medium\">Best For</h4>\n                <ul className=\"list-disc pl-5 text-sm space-y-1 mt-2\">\n                  {program.bestFor.map((best, index) => (\n                    <li key={index}>{best}</li>\n                  ))}\n                </ul>\n              </div>\n            </TabsContent>\n            <TabsContent value=\"considerations\" className=\"mt-4\">\n              <h4 className=\"text-sm font-medium\">Important Considerations</h4>\n              <ul className=\"list-disc pl-5 text-sm space-y-1 mt-2\">\n                {program.considerations.map((consideration, index) => (\n                  <li key={index}>{consideration}</li>\n                ))}\n              </ul>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n        <CardFooter>\n          <Button className=\"w-full\">View Full Program Details</Button>\n        </CardFooter>\n      </Card>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\" asChild>\n          <Link to=\"/tools\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back to Tools\n          </Link>\n        </Button>\n      </div>\n\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight\">Loan Program Finder</h1>\n        <p className=\"text-gray-500\">Find the right loan programs based on client criteria</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {/* Search Form */}\n        <div className=\"md:col-span-1 space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Search className=\"mr-2 h-5 w-5 text-primary\" />\n                Client Criteria\n              </CardTitle>\n              <CardDescription>\n                Enter client details to find matching loan programs\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"propertyType\">Property Type</Label>\n                <Select \n                  value={formState.propertyType} \n                  onValueChange={(value) => handleInputChange('propertyType', value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Select property type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"single-family\">Single Family Home</SelectItem>\n                    <SelectItem value=\"condo\">Condominium</SelectItem>\n                    <SelectItem value=\"townhouse\">Townhouse</SelectItem>\n                    <SelectItem value=\"multi-family\">Multi-Family (2-4 units)</SelectItem>\n                    <SelectItem value=\"manufactured\">Manufactured Home</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"propertyUse\">Property Use</Label>\n                <RadioGroup \n                  defaultValue={formState.propertyUse}\n                  onValueChange={(value) => handleInputChange('propertyUse', value)}\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"primary\" id=\"primary\" />\n                    <Label htmlFor=\"primary\">Primary Residence</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"secondary\" id=\"secondary\" />\n                    <Label htmlFor=\"secondary\">Secondary Home</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"investment\" id=\"investment\" />\n                    <Label htmlFor=\"investment\">Investment Property</Label>\n                  </div>\n                </RadioGroup>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <Label htmlFor=\"creditScore\">Credit Score: {formState.creditScore}</Label>\n                </div>\n                <Slider\n                  id=\"creditScore\"\n                  min={500}\n                  max={850}\n                  step={10}\n                  value={[formState.creditScore]}\n                  onValueChange={(value) => handleInputChange('creditScore', value[0])}\n                />\n                <div className=\"flex justify-between text-xs text-gray-500\">\n                  <span>500</span>\n                  <span>675</span>\n                  <span>850</span>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <Label htmlFor=\"downPayment\">Down Payment: {formState.downPayment}%</Label>\n                </div>\n                <Slider\n                  id=\"downPayment\"\n                  min={0}\n                  max={25}\n                  step={1}\n                  value={[formState.downPayment]}\n                  onValueChange={(value) => handleInputChange('downPayment', value[0])}\n                />\n                <div className=\"flex justify-between text-xs text-gray-500\">\n                  <span>0%</span>\n                  <span>10%</span>\n                  <span>25%+</span>\n                </div>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <Label htmlFor=\"loanAmount\">Loan Amount: {formatCurrency(formState.loanAmount)}</Label>\n                <Slider\n                  id=\"loanAmount\"\n                  min={100000}\n                  max={1000000}\n                  step={10000}\n                  value={[formState.loanAmount]}\n                  onValueChange={(value) => handleInputChange('loanAmount', value[0])}\n                />\n                <div className=\"flex justify-between text-xs text-gray-500\">\n                  <span>$100k</span>\n                  <span>$500k</span>\n                  <span>$1M+</span>\n                </div>\n              </div>\n              \n              <div className=\"space-y-3\">\n                <Label>Special Eligibility</Label>\n                <div className=\"space-y-2\">\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox \n                      id=\"isFirstTimeBuyer\" \n                      checked={formState.isFirstTimeBuyer}\n                      onCheckedChange={(checked) => handleInputChange('isFirstTimeBuyer', Boolean(checked))}\n                    />\n                    <Label htmlFor=\"isFirstTimeBuyer\">First-Time Homebuyer</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox \n                      id=\"isVeteran\" \n                      checked={formState.isVeteran}\n                      onCheckedChange={(checked) => handleInputChange('isVeteran', Boolean(checked))}\n                    />\n                    <Label htmlFor=\"isVeteran\">Military/Veteran Status</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <Checkbox \n                      id=\"isRural\" \n                      checked={formState.isRural}\n                      onCheckedChange={(checked) => handleInputChange('isRural', Boolean(checked))}\n                    />\n                    <Label htmlFor=\"isRural\">Rural Property Location</Label>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n            <CardFooter>\n              <Button \n                className=\"w-full\" \n                onClick={findMatchingPrograms}\n                disabled={isSearching}\n              >\n                {isSearching ? 'Searching...' : 'Find Matching Programs'}\n              </Button>\n            </CardFooter>\n          </Card>\n          \n          {/* Saved Programs */}\n          {savedPrograms.length > 0 && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg flex items-center\">\n                  <CheckCircle className=\"mr-2 h-5 w-5 text-primary\" />\n                  Saved Programs ({savedPrograms.length})\n                </CardTitle>\n              </CardHeader>\n              <CardContent>\n                <ul className=\"space-y-2\">\n                  {savedPrograms.map(program => (\n                    <li key={program.id} className=\"flex items-center justify-between p-2 border rounded-md hover:bg-gray-50\">\n                      <div className=\"flex items-center\">\n                        <Badge className=\"mr-2\" variant={\n                          program.type === 'conventional' ? 'default' :\n                          program.type === 'fha' ? 'secondary' :\n                          program.type === 'va' ? 'destructive' :\n                          program.type === 'usda' ? 'outline' :\n                          'default'\n                        }>\n                          {program.type.toUpperCase()}\n                        </Badge>\n                        <span>{program.name}</span>\n                      </div>\n                      <Button \n                        variant=\"ghost\" \n                        size=\"sm\"\n                        onClick={() => toggleSaveProgram(program)}\n                      >\n                        <X className=\"h-4 w-4\" />\n                      </Button>\n                    </li>\n                  ))}\n                </ul>\n              </CardContent>\n              <CardFooter>\n                <Button variant=\"outline\" className=\"w-full\">\n                  Export Saved Programs\n                </Button>\n              </CardFooter>\n            </Card>\n          )}\n        </div>\n        \n        {/* Results Area */}\n        <div className=\"md:col-span-2\">\n          {isSearching ? (\n            <Card>\n              <CardContent className=\"py-8\">\n                <div className=\"flex flex-col items-center justify-center\">\n                  <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n                  <p className=\"mt-4 text-center text-gray-500\">Searching for matching loan programs...</p>\n                </div>\n              </CardContent>\n            </Card>\n          ) : hasSearched ? (\n            <>\n              {matchingPrograms.length > 0 ? (\n                <div>\n                  <div className=\"flex justify-between items-center mb-4\">\n                    <h2 className=\"text-xl font-semibold\">\n                      Matching Programs ({matchingPrograms.length})\n                    </h2>\n                    <Button variant=\"outline\" size=\"sm\">\n                      <Filter className=\"h-4 w-4 mr-1\" /> Filter Results\n                    </Button>\n                  </div>\n                  \n                  {matchingPrograms.map(program => renderProgramCard(program))}\n                </div>\n              ) : (\n                <Card className=\"p-8 text-center\">\n                  <div className=\"mx-auto w-12 h-12 rounded-full bg-gray-100 flex items-center justify-center mb-4\">\n                    <AlertCircle className=\"h-6 w-6 text-gray-400\" />\n                  </div>\n                  <h3 className=\"text-lg font-medium\">No Matching Programs</h3>\n                  <p className=\"text-gray-500 max-w-md mx-auto mt-2\">\n                    We couldn't find any loan programs matching your criteria. Try adjusting your search parameters or speak with a loan officer for custom options.\n                  </p>\n                  <div className=\"mt-4\">\n                    <Button onClick={findMatchingPrograms}>\n                      Try Again\n                    </Button>\n                  </div>\n                </Card>\n              )}\n            </>\n          ) : (\n            <Card className=\"p-8 text-center\">\n              <div className=\"mx-auto w-12 h-12 rounded-full bg-gray-100 flex items-center justify-center mb-4\">\n                <InfoIcon className=\"h-6 w-6 text-gray-400\" />\n              </div>\n              <h3 className=\"text-lg font-medium\">Find Your Ideal Loan Program</h3>\n              <p className=\"text-gray-500 max-w-md mx-auto mt-2\">\n                Enter your client's details in the form to find matching loan programs. We'll show you the best options based on their specific situation.\n              </p>\n              <div className=\"mt-4\">\n                <Button onClick={findMatchingPrograms}>\n                  Find Matching Programs\n                </Button>\n              </div>\n            </Card>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoanProgramFinder;","import React, { useState } from 'react';\nimport { ArrowLeft, Database, Download, Calendar, FileText, Filter, Clock, Table, BarChart, User, Briefcase, FileDown, ChevronDown, AlertCircle, Plus } from 'lucide-react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Badge } from '@/components/ui/badge';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';\nimport { useToast } from '@/components/ui/use-toast';\nimport { Textarea } from '@/components/ui/textarea';\n\ninterface ExportField {\n  id: string;\n  name: string;\n  category: string;\n  selected: boolean;\n}\n\ninterface ExportHistory {\n  id: number;\n  name: string;\n  date: string;\n  type: string;\n  format: string;\n  size: string;\n  records: number;\n}\n\ninterface SavedReport {\n  id: number;\n  name: string;\n  description: string;\n  lastRun: string;\n  schedule: string | null;\n  fields: string[];\n  filters: string[];\n}\n\nconst DataExportTool: React.FC = () => {\n  const { toast } = useToast();\n  const [activeTab, setActiveTab] = useState<string>('new-export');\n  const [exportName, setExportName] = useState<string>('');\n  const [dateRange, setDateRange] = useState<string>('last-30-days');\n  const [exportFormat, setExportFormat] = useState<string>('csv');\n  const [selectedFields, setSelectedFields] = useState<string[]>([]);\n  const [isExporting, setIsExporting] = useState<boolean>(false);\n  const [showSaveModal, setShowSaveModal] = useState<boolean>(false);\n  const [saveReportName, setSaveReportName] = useState<string>('');\n  const [saveReportDescription, setSaveReportDescription] = useState<string>('');\n  \n  // Available export fields\n  const availableFields: ExportField[] = [\n    // Loan Information\n    { id: 'loan_number', name: 'Loan Number', category: 'loan', selected: true },\n    { id: 'loan_amount', name: 'Loan Amount', category: 'loan', selected: true },\n    { id: 'loan_type', name: 'Loan Type', category: 'loan', selected: true },\n    { id: 'loan_purpose', name: 'Loan Purpose', category: 'loan', selected: true },\n    { id: 'loan_term', name: 'Loan Term', category: 'loan', selected: false },\n    { id: 'interest_rate', name: 'Interest Rate', category: 'loan', selected: true },\n    { id: 'status', name: 'Loan Status', category: 'loan', selected: true },\n    { id: 'application_date', name: 'Application Date', category: 'loan', selected: true },\n    { id: 'closing_date', name: 'Closing Date', category: 'loan', selected: false },\n    { id: 'funding_date', name: 'Funding Date', category: 'loan', selected: false },\n    \n    // Borrower Information\n    { id: 'borrower_name', name: 'Borrower Name', category: 'borrower', selected: true },\n    { id: 'borrower_email', name: 'Borrower Email', category: 'borrower', selected: false },\n    { id: 'borrower_phone', name: 'Borrower Phone', category: 'borrower', selected: false },\n    { id: 'borrower_address', name: 'Borrower Address', category: 'borrower', selected: false },\n    { id: 'borrower_credit_score', name: 'Credit Score', category: 'borrower', selected: true },\n    { id: 'borrower_income', name: 'Annual Income', category: 'borrower', selected: false },\n    { id: 'borrower_dti', name: 'Debt-to-Income Ratio', category: 'borrower', selected: false },\n    \n    // Property Information\n    { id: 'property_address', name: 'Property Address', category: 'property', selected: true },\n    { id: 'property_city', name: 'Property City', category: 'property', selected: true },\n    { id: 'property_state', name: 'Property State', category: 'property', selected: true },\n    { id: 'property_zip', name: 'Property ZIP', category: 'property', selected: true },\n    { id: 'property_type', name: 'Property Type', category: 'property', selected: false },\n    { id: 'property_value', name: 'Property Value', category: 'property', selected: true },\n    \n    // Loan Officer Information\n    { id: 'lo_name', name: 'Loan Officer Name', category: 'loan_officer', selected: true },\n    { id: 'lo_email', name: 'Loan Officer Email', category: 'loan_officer', selected: false },\n    { id: 'lo_phone', name: 'Loan Officer Phone', category: 'loan_officer', selected: false },\n    { id: 'lo_nmls', name: 'Loan Officer NMLS ID', category: 'loan_officer', selected: false },\n    \n    // Commission & Revenue\n    { id: 'loan_fee', name: 'Loan Origination Fee', category: 'revenue', selected: false },\n    { id: 'commission', name: 'Commission Amount', category: 'revenue', selected: false },\n    { id: 'revenue', name: 'Total Revenue', category: 'revenue', selected: false },\n    { id: 'profit_margin', name: 'Profit Margin', category: 'revenue', selected: false },\n  ];\n  \n  // Export history\n  const exportHistory: ExportHistory[] = [\n    {\n      id: 1,\n      name: 'Q2 Loan Production',\n      date: '2023-07-01',\n      type: 'Loan Data',\n      format: 'CSV',\n      size: '1.2 MB',\n      records: 43\n    },\n    {\n      id: 2,\n      name: 'June Pipeline Report',\n      date: '2023-07-01',\n      type: 'Pipeline Data',\n      format: 'XLSX',\n      size: '896 KB',\n      records: 28\n    },\n    {\n      id: 3,\n      name: 'Revenue Analysis',\n      date: '2023-06-15',\n      type: 'Revenue Data',\n      format: 'CSV',\n      size: '455 KB',\n      records: 72\n    },\n    {\n      id: 4,\n      name: 'Team Performance',\n      date: '2023-06-01',\n      type: 'Performance Data',\n      format: 'XLSX',\n      size: '1.7 MB',\n      records: 65\n    },\n  ];\n  \n  // Saved reports\n  const savedReports: SavedReport[] = [\n    {\n      id: 1,\n      name: 'Monthly Pipeline Report',\n      description: 'All active loans with status and borrower details',\n      lastRun: '2023-07-01',\n      schedule: 'Monthly (1st)',\n      fields: ['loan_number', 'loan_amount', 'status', 'borrower_name', 'property_address', 'lo_name'],\n      filters: ['Status: Active', 'Application Date: Last 90 days']\n    },\n    {\n      id: 2,\n      name: 'Quarterly Revenue Analysis',\n      description: 'Detailed revenue breakdown by loan officer',\n      lastRun: '2023-06-30',\n      schedule: 'Quarterly',\n      fields: ['loan_number', 'loan_amount', 'closing_date', 'lo_name', 'commission', 'revenue', 'profit_margin'],\n      filters: ['Status: Closed', 'Closing Date: Current Quarter']\n    },\n    {\n      id: 3,\n      name: 'Team Performance Report',\n      description: 'Performance metrics for all loan officers',\n      lastRun: '2023-06-15',\n      schedule: null,\n      fields: ['lo_name', 'lo_nmls', 'loan_number', 'loan_amount', 'status', 'application_date', 'closing_date'],\n      filters: ['Status: Any', 'Application Date: Year to Date']\n    }\n  ];\n  \n  // Get field categories\n  const fieldCategories = [...new Set(availableFields.map(field => field.category))];\n  \n  // Toggle field selection\n  const toggleField = (fieldId: string) => {\n    if (selectedFields.includes(fieldId)) {\n      setSelectedFields(selectedFields.filter(id => id !== fieldId));\n    } else {\n      setSelectedFields([...selectedFields, fieldId]);\n    }\n  };\n  \n  // Toggle all fields in a category\n  const toggleCategory = (category: string, selected: boolean) => {\n    const categoryFieldIds = availableFields\n      .filter(field => field.category === category)\n      .map(field => field.id);\n    \n    if (selected) {\n      // Add all fields from this category that aren't already selected\n      const fieldsToAdd = categoryFieldIds.filter(id => !selectedFields.includes(id));\n      setSelectedFields([...selectedFields, ...fieldsToAdd]);\n    } else {\n      // Remove all fields from this category\n      setSelectedFields(selectedFields.filter(id => !categoryFieldIds.includes(id)));\n    }\n  };\n  \n  // Check if all fields in a category are selected\n  const isCategorySelected = (category: string): boolean => {\n    const categoryFieldIds = availableFields\n      .filter(field => field.category === category)\n      .map(field => field.id);\n    \n    return categoryFieldIds.every(id => selectedFields.includes(id));\n  };\n  \n  // Check if some fields in a category are selected\n  const isCategoryPartiallySelected = (category: string): boolean => {\n    const categoryFieldIds = availableFields\n      .filter(field => field.category === category)\n      .map(field => field.id);\n    \n    const someSelected = categoryFieldIds.some(id => selectedFields.includes(id));\n    const allSelected = categoryFieldIds.every(id => selectedFields.includes(id));\n    \n    return someSelected && !allSelected;\n  };\n  \n  // Handle export\n  const handleExport = () => {\n    if (!exportName.trim()) {\n      toast({\n        title: \"Export Name Required\",\n        description: \"Please provide a name for your export\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    \n    if (selectedFields.length === 0) {\n      toast({\n        title: \"No Fields Selected\",\n        description: \"Please select at least one field to export\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    \n    setIsExporting(true);\n    \n    // Simulate export process\n    setTimeout(() => {\n      setIsExporting(false);\n      \n      toast({\n        title: \"Export Successful\",\n        description: `Your export \"${exportName}\" has been generated and is ready to download.`,\n      });\n      \n      // Optionally show save report modal\n      setShowSaveModal(true);\n    }, 2000);\n  };\n  \n  // Format category name for display\n  const formatCategoryName = (category: string): string => {\n    return category\n      .split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(' ');\n  };\n  \n  // Handle save report\n  const handleSaveReport = () => {\n    if (!saveReportName.trim()) {\n      toast({\n        title: \"Report Name Required\",\n        description: \"Please provide a name for the saved report\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    \n    // In a real app, this would save the report to the backend\n    toast({\n      title: \"Report Saved\",\n      description: `Your report \"${saveReportName}\" has been saved and can be accessed from the Saved Reports tab.`,\n    });\n    \n    setShowSaveModal(false);\n    setSaveReportName('');\n    setSaveReportDescription('');\n  };\n  \n  // Run a saved report\n  const runSavedReport = (reportId: number) => {\n    const report = savedReports.find(r => r.id === reportId);\n    \n    if (!report) return;\n    \n    toast({\n      title: \"Running Report\",\n      description: `Generating \"${report.name}\" report...`,\n    });\n    \n    // In a real app, this would run the report with the saved settings\n    setTimeout(() => {\n      toast({\n        title: \"Report Generated\",\n        description: `Your report \"${report.name}\" has been generated and is ready to download.`,\n      });\n    }, 2000);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center space-x-2\">\n        <Button variant=\"ghost\" size=\"sm\" asChild>\n          <Link to=\"/tools\">\n            <ArrowLeft className=\"h-4 w-4 mr-1\" /> Back to Tools\n          </Link>\n        </Button>\n      </div>\n\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight\">Data Export Tool</h1>\n        <p className=\"text-gray-500\">Export loan data and generate reports for analysis</p>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"w-full\">\n        <TabsList className=\"grid w-full grid-cols-3\">\n          <TabsTrigger value=\"new-export\">New Export</TabsTrigger>\n          <TabsTrigger value=\"saved-reports\">Saved Reports</TabsTrigger>\n          <TabsTrigger value=\"export-history\">Export History</TabsTrigger>\n        </TabsList>\n        \n        {/* New Export Tab */}\n        <TabsContent value=\"new-export\" className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {/* Export Settings */}\n            <Card className=\"md:col-span-1\">\n              <CardHeader>\n                <CardTitle className=\"text-lg flex items-center\">\n                  <FileDown className=\"mr-2 h-5 w-5 text-primary\" />\n                  Export Settings\n                </CardTitle>\n                <CardDescription>\n                  Configure your data export options\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"exportName\">Export Name</Label>\n                  <Input\n                    id=\"exportName\"\n                    placeholder=\"e.g., June 2023 Loan Pipeline\"\n                    value={exportName}\n                    onChange={(e) => setExportName(e.target.value)}\n                  />\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"dateRange\">Date Range</Label>\n                  <Select \n                    value={dateRange} \n                    onValueChange={setDateRange}\n                  >\n                    <SelectTrigger id=\"dateRange\">\n                      <SelectValue placeholder=\"Select date range\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"last-7-days\">Last 7 Days</SelectItem>\n                      <SelectItem value=\"last-30-days\">Last 30 Days</SelectItem>\n                      <SelectItem value=\"current-month\">Current Month</SelectItem>\n                      <SelectItem value=\"previous-month\">Previous Month</SelectItem>\n                      <SelectItem value=\"current-quarter\">Current Quarter</SelectItem>\n                      <SelectItem value=\"year-to-date\">Year to Date</SelectItem>\n                      <SelectItem value=\"custom\">Custom Range</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                {dateRange === 'custom' && (\n                  <div className=\"grid grid-cols-2 gap-2\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"startDate\">Start Date</Label>\n                      <Input id=\"startDate\" type=\"date\" />\n                    </div>\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"endDate\">End Date</Label>\n                      <Input id=\"endDate\" type=\"date\" />\n                    </div>\n                  </div>\n                )}\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"exportFormat\">Export Format</Label>\n                  <Select \n                    value={exportFormat} \n                    onValueChange={setExportFormat}\n                  >\n                    <SelectTrigger id=\"exportFormat\">\n                      <SelectValue placeholder=\"Select export format\" />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"csv\">CSV (Comma Separated Values)</SelectItem>\n                      <SelectItem value=\"xlsx\">XLSX (Excel)</SelectItem>\n                      <SelectItem value=\"pdf\">PDF (Portable Document Format)</SelectItem>\n                      <SelectItem value=\"json\">JSON (JavaScript Object Notation)</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n                \n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"exportFilters\">Filters (Optional)</Label>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Select defaultValue=\"status\">\n                        <SelectTrigger className=\"w-full\">\n                          <SelectValue placeholder=\"Select filter field\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"status\">Loan Status</SelectItem>\n                          <SelectItem value=\"loan_type\">Loan Type</SelectItem>\n                          <SelectItem value=\"loan_amount\">Loan Amount</SelectItem>\n                          <SelectItem value=\"loan_officer\">Loan Officer</SelectItem>\n                        </SelectContent>\n                      </Select>\n                      \n                      <Select defaultValue=\"equals\">\n                        <SelectTrigger className=\"w-full\">\n                          <SelectValue placeholder=\"Condition\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"equals\">Equals</SelectItem>\n                          <SelectItem value=\"contains\">Contains</SelectItem>\n                          <SelectItem value=\"greater_than\">Greater Than</SelectItem>\n                          <SelectItem value=\"less_than\">Less Than</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n                    \n                    <Input placeholder=\"Filter value\" defaultValue=\"Active\" />\n                    \n                    <Button variant=\"outline\" size=\"sm\" className=\"w-full\">\n                      <Plus className=\"h-4 w-4 mr-1\" /> Add Another Filter\n                    </Button>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n            \n            {/* Field Selection */}\n            <Card className=\"md:col-span-2\">\n              <CardHeader>\n                <CardTitle className=\"text-lg flex items-center\">\n                  <Table className=\"mr-2 h-5 w-5 text-primary\" />\n                  Field Selection\n                </CardTitle>\n                <CardDescription>\n                  Select the fields to include in your export\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"flex justify-between items-center\">\n                  <p className=\"text-sm text-muted-foreground\">\n                    Selected {selectedFields.length} of {availableFields.length} fields\n                  </p>\n                  <div className=\"space-x-2\">\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\"\n                      onClick={() => setSelectedFields(availableFields.map(f => f.id))}\n                    >\n                      Select All\n                    </Button>\n                    <Button \n                      variant=\"outline\" \n                      size=\"sm\"\n                      onClick={() => setSelectedFields([])}\n                    >\n                      Clear All\n                    </Button>\n                  </div>\n                </div>\n                \n                <Accordion type=\"multiple\" className=\"w-full\" defaultValue={fieldCategories}>\n                  {fieldCategories.map((category) => {\n                    const isAllSelected = isCategorySelected(category);\n                    const isPartiallySelected = isCategoryPartiallySelected(category);\n                    \n                    return (\n                      <AccordionItem value={category} key={category}>\n                        <AccordionTrigger className=\"hover:no-underline\">\n                          <div className=\"flex items-center space-x-2\">\n                            <Checkbox \n                              checked={isAllSelected}\n                              indeterminate={isPartiallySelected}\n                              onCheckedChange={(checked) => toggleCategory(category, !!checked)}\n                              id={`category-${category}`}\n                            />\n                            <Label \n                              htmlFor={`category-${category}`}\n                              className=\"cursor-pointer text-base font-medium\"\n                              onClick={(e) => e.stopPropagation()}\n                            >\n                              {formatCategoryName(category)}\n                            </Label>\n                          </div>\n                        </AccordionTrigger>\n                        <AccordionContent>\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 pl-6 pt-2\">\n                            {availableFields\n                              .filter(field => field.category === category)\n                              .map(field => (\n                                <div className=\"flex items-center space-x-2\" key={field.id}>\n                                  <Checkbox \n                                    id={field.id}\n                                    checked={selectedFields.includes(field.id)}\n                                    onCheckedChange={() => toggleField(field.id)}\n                                  />\n                                  <Label \n                                    htmlFor={field.id}\n                                    className=\"cursor-pointer\"\n                                  >\n                                    {field.name}\n                                  </Label>\n                                </div>\n                              ))\n                            }\n                          </div>\n                        </AccordionContent>\n                      </AccordionItem>\n                    );\n                  })}\n                </Accordion>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\">Preview Data</Button>\n                <Button \n                  onClick={handleExport}\n                  disabled={isExporting}\n                >\n                  {isExporting ? (\n                    <>\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                      Exporting...\n                    </>\n                  ) : (\n                    <>\n                      <Download className=\"mr-2 h-4 w-4\" /> Generate Export\n                    </>\n                  )}\n                </Button>\n              </CardFooter>\n            </Card>\n          </div>\n          \n          {/* Sample Data Preview */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Database className=\"mr-2 h-5 w-5 text-primary\" />\n                Sample Data Preview\n              </CardTitle>\n              <CardDescription>\n                Preview of the data that will be included in your export\n              </CardDescription>\n            </CardHeader>\n            <CardContent className=\"p-0\">\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm\">\n                  <thead>\n                    <tr className=\"bg-gray-100\">\n                      <th className=\"px-4 py-2 text-left\">Loan #</th>\n                      <th className=\"px-4 py-2 text-left\">Loan Amount</th>\n                      <th className=\"px-4 py-2 text-left\">Status</th>\n                      <th className=\"px-4 py-2 text-left\">Borrower</th>\n                      <th className=\"px-4 py-2 text-left\">Property Address</th>\n                      <th className=\"px-4 py-2 text-left\">Loan Officer</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr className=\"border-t\">\n                      <td className=\"px-4 py-2\">LN-2023-10405</td>\n                      <td className=\"px-4 py-2\">$425,000</td>\n                      <td className=\"px-4 py-2\">\n                        <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\n                          Active\n                        </Badge>\n                      </td>\n                      <td className=\"px-4 py-2\">John Smith</td>\n                      <td className=\"px-4 py-2\">123 Main St, Springfield IL</td>\n                      <td className=\"px-4 py-2\">Sarah Johnson</td>\n                    </tr>\n                    <tr className=\"border-t\">\n                      <td className=\"px-4 py-2\">LN-2023-10392</td>\n                      <td className=\"px-4 py-2\">$380,000</td>\n                      <td className=\"px-4 py-2\">\n                        <Badge variant=\"outline\" className=\"bg-blue-50 text-blue-700 border-blue-200\">\n                          Processing\n                        </Badge>\n                      </td>\n                      <td className=\"px-4 py-2\">Maria Garcia</td>\n                      <td className=\"px-4 py-2\">456 Oak Ave, Springfield IL</td>\n                      <td className=\"px-4 py-2\">Robert Chen</td>\n                    </tr>\n                    <tr className=\"border-t\">\n                      <td className=\"px-4 py-2\">LN-2023-10385</td>\n                      <td className=\"px-4 py-2\">$520,000</td>\n                      <td className=\"px-4 py-2\">\n                        <Badge variant=\"outline\" className=\"bg-purple-50 text-purple-700 border-purple-200\">\n                          Underwriting\n                        </Badge>\n                      </td>\n                      <td className=\"px-4 py-2\">David Lee</td>\n                      <td className=\"px-4 py-2\">789 Elm St, Springfield IL</td>\n                      <td className=\"px-4 py-2\">Sarah Johnson</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n              <div className=\"p-4 text-center text-sm text-muted-foreground\">\n                Showing 3 of 45 records matching your criteria\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Saved Reports Tab */}\n        <TabsContent value=\"saved-reports\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex justify-between items-center\">\n                <CardTitle className=\"text-lg flex items-center\">\n                  <FileText className=\"mr-2 h-5 w-5 text-primary\" />\n                  Saved Reports\n                </CardTitle>\n                <Button variant=\"outline\" size=\"sm\">\n                  <Plus className=\"h-4 w-4 mr-1\" /> Create Report\n                </Button>\n              </div>\n              <CardDescription>\n                Run saved reports or manage your report templates\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {savedReports.map((report) => (\n                  <Card key={report.id}>\n                    <CardHeader className=\"pb-2\">\n                      <div className=\"flex justify-between items-start\">\n                        <div>\n                          <CardTitle className=\"text-base\">{report.name}</CardTitle>\n                          <CardDescription className=\"mt-1\">{report.description}</CardDescription>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          {report.schedule && (\n                            <Badge variant=\"outline\" className=\"flex items-center\">\n                              <Clock className=\"h-3 w-3 mr-1\" />\n                              {report.schedule}\n                            </Badge>\n                          )}\n                        </div>\n                      </div>\n                    </CardHeader>\n                    <CardContent className=\"pb-2 pt-0\">\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                        <div>\n                          <div className=\"text-muted-foreground mb-1\">Selected Fields:</div>\n                          <div className=\"flex flex-wrap gap-1\">\n                            {report.fields.map((field, idx) => (\n                              <Badge key={idx} variant=\"secondary\" className=\"text-xs\">\n                                {availableFields.find(f => f.id === field)?.name || field}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                        <div>\n                          <div className=\"text-muted-foreground mb-1\">Applied Filters:</div>\n                          <div className=\"flex flex-wrap gap-1\">\n                            {report.filters.map((filter, idx) => (\n                              <Badge key={idx} variant=\"outline\" className=\"text-xs\">\n                                {filter}\n                              </Badge>\n                            ))}\n                          </div>\n                        </div>\n                      </div>\n                    </CardContent>\n                    <CardFooter className=\"pt-2\">\n                      <div className=\"flex justify-between items-center w-full\">\n                        <div className=\"text-xs text-muted-foreground\">\n                          Last run: {report.lastRun}\n                        </div>\n                        <div className=\"flex gap-2\">\n                          <Button variant=\"outline\" size=\"sm\">\n                            <FileText className=\"h-4 w-4 mr-1\" /> Edit\n                          </Button>\n                          <Button size=\"sm\" onClick={() => runSavedReport(report.id)}>\n                            <Download className=\"h-4 w-4 mr-1\" /> Run Report\n                          </Button>\n                        </div>\n                      </div>\n                    </CardFooter>\n                  </Card>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n        \n        {/* Export History Tab */}\n        <TabsContent value=\"export-history\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <Clock className=\"mr-2 h-5 w-5 text-primary\" />\n                Export History\n              </CardTitle>\n              <CardDescription>\n                View and download your previous exports\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full\">\n                  <thead>\n                    <tr className=\"text-left text-xs border-b\">\n                      <th className=\"py-3 px-4 font-medium\">Name</th>\n                      <th className=\"py-3 px-4 font-medium\">Date</th>\n                      <th className=\"py-3 px-4 font-medium\">Type</th>\n                      <th className=\"py-3 px-4 font-medium\">Format</th>\n                      <th className=\"py-3 px-4 font-medium\">Size</th>\n                      <th className=\"py-3 px-4 font-medium\">Records</th>\n                      <th className=\"py-3 px-4 font-medium\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {exportHistory.map((export_item) => (\n                      <tr key={export_item.id} className=\"border-b hover:bg-gray-50\">\n                        <td className=\"py-3 px-4\">{export_item.name}</td>\n                        <td className=\"py-3 px-4\">{export_item.date}</td>\n                        <td className=\"py-3 px-4\">{export_item.type}</td>\n                        <td className=\"py-3 px-4\">\n                          <Badge variant=\"outline\">\n                            {export_item.format}\n                          </Badge>\n                        </td>\n                        <td className=\"py-3 px-4\">{export_item.size}</td>\n                        <td className=\"py-3 px-4\">{export_item.records}</td>\n                        <td className=\"py-3 px-4\">\n                          <Button variant=\"ghost\" size=\"sm\">\n                            <Download className=\"h-4 w-4 mr-1\" /> Download\n                          </Button>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg flex items-center\">\n                <BarChart className=\"mr-2 h-5 w-5 text-primary\" />\n                Export Analytics\n              </CardTitle>\n              <CardDescription>\n                Analytics on your export usage\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <div className=\"p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"text-sm text-gray-500 mb-1\">Total Exports</div>\n                  <div className=\"text-2xl font-bold\">24</div>\n                  <div className=\"text-xs text-green-600 mt-1\">+12% from last month</div>\n                </div>\n                <div className=\"p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"text-sm text-gray-500 mb-1\">Most Exported Fields</div>\n                  <div className=\"text-base font-medium\">Loan Amount, Status, LO Name</div>\n                  <div className=\"text-xs text-gray-500 mt-1\">Used in 87% of exports</div>\n                </div>\n                <div className=\"p-4 bg-gray-50 rounded-lg\">\n                  <div className=\"text-sm text-gray-500 mb-1\">Popular Export Format</div>\n                  <div className=\"text-base font-medium\">XLSX (Excel)</div>\n                  <div className=\"text-xs text-gray-500 mt-1\">Used in 65% of exports</div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n      \n      {/* Save Report Modal */}\n      {showSaveModal && (\n        <div className=\"fixed inset-0 bg-black/30 flex items-center justify-center z-50\">\n          <div className=\"bg-white rounded-lg w-full max-w-md p-6\">\n            <h3 className=\"text-lg font-semibold mb-4\">Save Report Template</h3>\n            <div className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"saveReportName\">Report Name</Label>\n                <Input\n                  id=\"saveReportName\"\n                  placeholder=\"e.g., Monthly Pipeline Report\"\n                  value={saveReportName}\n                  onChange={(e) => setSaveReportName(e.target.value)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"saveReportDescription\">Description (Optional)</Label>\n                <Textarea\n                  id=\"saveReportDescription\"\n                  placeholder=\"What does this report show?\"\n                  value={saveReportDescription}\n                  onChange={(e) => setSaveReportDescription(e.target.value)}\n                />\n              </div>\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"scheduleReport\">Schedule (Optional)</Label>\n                <Select>\n                  <SelectTrigger>\n                    <SelectValue placeholder=\"Never (Run Manually)\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"never\">Never (Run Manually)</SelectItem>\n                    <SelectItem value=\"daily\">Daily</SelectItem>\n                    <SelectItem value=\"weekly\">Weekly</SelectItem>\n                    <SelectItem value=\"monthly\">Monthly</SelectItem>\n                    <SelectItem value=\"quarterly\">Quarterly</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n            <div className=\"flex justify-end space-x-2 mt-6\">\n              <Button \n                variant=\"outline\" \n                onClick={() => setShowSaveModal(false)}\n              >\n                Cancel\n              </Button>\n              <Button onClick={handleSaveReport}>\n                Save Report\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataExportTool;","import React, { useState, ChangeEvent, FormEvent } from 'react';\nimport { \n  User, \n  Lock, \n  Bell, \n  Globe, \n  Shield, \n  HelpCircle, \n  Save,\n  Moon,\n  Sun\n} from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '../../components/ui/card';\nimport { Button } from '../../components/ui/button';\nimport { Input } from '../../components/ui/input';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { USER_ROLES } from '../../contexts/AuthContext';\n\ninterface FormState {\n  name: string;\n  email: string;\n  notifyUpdates: boolean;\n  notifyEvents: boolean;\n  language: string;\n  sessionTimeout: string;\n}\n\ninterface TabType {\n  id: string;\n  name: string;\n  icon: React.FC<{ className?: string }>;\n}\n\nconst Settings: React.FC = () => {\n  const { currentUser, isAdmin } = useAuth();\n  const [activeTab, setActiveTab] = useState<string>('profile');\n  const [darkMode, setDarkMode] = useState<boolean>(false);\n  const [formState, setFormState] = useState<FormState>({\n    name: currentUser?.name || '',\n    email: currentUser?.email || '',\n    notifyUpdates: true,\n    notifyEvents: false,\n    language: 'en',\n    sessionTimeout: '30',\n  });\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\n    const { name, value, type, checked } = e.target;\n    setFormState(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n\n  const handleSave = (e: FormEvent) => {\n    e.preventDefault();\n    // In a real app, this would save to a backend\n    console.log('Saving settings:', formState);\n    // Show success message or toast notification\n  };\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n    // In a real app, this would toggle dark mode in the app\n    // document.documentElement.classList.toggle('dark');\n  };\n\n  const tabs: TabType[] = [\n    { id: 'profile', name: 'Profile', icon: User },\n    { id: 'security', name: 'Security', icon: Shield },\n    { id: 'notifications', name: 'Notifications', icon: Bell },\n    { id: 'appearance', name: 'Appearance', icon: Moon },\n  ];\n  \n  // Admin-only tabs\n  if (isAdmin()) {\n    tabs.push({ id: 'advanced', name: 'Advanced Settings', icon: Lock });\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h1 className=\"text-2xl font-bold tracking-tight\">Settings</h1>\n        <p className=\"text-gray-500\">Manage your account preferences and settings</p>\n      </div>\n\n      <div className=\"flex flex-col md:flex-row gap-6\">\n        {/* Settings tabs */}\n        <Card className=\"md:w-64 shrink-0\">\n          <CardContent className=\"p-0\">\n            <nav className=\"flex flex-col space-y-1 p-1\">\n              {tabs.map((tab) => (\n                <button\n                  key={tab.id}\n                  className={`flex items-center rounded-md px-3 py-2 text-sm font-medium hover:bg-accent ${\n                    activeTab === tab.id\n                      ? 'bg-accent text-accent-foreground'\n                      : 'text-muted-foreground'\n                  }`}\n                  onClick={() => setActiveTab(tab.id)}\n                >\n                  <tab.icon className=\"mr-2 h-4 w-4\" />\n                  {tab.name}\n                </button>\n              ))}\n            </nav>\n          </CardContent>\n        </Card>\n\n        {/* Settings content */}\n        <Card className=\"flex-1\">\n          {activeTab === 'profile' && (\n            <>\n              <CardHeader>\n                <CardTitle>Profile Settings</CardTitle>\n                <CardDescription>\n                  Update your personal information and preferences\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form onSubmit={handleSave} className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"name\" className=\"text-sm font-medium\">\n                      Full Name\n                    </label>\n                    <Input\n                      id=\"name\"\n                      name=\"name\"\n                      value={formState.name}\n                      onChange={handleInputChange}\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"email\" className=\"text-sm font-medium\">\n                      Email Address\n                    </label>\n                    <Input\n                      id=\"email\"\n                      name=\"email\"\n                      type=\"email\"\n                      value={formState.email}\n                      onChange={handleInputChange}\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"role\" className=\"text-sm font-medium\">\n                      Role\n                    </label>\n                    <Input\n                      id=\"role\"\n                      value={currentUser?.role}\n                      disabled\n                      className=\"bg-gray-50\"\n                    />\n                    <p className=\"text-xs text-gray-500\">\n                      Your role determines your permissions in the system. Contact an admin to change.\n                    </p>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"language\" className=\"text-sm font-medium\">\n                      Language\n                    </label>\n                    <select\n                      id=\"language\"\n                      name=\"language\"\n                      className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                      value={formState.language}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"en\">English</option>\n                      <option value=\"es\">Spanish</option>\n                      <option value=\"fr\">French</option>\n                    </select>\n                  </div>\n                </form>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\">Cancel</Button>\n                <Button onClick={handleSave}>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Save Changes\n                </Button>\n              </CardFooter>\n            </>\n          )}\n\n          {activeTab === 'security' && (\n            <>\n              <CardHeader>\n                <CardTitle>Security Settings</CardTitle>\n                <CardDescription>\n                  Manage your password and security preferences\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"current-password\" className=\"text-sm font-medium\">\n                      Current Password\n                    </label>\n                    <Input\n                      id=\"current-password\"\n                      type=\"password\"\n                      placeholder=\"Enter your current password\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"new-password\" className=\"text-sm font-medium\">\n                      New Password\n                    </label>\n                    <Input\n                      id=\"new-password\"\n                      type=\"password\"\n                      placeholder=\"Enter a new password\"\n                    />\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"confirm-password\" className=\"text-sm font-medium\">\n                      Confirm New Password\n                    </label>\n                    <Input\n                      id=\"confirm-password\"\n                      type=\"password\"\n                      placeholder=\"Confirm your new password\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label htmlFor=\"session-timeout\" className=\"text-sm font-medium\">\n                      Session Timeout (minutes)\n                    </label>\n                    <select\n                      id=\"session-timeout\"\n                      name=\"sessionTimeout\"\n                      className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                      value={formState.sessionTimeout}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"15\">15 minutes</option>\n                      <option value=\"30\">30 minutes</option>\n                      <option value=\"60\">60 minutes</option>\n                      <option value=\"120\">2 hours</option>\n                    </select>\n                    <p className=\"text-xs text-gray-500\">\n                      You will be automatically logged out after this period of inactivity.\n                    </p>\n                  </div>\n                </form>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\">Cancel</Button>\n                <Button onClick={handleSave}>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Save Changes\n                </Button>\n              </CardFooter>\n            </>\n          )}\n\n          {activeTab === 'notifications' && (\n            <>\n              <CardHeader>\n                <CardTitle>Notification Preferences</CardTitle>\n                <CardDescription>\n                  Control how and when you receive notifications\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <form className=\"space-y-4\">\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center space-x-2\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"notify-updates\"\n                        name=\"notifyUpdates\"\n                        checked={formState.notifyUpdates}\n                        onChange={handleInputChange}\n                        className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\n                      />\n                      <label htmlFor=\"notify-updates\" className=\"text-sm font-medium\">\n                        Notify me about SOP and script updates\n                      </label>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"notify-events\"\n                        name=\"notifyEvents\"\n                        checked={formState.notifyEvents}\n                        onChange={handleInputChange}\n                        className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\n                      />\n                      <label htmlFor=\"notify-events\" className=\"text-sm font-medium\">\n                        Notify me about training events and webinars\n                      </label>\n                    </div>\n                    \n                    <div className=\"flex items-center space-x-2\">\n                      <input\n                        type=\"checkbox\"\n                        id=\"notify-email\"\n                        className=\"h-4 w-4 rounded border-gray-300 text-primary focus:ring-primary\"\n                      />\n                      <label htmlFor=\"notify-email\" className=\"text-sm font-medium\">\n                        Receive email notifications (in addition to in-app)\n                      </label>\n                    </div>\n                  </div>\n                </form>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\">Cancel</Button>\n                <Button onClick={handleSave}>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Save Changes\n                </Button>\n              </CardFooter>\n            </>\n          )}\n\n          {activeTab === 'appearance' && (\n            <>\n              <CardHeader>\n                <CardTitle>Appearance Settings</CardTitle>\n                <CardDescription>\n                  Customize the look and feel of the portal\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      {darkMode ? (\n                        <Moon className=\"h-5 w-5 text-blue-600\" />\n                      ) : (\n                        <Sun className=\"h-5 w-5 text-yellow-500\" />\n                      )}\n                      <span className=\"text-sm font-medium\">\n                        {darkMode ? 'Dark Mode' : 'Light Mode'}\n                      </span>\n                    </div>\n                    <div className=\"relative inline-flex h-6 w-11 flex-shrink-0 cursor-pointer rounded-full border-2 border-transparent transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-primary focus:ring-offset-2 bg-gray-200\"\n                      onClick={toggleDarkMode}\n                    >\n                      <span\n                        className={`${\n                          darkMode ? 'translate-x-5' : 'translate-x-0'\n                        } pointer-events-none inline-block h-5 w-5 transform rounded-full bg-white shadow ring-0 transition duration-200 ease-in-out`}\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium\">\n                      Font Size\n                    </label>\n                    <div className=\"flex items-center space-x-4\">\n                      <button className=\"px-3 py-1 text-sm border rounded-md\">Small</button>\n                      <button className=\"px-3 py-1 text-sm border rounded-md bg-primary text-white\">Medium</button>\n                      <button className=\"px-3 py-1 text-sm border rounded-md\">Large</button>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\">Reset to Defaults</Button>\n                <Button onClick={handleSave}>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Save Changes\n                </Button>\n              </CardFooter>\n            </>\n          )}\n\n          {activeTab === 'advanced' && isAdmin() && (\n            <>\n              <CardHeader>\n                <CardTitle>Advanced Settings</CardTitle>\n                <CardDescription>\n                  Admin-only settings for system configuration\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"bg-amber-50 border-l-4 border-amber-400 p-4\">\n                    <div className=\"flex\">\n                      <div className=\"flex-shrink-0\">\n                        <HelpCircle className=\"h-5 w-5 text-amber-400\" />\n                      </div>\n                      <div className=\"ml-3\">\n                        <p className=\"text-sm text-amber-700\">\n                          These settings affect all users in the system. Use with caution.\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium\">\n                      Content Protection Level\n                    </label>\n                    <select\n                      className=\"w-full h-10 pl-3 pr-10 py-2 text-sm border rounded-md focus:outline-none focus:ring-2 focus:ring-primary\"\n                    >\n                      <option value=\"basic\">Basic (Prevent Right-Click)</option>\n                      <option value=\"medium\">Medium (Disable Selection)</option>\n                      <option value=\"high\">High (Advanced Protection)</option>\n                    </select>\n                    <p className=\"text-xs text-gray-500\">\n                      Controls how strictly SOPs and scripts are protected from copying.\n                    </p>\n                  </div>\n                  \n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium\">\n                      Integration Settings\n                    </label>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center justify-between p-3 border rounded-md\">\n                        <div>\n                          <h4 className=\"font-medium\">Google Workspace</h4>\n                          <p className=\"text-xs text-gray-500\">Connect to Google Drive and Calendar</p>\n                        </div>\n                        <Button variant=\"outline\" size=\"sm\">Configure</Button>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between p-3 border rounded-md\">\n                        <div>\n                          <h4 className=\"font-medium\">Salesforce</h4>\n                          <p className=\"text-xs text-gray-500\">Sync with Salesforce CRM</p>\n                        </div>\n                        <Button variant=\"outline\" size=\"sm\">Configure</Button>\n                      </div>\n                      \n                      <div className=\"flex items-center justify-between p-3 border rounded-md\">\n                        <div>\n                          <h4 className=\"font-medium\">GoHighLevel</h4>\n                          <p className=\"text-xs text-gray-500\">Connect marketing automation</p>\n                        </div>\n                        <Button variant=\"outline\" size=\"sm\">Configure</Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n              <CardFooter className=\"flex justify-between\">\n                <Button variant=\"outline\">Cancel</Button>\n                <Button onClick={handleSave}>\n                  <Save className=\"mr-2 h-4 w-4\" />\n                  Save Changes\n                </Button>\n              </CardFooter>\n            </>\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;","import React, { ReactNode } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth, UserRole } from '../contexts/AuthContext';\n\ninterface RequireAuthProps {\n  children: ReactNode;\n  requiredRole?: UserRole;\n  allowedRoles?: UserRole[];\n}\n\nconst RequireAuth = ({ children, requiredRole, allowedRoles }: RequireAuthProps) => {\n  const { currentUser, loading, hasRole } = useAuth();\n  const location = useLocation();\n\n  if (loading) {\n    // Show loading state while we check auth\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"w-16 h-16 border-4 border-primary border-t-transparent rounded-full animate-spin mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // If not logged in, redirect to login page\n  if (!currentUser) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // If role is required and user doesn't have it, redirect to dashboard\n  if (requiredRole && !hasRole(requiredRole)) {\n    return <Navigate to=\"/dashboard\" replace />;\n  }\n\n  // If allowed roles are specified, check if user has one of them\n  if (allowedRoles && allowedRoles.length > 0) {\n    const hasAllowedRole = allowedRoles.some(role => hasRole(role));\n    if (!hasAllowedRole) {\n      return <Navigate to=\"/dashboard\" replace />;\n    }\n  }\n\n  // Render the protected content\n  return <>{children}</>;\n};\n\nexport default RequireAuth;","/**\n * Content Protection Utility for preventing copy/paste/download of sensitive content\n */\n\nexport type ProtectionLevel = 'basic' | 'medium' | 'high';\n\n/**\n * Apply content protection to the document by disabling various copy methods\n * @param {ProtectionLevel} level - Protection level: 'basic', 'medium', or 'high'\n */\nexport const applyContentProtection = (level: ProtectionLevel = 'medium'): void => {\n  // Disable right-click context menu on protected elements\n  document.addEventListener('contextmenu', (e) => {\n    const target = e.target as HTMLElement;\n    if (target.closest('.protected-content')) {\n      e.preventDefault();\n      return false;\n    }\n    return true;\n  });\n\n  // Disable text selection (medium or high protection)\n  if (level === 'medium' || level === 'high') {\n    document.addEventListener('selectstart', (e) => {\n      const target = e.target as HTMLElement;\n      if (target.closest('.protected-content')) {\n        e.preventDefault();\n        return false;\n      }\n      return true;\n    });\n  }\n\n  // Disable keyboard shortcuts for copy/paste (medium or high protection)\n  if (level === 'medium' || level === 'high') {\n    document.addEventListener('keydown', (e) => {\n      const target = e.target as HTMLElement;\n      if (target.closest('.protected-content')) {\n        // Ctrl+C, Cmd+C, Ctrl+P, Cmd+P, etc.\n        if ((e.ctrlKey || e.metaKey) && (\n          e.key === 'c' || \n          e.key === 'p' || \n          e.key === 's' ||\n          e.key === 'a'\n        )) {\n          e.preventDefault();\n          return false;\n        }\n      }\n      return true;\n    });\n  }\n\n  // Advanced protection (high level only)\n  if (level === 'high') {\n    // Disable dragging of content\n    document.addEventListener('dragstart', (e) => {\n      const target = e.target as HTMLElement;\n      if (target.closest('.protected-content')) {\n        e.preventDefault();\n        return false;\n      }\n      return true;\n    });\n\n    // Monitor for clipboard access attempts\n    document.addEventListener('copy', (e) => {\n      const target = e.target as HTMLElement;\n      if (target.closest('.protected-content')) {\n        e.preventDefault();\n        return false;\n      }\n      return true;\n    });\n\n    // Prevent print screen attempts (limited effectiveness)\n    document.addEventListener('keyup', (e) => {\n      if (e.key === 'PrintScreen') {\n        // Can't really prevent print screen, but can detect it\n        console.log('Print screen attempted');\n      }\n    });\n  }\n};\n\n/**\n * Add a content protection watermark with user information to deter sharing\n * @param {string} username - Username to display in watermark\n */\nexport const addWatermark = (username: string): void => {\n  const watermark = document.createElement('div');\n  watermark.className = 'watermark';\n  watermark.innerHTML = `Confidential - ${username} - ${new Date().toLocaleDateString()}`;\n  \n  // Style the watermark\n  watermark.style.position = 'fixed';\n  watermark.style.top = '50%';\n  watermark.style.left = '50%';\n  watermark.style.transform = 'translate(-50%, -50%) rotate(-45deg)';\n  watermark.style.fontSize = '2rem';\n  watermark.style.color = 'rgba(0, 0, 0, 0.1)';\n  watermark.style.pointerEvents = 'none';\n  watermark.style.zIndex = '1000';\n  watermark.style.whiteSpace = 'nowrap';\n  \n  document.body.appendChild(watermark);\n};\n\n/**\n * Remove content protection features\n */\nexport const removeContentProtection = (): void => {\n  // Remove watermark if it exists\n  const watermark = document.querySelector('.watermark');\n  if (watermark) {\n    watermark.remove();\n  }\n  \n  // Note: Event listeners added via addEventListener cannot be easily removed\n  // unless references to the original functions are saved\n  // To properly remove protection, page reload is typically required\n};","import * as React from \"react\"\nimport { Cross2Icon } from \"@radix-ui/react-icons\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/utils/cn\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-destructive/30 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <Cross2Icon className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}","import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}","import React, { useEffect } from 'react';\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\n\n// Layouts\nimport MainLayout from './layouts/MainLayout';\n\n// Auth pages\nimport Login from './pages/auth/Login';\n\n// Dashboard\nimport Dashboard from './pages/dashboard/Dashboard';\n\n// SOPs pages\nimport SOPs from './pages/sops/SOPs';\nimport SOPDetail from './pages/sops/SOPDetail';\nimport SOPEdit from './pages/sops/SOPEdit';\n\n// Scripts pages\nimport Scripts from './pages/scripts/Scripts';\nimport ScriptDetail from './pages/scripts/ScriptDetail';\nimport ScriptEdit from './pages/scripts/ScriptEdit';\n\n// Forms pages\nimport Forms from './pages/forms/Forms';\nimport FormDetail from './pages/forms/FormDetail';\nimport FormEdit from './pages/forms/FormEdit';\n\n// Tools pages\nimport Tools from './pages/tools/Tools';\nimport MortgageCalculator from './pages/tools/MortgageCalculator';\nimport RateComparisonTool from './pages/tools/RateComparisonTool';\nimport DocumentFinder from './pages/tools/DocumentFinder';\nimport ClosingCostEstimator from './pages/tools/ClosingCostEstimator';\nimport PropertyLookupTool from './pages/tools/PropertyLookupTool';\nimport SchedulingAssistant from './pages/tools/SchedulingAssistant';\nimport LoanProgramFinder from './pages/tools/LoanProgramFinder';\nimport DataExportTool from './pages/tools/DataExportTool';\n\n// Settings\nimport Settings from './pages/settings/Settings';\n\n// Auth context\nimport { AuthProvider, useAuth, UserRole } from './contexts/AuthContext';\nimport RequireAuth from './components/RequireAuth';\n\n// Content protection\nimport { applyContentProtection } from './utils/contentProtection';\n\n// UI Components\nimport { Toaster } from './components/ui/toaster';\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    // Apply content protection when app loads\n    applyContentProtection('medium');\n  }, []);\n\n  return (\n    <AuthProvider>\n      <Router>\n        <Routes>\n          {/* Public routes */}\n          <Route path=\"/login\" element={<Login />} />\n          \n          {/* Protected routes with MainLayout */}\n          <Route \n            path=\"/dashboard\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <Dashboard />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          \n          {/* SOPs routes */}\n          <Route \n            path=\"/sops\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <SOPs />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/sops/:id\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <SOPDetail />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/sops/edit/:id\" \n            element={\n              <RequireAuth allowedRoles={[UserRole.ADMIN]}>\n                <MainLayout>\n                  <SOPEdit />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          \n          {/* Scripts routes */}\n          <Route \n            path=\"/scripts\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <Scripts />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/scripts/:id\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <ScriptDetail />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/scripts/edit/:id\" \n            element={\n              <RequireAuth allowedRoles={[UserRole.ADMIN]}>\n                <MainLayout>\n                  <ScriptEdit />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          \n          {/* Forms routes */}\n          <Route \n            path=\"/forms\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <Forms />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/forms/:id\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <FormDetail />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/forms/edit/:id\" \n            element={\n              <RequireAuth allowedRoles={[UserRole.ADMIN]}>\n                <MainLayout>\n                  <FormEdit />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          \n          {/* Tools routes */}\n          <Route \n            path=\"/tools\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <Tools />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/tools/calculator\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <MortgageCalculator />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/tools/rates\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <RateComparisonTool />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/tools/docs\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <DocumentFinder />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/tools/closing-costs\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <ClosingCostEstimator />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/tools/property\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <PropertyLookupTool />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/tools/schedule\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <SchedulingAssistant />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/tools/programs\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <LoanProgramFinder />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          <Route \n            path=\"/tools/export\" \n            element={\n              <RequireAuth allowedRoles={[UserRole.ADMIN]}>\n                <MainLayout>\n                  <DataExportTool />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          \n          {/* Settings route */}\n          <Route \n            path=\"/settings\" \n            element={\n              <RequireAuth>\n                <MainLayout>\n                  <Settings />\n                </MainLayout>\n              </RequireAuth>\n            } \n          />\n          \n          {/* Redirect root to dashboard if logged in, otherwise to login */}\n          <Route \n            path=\"/\" \n            element={<Navigate to=\"/dashboard\" />} \n          />\n          \n          {/* Catch all - redirect to dashboard */}\n          <Route \n            path=\"*\" \n            element={<Navigate to=\"/dashboard\" />} \n          />\n        </Routes>\n      </Router>\n      <Toaster />\n    </AuthProvider>\n  );\n}\n\nexport default App;","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App'\n\nconst rootElement = document.getElementById('root')\n\nif (!rootElement) {\n  throw new Error('Failed to find the root element')\n}\n\ncreateRoot(rootElement).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["cn","inputs","twMerge","clsx","Avatar","React.forwardRef","className","props","ref","jsx","AvatarPrimitive.Root","AvatarImage","AvatarPrimitive.Image","AvatarFallback","AvatarPrimitive.Fallback","buttonVariants","cva","Button","variant","size","asChild","Comp","Slot","Input","type","UserRole","USER_ROLES","MOCK_USERS","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","useState","loading","setLoading","useEffect","savedUser","value","email","password","user","u","safeUser","role","useAuth","context","useContext","MainLayout","sidebarOpen","setSidebarOpen","logout","location","useLocation","navigate","useNavigate","handleLogout","navigation","Home","BookOpen","FileText","PenTool","Calculator","Settings","isActive","path","jsxs","X","item","Link","Menu","Search","_a","LogOut","Card","CardHeader","CardTitle","CardDescription","CardContent","CardFooter","TOAST_LIMIT","TOAST_REMOVE_DELAY","count","genId","toastTimeouts","addToRemoveQueue","toastId","timeout","dispatch","reducer","state","action","t","toast","listeners","memoryState","listener","id","update","dismiss","open","useToast","setState","React.useState","React.useEffect","index","Login","setEmail","setPassword","error","setError","isLoading","setIsLoading","login","handleSubmit","e","err","AlertCircle","Dashboard","metrics","recentUpdates","metric","Bell","DropdownMenu","DropdownMenuPrimitive.Root","DropdownMenuTrigger","DropdownMenuPrimitive.Trigger","DropdownMenuGroup","DropdownMenuPrimitive.Group","DropdownMenuSubTrigger","inset","DropdownMenuPrimitive.SubTrigger","ChevronRight","DropdownMenuSubContent","DropdownMenuPrimitive.SubContent","DropdownMenuContent","sideOffset","DropdownMenuPrimitive.Portal","DropdownMenuPrimitive.Content","DropdownMenuItem","DropdownMenuPrimitive.Item","DropdownMenuCheckboxItem","checked","DropdownMenuPrimitive.CheckboxItem","DropdownMenuPrimitive.ItemIndicator","Check","DropdownMenuRadioItem","DropdownMenuPrimitive.RadioItem","Circle","DropdownMenuLabel","DropdownMenuPrimitive.Label","DropdownMenuSeparator","DropdownMenuPrimitive.Separator","badgeVariants","Badge","Skeleton","SOP_CATEGORIES","MOCK_SOPS","SOPCard","sop","viewMode","isAdmin","Folder","SOPs","searchTerm","setSearchTerm","selectedCategory","setSelectedCategory","setViewMode","filteredSOPs","matchesSearch","matchesCategory","handleSearch","Plus","Filter","category","LayoutGrid","List","_","Fragment","Breadcrumb","BreadcrumbList","BreadcrumbItem","BreadcrumbLink","BreadcrumbPage","BreadcrumbSeparator","AlertDialog","AlertDialogPrimitive.Root","AlertDialogTrigger","AlertDialogPrimitive.Trigger","AlertDialogPortal","AlertDialogPrimitive.Portal","AlertDialogOverlay","AlertDialogPrimitive.Overlay","AlertDialogContent","AlertDialogPrimitive.Content","AlertDialogHeader","AlertDialogFooter","AlertDialogTitle","AlertDialogPrimitive.Title","AlertDialogDescription","AlertDialogPrimitive.Description","AlertDialogAction","AlertDialogPrimitive.Action","AlertDialogCancel","AlertDialogPrimitive.Cancel","MOCK_SOP_CONTENT","SOPDetail","useParams","setSop","showDeleteAlert","setShowDeleteAlert","handlePrint","handleDelete","handleContextMenu","ArrowLeft","Calendar","User","Clock","Printer","Edit","Trash2","AlertTriangle","Textarea","labelVariants","Label","LabelPrimitive.Root","Select","SelectPrimitive.Root","SelectValue","SelectPrimitive.Value","SelectTrigger","SelectPrimitive.Trigger","SelectPrimitive.Icon","ChevronDown","SelectScrollUpButton","SelectPrimitive.ScrollUpButton","ChevronUp","SelectScrollDownButton","SelectPrimitive.ScrollDownButton","SelectContent","position","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectLabel","SelectPrimitive.Label","SelectItem","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","SelectPrimitive.ItemText","SelectSeparator","SelectPrimitive.Separator","Tabs","TabsPrimitive.Root","TabsList","TabsPrimitive.List","TabsTrigger","TabsPrimitive.Trigger","TabsContent","TabsPrimitive.Content","DEFAULT_NEW_SOP","SOPEdit","isEditing","activeTab","setActiveTab","saving","setSaving","handleChange","name","prev","handleCategoryChange","handleSave","Save","SCRIPT_CATEGORIES","MOCK_SCRIPTS","ScriptCard","script","Scripts","filteredScripts","MOCK_SCRIPT_CONTENT","ScriptDetail","setScript","DEFAULT_NEW_SCRIPT","ScriptEdit","MOCK_FORMS","FORM_CATEGORIES","FormCard","form","File","Forms","filteredForms","MOCK_FORM_DATA","FormDetail","setForm","copyButtonText","setCopyButtonText","handleCopyCode","Copy","Checkbox","CheckboxPrimitive.Root","CheckboxPrimitive.Indicator","FIELD_TYPES","DEFAULT_NEW_FORM","FormEdit","handleAddField","newField","handleRemoveField","fieldId","field","handleFieldChange","property","ToolCard","Icon","title","description","href","color","Tools","hasRole","availableTools","BarChart","FileSearch","DollarSign","Map","Database","tool","MortgageCalculator","loanAmount","setLoanAmount","interestRate","setInterestRate","loanTerm","setLoanTerm","monthlyPayment","setMonthlyPayment","totalInterest","setTotalInterest","totalPayment","setTotalPayment","amortizationSchedule","setAmortizationSchedule","calculateMortgage","monthlyRate","numberOfPayments","balance","schedule","i","interestPayment","principalPayment","formatCurrency","Percent","row","Table","TableHeader","TableBody","TableFooter","TableRow","TableHead","TableCell","TableCaption","RateComparisonTool","loanType","setLoanType","lastUpdated","setLastUpdated","rateOptions","setRateOptions","mockRateOptions","filteredOptions","option","recalculatedOptions","formatPercent","getLoanTypeBadgeColor","refreshRates","updatedOptions","rateChange","RefreshCcw","Download","DOCUMENT_CATEGORIES","LOAN_TYPES","MOCK_DOCUMENTS","DocumentFinder","selectedLoanType","setSelectedLoanType","requiredOnly","setRequiredOnly","documents","setDocuments","filteredDocuments","doc","handleSearchChange","resetFilters","Tag","CheckCircle","format","XCircle","Slider","SliderPrimitive.Root","SliderPrimitive.Track","SliderPrimitive.Range","SliderPrimitive.Thumb","Switch","SwitchPrimitives.Root","SwitchPrimitives.Thumb","Accordion","AccordionPrimitive.Root","AccordionItem","AccordionPrimitive.Item","AccordionTrigger","AccordionPrimitive.Header","AccordionPrimitive.Trigger","AccordionContent","AccordionPrimitive.Content","STATE_OPTIONS","PROPERTY_TYPES","CREDIT_SCORE_RANGES","ClosingCostEstimator","defaultFormState","formState","setFormState","closingCosts","setClosingCosts","isAdvancedMode","setIsAdvancedMode","isCalculating","setIsCalculating","downPaymentPercentage","handlePropertyValueChange","handleDownPaymentChange","validDownPayment","handleDownPaymentPercentageChange","percentage","downPayment","handleInputChange","handleSelectChange","calculateClosingCosts","originationFee","applicationFee","underwritingFee","processingFee","creditReportFee","appraisalFee","titleServices","surveyFee","attorneyFee","recordingFees","transferTaxes","prepaidInterest","homeInspection","escrowDeposit","totalLoanCosts","totalThirdPartyCosts","totalClosingCosts","cashToClose","resetForm","handleSaveEstimate","handlePrintEstimate","range","_b","_c","_d","_e","PropertyLookupTool","searchQuery","setSearchQuery","isSearching","setIsSearching","hasSearched","setHasSearched","propertyDetails","setPropertyDetails","comparables","setComparables","formatDate","dateString","date","Building","Landmark","comp","Files","Info","SchedulingAssistant","selectedDate","setSelectedDate","showAppointmentForm","setShowAppointmentForm","meetingType","setMeetingType","selectedTimeSlot","setSelectedTimeSlot","appointmentTitle","setAppointmentTitle","clientName","setClientName","clientEmail","setClientEmail","clientPhone","setClientPhone","appointmentNotes","setAppointmentNotes","appointments","setAppointments","timeSlots","hour","minute","time","isAvailable","app","formatDateDisplay","nextDay","next","prevDay","handleTimeSlotSelect","handleCreateAppointment","endTime","newAppointment","handleCancelAppointment","appointmentsForSelectedDate","a","b","todayAppointments","upcomingAppointments","ChevronLeft","slot","appointment","Phone","Video","UserPlus","MessageCircle","day","RadioGroup","RadioGroupPrimitive.Root","RadioGroupItem","RadioGroupPrimitive.Item","RadioGroupPrimitive.Indicator","LoanProgramFinder","matchingPrograms","setMatchingPrograms","savedPrograms","setSavedPrograms","loanPrograms","findMatchingPrograms","matches","program","toggleSaveProgram","isAlreadySaved","p","isProgramSaved","programId","renderProgramCard","isSaved","Wallet","req","term","benefit","best","consideration","InfoIcon","DataExportTool","exportName","setExportName","dateRange","setDateRange","exportFormat","setExportFormat","selectedFields","setSelectedFields","isExporting","setIsExporting","showSaveModal","setShowSaveModal","saveReportName","setSaveReportName","saveReportDescription","setSaveReportDescription","availableFields","exportHistory","savedReports","fieldCategories","toggleField","toggleCategory","selected","categoryFieldIds","fieldsToAdd","isCategorySelected","isCategoryPartiallySelected","someSelected","allSelected","handleExport","formatCategoryName","word","handleSaveReport","runSavedReport","reportId","report","r","FileDown","f","isAllSelected","isPartiallySelected","idx","filter","export_item","darkMode","setDarkMode","toggleDarkMode","tabs","Shield","Moon","Lock","tab","Sun","HelpCircle","RequireAuth","requiredRole","allowedRoles","Navigate","applyContentProtection","level","ToastProvider","ToastPrimitives.Provider","ToastViewport","ToastPrimitives.Viewport","toastVariants","Toast","ToastPrimitives.Root","ToastAction","ToastPrimitives.Action","ToastClose","ToastPrimitives.Close","Cross2Icon","ToastTitle","ToastPrimitives.Title","ToastDescription","ToastPrimitives.Description","Toaster","toasts","App","Router","Routes","Route","rootElement","createRoot","StrictMode"],"mappings":"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,IAAK,CACP,EACA,eAAgB,CAAC,gBAAiB,eAAe,EACjD,wBAAyB,CACvB,qCACA,uCACA,iCACA,wBACF,EACA,SAAU,CACR,kCACA,6BACA,kCACF,EACA,eAAgB,CACd,sEACA,yCACA,sCACF,EACA,QAAS,CACP,iDACA,yCACA,6CACF,CACF,EACA,CACE,GAAI,EACJ,KAAM,eACN,KAAM,KACN,YAAa,2FACb,eAAgB,EAChB,eAAgB,IAChB,cAAe,OACf,kBAAmB,CACjB,IAAK,EACL,IAAK,IACP,EACA,eAAgB,CAAC,gBAAiB,eAAe,EACjD,wBAAyB,CACvB,+CACA,4CACA,gDACA,wBACF,EACA,SAAU,CACR,2BACA,gCACA,6BACA,uBACF,EACA,eAAgB,CACd,0CACA,4CACA,oCACF,EACA,QAAS,CACP,wCACA,0CACA,wDACF,CACF,EACA,CACE,GAAI,EACJ,KAAM,yBACN,KAAM,OACN,YAAa,8EACb,eAAgB,EAChB,eAAgB,IAChB,cAAe,OACf,kBAAmB,CACjB,IAAK,KACL,IAAK,IACP,EACA,eAAgB,CAAC,eAAe,EAChC,wBAAyB,CACvB,+CACA,qDACA,8BACA,wBACF,EACA,SAAU,CACR,2BACA,0CACA,4BACF,EACA,eAAgB,CACd,4CACA,4CACA,sBACA,yBACF,EACA,QAAS,CACP,wCACA,6CACA,mDACF,CACF,EACA,CACE,GAAI,EACJ,KAAM,aACN,KAAM,QACN,YAAa,6EACb,eAAgB,GAChB,eAAgB,IAChB,cAAe,IACf,kBAAmB,CACjB,IAAK,KACL,IAAK,GACP,EACA,eAAgB,CAAC,gBAAiB,gBAAiB,UAAW,UAAU,EACxE,wBAAyB,CACvB,8BACA,iCACA,0CACA,4BACF,EACA,SAAU,CACR,gCACA,yCACA,8BACF,EACA,eAAgB,CACd,mCACA,mCACA,8BACA,sBACF,EACA,QAAS,CACP,0CACA,kCACA,0CACF,CACF,CAAA,EAIIC,EAAuB,IAAM,CACjC3E,EAAe,EAAI,EAGnB,WAAW,IAAM,CAET,MAAA4E,EAAUF,EAAa,OAAkBG,GAEzC,EAAA7H,EAAU,YAA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"}